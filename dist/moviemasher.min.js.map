{"version":3,"file":"moviemasher.min.js","sources":["../src/Utilities/Color.ts","../src/Setup/Default.ts","../src/Setup/Errors.ts","../src/Setup/Parameter.ts","../src/Utilities/Is.ts","../src/Setup/Enums.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Utilities/Capitalize.ts","../src/Utilities/Element.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Id.ts","../src/Utilities/Round.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/TrackRange.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Loading/Cache.ts","../src/Loading/Loader.ts","../src/Loading/Processor.ts","../src/Mash/Instance/Instance.ts","../src/Mash/Definition/Definition.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Mash/Audio/AudioProcessor.ts","../src/Mash/Font/FontProcessor.ts","../src/Loading/ProcessorFactory.ts","../src/Mash/Audio/AudioLoader.ts","../src/Mash/Font/FontLoader.ts","../src/Mash/Image/ImageLoader.ts","../src/Mash/Video/VideoLoader.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/MovieMasher/MovieMasher.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Masher/MasherInstance.ts","../src/Mash/Masher/MasherDefinition.ts","../src/Mash/Masher/MasherFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Factories/index.ts","../src/Utilities/Seconds.ts"],"sourcesContent":["import { Rgb, RgbObject, Yuv, YuvObject } from \"../declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst colorYuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst colorRgb2hex = (rgb: RgbObject): string => {\n  // unused after 5.0 refactor, but perhaps needed?\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst colorYuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst colorRgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst colorStrip = (color: string): string => color.toLowerCase().replaceAll(/[\\s]/g, '')\n\n\nconst colorValid = (color: string): boolean => {\n  const colorStripped = colorStrip(color)\n  const style = new Option().style\n  style.color = color\n  const styleStripped = colorStrip(style.color)\n  if (!styleStripped) return false\n\n  if (styleStripped.startsWith('rgb')) return true\n\n  return styleStripped === colorStripped\n}\n\nconst colorTransparent = '#00000000'\n\nconst Color = {\n  valid: colorValid,\n  yuvBlend: colorYuvBlend,\n  rgb2yuv: colorRgb2yuv,\n  yuv2rgb: colorYuv2rgb,\n  rgb2hex: colorRgb2hex,\n  transparent: colorTransparent,\n  strip: colorStrip,\n}\nexport {\n  Color,\n  colorStrip,\n  colorValid,\n  colorRgb2hex,\n  colorYuv2rgb,\n  colorRgb2yuv,\n  colorYuvBlend,\n  colorTransparent,\n}\n","import { colorTransparent } from \"../Utilities/Color\"\n\nconst Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 30,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: colorTransparent,\n    gain: 0.75,\n    buffer: 10,\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { pattern: '%.jpg', fps: 30, increment: 1, begin: 1  },\n  },\n}\n\nexport { Default }\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    canvas: `${$invalidArgument} canvas `,\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  deprecation: {\n    property_types: `property_types ${$deprecated} - please get MovieMasher.Property.types instead`,\n    addModulesOfType: `addModulesOfType ${$deprecated} for unsupported type `,\n    configure: {\n      get: `configure ${$deprecated} - please get MovieMasher.defaults instead`,\n      set: `configure ${$deprecated} - please supply mash.quantize and media.duration instead`,\n    },\n    canvas_context: {\n      get: `canvas_context ${$deprecated} - please get visibleContext instead`,\n      set: `canvas_context ${$deprecated} - please set visibleContext instead`,\n    }\n  },\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { JsonObject, ScalarValue, ValueObject } from \"../declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { ScalarArray, UnknownObject } from \"../declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Mash = 'mash',\n  Masher = 'masher',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Canvas = 'canvaschange',\n  Duration = 'durationchange',\n  Ended = 'ended',\n  Fps = 'ratechange',\n  Loaded = 'loadeddata',\n  Mash = 'mashchange',\n  Pause = 'pause',\n  Play = 'play',\n  Playing = 'playing',\n  Seeked = 'seeked',\n  Seeking = 'seeking',\n  Selection = 'selection',\n  Time = 'timeupdate',\n  Track = 'track',\n  Volume = 'volumechange',\n  Waiting = 'waiting',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n  Video = 'video',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","import { ScalarValue } from \"../../declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst definitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = () : void => { definitionsMap.clear() }\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(id)\n    throw Errors.unknown.definition + 'definitionsFromId ' + id\n  }\n\n  const definition = definitionsMap.get(id)\n  if (!definition) throw Errors.internal\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  // console.log(\"definitionsInstall\", type, id)\n  definitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => definitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) return\n\n  const definition = definitionsFromId(id)\n  definitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal + 'definitionsUninstall'\n\n  // console.log(\"definitionsUninstall\", definition.label || definition.id)\n  definitions.splice(index, 1)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: definitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  definitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { ScalarRaw, SelectionValue } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { colorValid } from \"../../Utilities/Color\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { isNan } from \"../../Utilities/Is\"\n\n\n\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  coerce(value: SelectionValue): ScalarRaw | undefined {\n    const string = String(value)\n    const number = Number(value)\n\n    if (this.modular && !Definitions.fromId(string)) return\n\n    switch (this.id) {\n      case DataType.Boolean: return !!value\n      case DataType.Number:\n      case DataType.Fontsize:\n      case DataType.Pixel: {\n        if (isNan(number)) return\n\n        return number\n      }\n      case DataType.Integer: {\n        if (isNan(number)) return\n\n        return Math.round(number)\n      }\n      case DataType.Rgb:\n      case DataType.Rgba: {\n        if (!colorValid(string)) return\n\n        break\n      }\n      case DataType.Direction4:\n      case DataType.Direction8:\n      case DataType.Mode: {\n        if (!this.values?.find(object => { object.id === string })) return\n\n        break\n      }\n    }\n    return string\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarRaw } from \"../../declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) throw Errors.type + 'propertyType ' + type\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarRaw } from \"../declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\nexport { Property, PropertyObject }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { ScrollMetrics } from '../declarations'\n\n\nconst ElementScrollProps = [\n  'scrollPaddingleft',\n  'scrollPaddingRight',\n  'scrollPaddingTop',\n  'scrollPaddingBottom',\n]\nconst elementScrollMetrics = (element?: Element | null): ScrollMetrics | undefined => {\n  if (!element) return\n\n  const style: CSSStyleDeclaration = getComputedStyle(element)\n  const entries = ElementScrollProps.map(key => {\n    const value = style.getPropertyValue(key) || '0px'\n    const number = Number(value.slice(0, -2))\n    return [key, isNaN(number) ? 0 : number]\n  })\n  const { scrollLeft, scrollTop } = element\n  const { x, y, width, height } = element.getBoundingClientRect()\n  entries.push(['scrollLeft', scrollLeft])\n  entries.push(['scrollTop', scrollTop])\n  entries.push(['x', x])\n  entries.push(['y', y])\n  entries.push(['width', width])\n  entries.push(['height', height])\n  return Object.fromEntries(entries)\n}\n\nconst Element = {\n  scrollMetrics: elementScrollMetrics,\n}\n\nexport { Element, elementScrollMetrics }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","const Id = () : string => {\n  return `${Date.now().toString(36)}${Math.random().toString(36).substr(2)}`\n}\n\nexport { Id }\n","import { NumberConverter } from \"../declarations\"\n\nconst roundMethod = (rounding = '') : NumberConverter => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number: number, method = ''): number => {\n  const func = roundMethod(method)\n  return func(number)\n}\n\nconst Round = {\n  method: roundMethod,\n  withMethod: roundWithMethod,\n}\n\nexport { Round, roundMethod, roundWithMethod }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../declarations\"\nimport { roundWithMethod } from \"./Round\"\n\nconst pixelFromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst pixelToPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst pixelToIndex = (pixel : number) => pixel * 4\n\nconst pixelRgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst pixelRgba = (pixel : number, data : Pixels) => pixelRgbaAtIndex(pixelToIndex(pixel), data)\n\nconst pixelSafe = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = pixelToPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return pixelFromPoint(pt, width)\n}\n\nconst pixelNeighboringPixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(pixelSafe(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst pixelNeighboringRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  pixelNeighboringPixels(pixel, size).map(p => pixelRgba(p, data))\n)\n\nconst pixelColor = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nconst pixelPerFrame = (frames: number, width: number, zoom: number): number => {\n  if (!(frames && width)) return 0\n\n  const widthFrames = width / frames\n\n  const min = Math.min(1, widthFrames)\n  const max = Math.max(1, widthFrames)\n  if (zoom === 1) return max\n  if (!zoom) return min\n\n  return min + ((max - min) * zoom)\n}\n\nconst pixelFromFrame = (frame: number, perFrame : number, rounding = 'ceil'): number => {\n  if (!(frame && perFrame)) return 0\n\n  const pixels = frame * perFrame\n  return roundWithMethod(pixels, rounding)\n}\n\nconst pixelToFrame = (pixels: number, perFrame : number, rounding = 'round'): number => {\n  if (!(pixels && perFrame)) return 0\n\n  return roundWithMethod(pixels / perFrame, rounding)\n}\n\nconst Pixel = {\n  color: pixelColor,\n  fromFrame: pixelFromFrame,\n  neighboringRgbas: pixelNeighboringRgbas,\n  perFrame: pixelPerFrame,\n  rgbaAtIndex: pixelRgbaAtIndex,\n  toFrame: pixelToFrame,\n}\n\nexport {\n  Pixel,\n  pixelColor,\n  pixelFromFrame,\n  pixelNeighboringRgbas,\n  pixelPerFrame,\n  pixelRgbaAtIndex,\n  pixelToFrame,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { roundWithMethod } from \"./Round\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst timeEqualizeRates = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = Number(this.frame / this.fps) * Number(fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return timeEqualizeRates(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, timeEqualizeRates }\n","import { Is } from \"./Is\"\nimport { Time, timeEqualizeRates } from \"./Time\"\nimport { roundWithMethod } from \"./Round\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = timeEqualizeRates(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> timeEqualizeRates(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> timeEqualizeRates(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { TrackType } from \"../Setup/Enums\"\n\nclass TrackRange {\n  constructor(first = 0, last = -1, type? : TrackType) {\n    this.first = first\n    this.last = last\n    this.type = type\n  }\n\n  get count(): number { return 1 + this.last - this.first }\n\n  last = -1\n\n  get relative(): boolean { return this.last < 0 }\n\n  equals(trackRange: TrackRange): boolean {\n    return this.last === trackRange.last && this.first === trackRange.first\n  }\n\n  first = 0\n\n  get tracks(): number[] {\n    if (this.last < 0) return []\n\n    return Array(this.last - this.first + 1).fill(0).map((_, idx) => this.first + idx)\n  }\n\n  toString(): string { return `[${this.type || 'av'}-${this.first}-${this.last}]` }\n\n  type?: TrackType\n\n  withEnd(last: number): TrackRange {\n    return TrackRange.fromArgs(this.first, last, this.type)\n  }\n\n  withMax(max: number): TrackRange { return this.withEnd(max + this.last) }\n\n  static ofType(type: TrackType, last = -1, first = 0): TrackRange {\n    return this.fromArgs(first, last, type)\n  }\n  static fromArgs(first = 0, last = -1, type?: TrackType): TrackRange {\n    return new TrackRange(first, last, type)\n  }\n}\n\nexport { TrackRange }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Mash | Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Mash | Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target.setValue(this.property, this.redoValue)\n  }\n\n  undoAction() : void {\n    this.target.setValue(this.property, this.undoValue)\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.redoValueNumeric)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.undoValueNumeric)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.redoValueNumeric, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.undoValueNumeric, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number, frames?: number[]) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex, frames)\n  }\n\n  redoAction() : void {\n    this.addClips(this.trackIndex, this.insertIndex, this.redoFrames)\n  }\n\n  undoAction() : void {\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex, this.undoFrames)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\nimport { Is } from \"../../Utilities\";\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  add(action : Action) : void {\n    const remove = this.instances.length - (this.index + 1)\n    if (Is.positive(remove)) this.instances.splice(this.index + 1, remove)\n\n    this.instances.push(action)\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  constructor() {\n    // console.trace(this.constructor.name, \"constructor\")\n  }\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      this.__context = new Klass()\n      // console.trace(this.constructor.name, \"context\", Klass.name, this.__context)\n    }\n    return this.__context\n  }\n\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    // console.log(this.constructor.name, \"createBuffer\", seconds, length)\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource(): AudioBufferSourceNode {\n    // console.trace(this.constructor.name, \"createBufferSource\")\n    return this.context.createBufferSource()\n  }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  get currentTime() : number { return this.context.currentTime }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n}\n","import {\n  Context2D,\n  ContextData,\n  ContextElement,\n  DrawingSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle,\n  UnknownObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Action } from \"../Editing/Action/Action\"\nimport { EventType } from \"../Setup/Enums\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nclass VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    const { context2d } = object\n    // console.trace(\"VisibleContext\", \"constructor\", context2d)\n    if (context2d) this._context2d = context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : ContextElement { return this.context2d.canvas }\n\n  set canvas(value: ContextElement) {\n    const { canvas } = this\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.invalid.canvas\n\n    this.context2d = context2d\n\n    // have both the old and new canvas broadcast event\n    this.emit(EventType.Canvas, {}, canvas)\n    this.emit(EventType.Canvas)\n  }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  private get context2d() : Context2D {\n    if (!this._context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this._context2d = context\n    }\n    return this._context2d\n  }\n\n  private set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this._context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : DrawingSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : DrawingSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : DrawingSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : DrawingSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : DrawingSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : DrawingSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : DrawingSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : DrawingSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : DrawingSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n  emit(type: EventType, detail: UnknownObject = {}, target?: ContextElement): void {\n    const element = target ? target : this.canvas\n    const event = { detail }\n    // console.log(\"emit\", type, this.canvas)\n    element.dispatchEvent(new CustomEvent(type, event))\n  }\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : DrawingSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private _context2d? : Context2D\n}\n\ninterface EventsDetail {\n  action? : Action\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { VisibleContext, EventsType, EventsDetail}\n","import { Size, Context2D, ContextElement } from \"../declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromCanvas(canvas : ContextElement) : VisibleContext {\n    const context = this.visible()\n    context.canvas = canvas\n    return context\n  }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","\nimport { Any } from \"../declarations\"\nimport { AudibleContext } from \"../Playing/AudibleContext\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n  constructor() {\n    this.audibleContext = ContextFactory.audible()\n    // this.audioContext = this.audibleContext.context\n  }\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  audibleContext: AudibleContext\n  // audioContext: AudioContext\n\n  cached(url : string) : boolean {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return this.cachedByKey.has(this.key(url))\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  get(url : string) : Any | undefined {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.log(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any, LoadPromise } from \"../declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader  {\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { Any } from \"../declarations\"\n\nclass Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { Processor }\n","import { Any, JsonObject, LoadPromise, SelectionObject, SelectionValue } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Id } from \"../../Utilities\";\n\ninterface InstanceObject {\n  [index: string]: unknown\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceClass {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceClass'\n\n    const { definition, id, label } = <InstanceObject> object\n    if (!definition) throw Errors.invalid.definition.object + 'InstanceClass'\n\n    this.definition = definition\n    if (id && id !== definition.id) this._id = id\n    if (label && label !== definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  protected _id? : string\n\n  get id() : string { return this._id || this.definition.id }\n\n  private _identifier?: string\n\n  get identifier() : string { return this._identifier ||= Id() }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  load(quantize : number, start : Time, end? : Time) : LoadPromise {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.load(startTime, endTime)\n  }\n\n  loaded(quantize : number, start : Time, end? : Time) : boolean {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.loaded(startTime, endTime)\n  }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  setValue(key: string, value: SelectionValue): boolean {\n    const property = this.definition.property(key)\n    if (!property) throw Errors.property + key\n\n    const { type } = property\n    const coerced = type.coerce(value)\n    if (typeof coerced === 'undefined') {\n      console.error(this.constructor.name, \"setValue\", key, value)\n      return false\n    }\n\n    this[key] = coerced\n    return true\n  }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + key\n\n    return <SelectionValue> value\n  }\n}\n\ninterface Instance extends InstanceClass {}\n\nexport { Instance, InstanceClass, InstanceObject }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, JsonObject, LoadPromise, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { Instance, InstanceClass, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionClass {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    this.label = label || id\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label : string\n\n  load(_start : Time, _end? : Time) : LoadPromise { return Promise.resolve() }\n\n  loaded(_start : Time, _end? : Time) : boolean { return true }\n\n  loadedAudible(_time?: Time) : Any {}\n\n  loadedVisible(_time?: Time) : Any {}\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label !== this.id) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionClass {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\nexport { Definition, DefinitionClass, DefinitionObject, DefinitionTimes }\n","import { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { Any, Constrained, JsonObject } from \"../../../declarations\"\nimport { Clip } from \"../Clip/Clip\"\nimport { AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst AudibleGainDelimiter = ','\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain, trim } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n      // cnsole.log(\"AudibleMixin gain\", typeof gain, gain, this.gain)\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize : number) : Time { return Time.fromArgs(this.trim, quantize) }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, Constrained, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Instance } from \"../../Instance\"\nimport { ClipObject } from \"./Clip\"\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n      const frame = Math.max(Math.min(time.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceClass)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nclass AudioClass extends AudioWithAudible {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, Constrained, ObjectUnknown } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","// import { AudibleContext, ContextFactory } from \"../../Playing\"\n// import { Any, LoadPromise, UnknownObject } from \"../../declarations\"\nimport { Processor } from \"../../Loading/Processor\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass AudioProcessor extends Processor {\n  // constructor(object? : UnknownObject | undefined) {\n  //   super()\n  //   if (object && object.audibleContext) {\n  //     this._audibleContext = <AudibleContext> object.audibleContext\n  //   }\n  //   else {\n  //     console.log(this.constructor.name, \"constructor initializing audibleContext\")\n  //     this._audibleContext = ContextFactory.audible()\n  //   }\n  // }\n\n  // get audibleContext() : AudibleContext { return this._audibleContext }\n\n  // set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  process(_url : string, buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return Cache.audibleContext.decode(buffer)\n  }\n\n  // _audibleContext : AudibleContext\n}\n\nexport { AudioProcessor }\n","import { LoadFontPromise } from \"../../declarations\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { Processor } from \"../../Loading/Processor\"\n\nclass FontProcessor extends Processor {\n  process(url : string, buffer : ArrayBuffer) : LoadFontPromise {\n    const family = Cache.key(url)\n    const face = new FontFace(family, buffer)\n    const promise = face.load().then(() => {\n      document.fonts.add(face)\n      return { family }\n    })\n    return promise\n  }\n}\n\nexport { FontProcessor }\n","import { AudioProcessor } from \"../Mash/Audio/AudioProcessor\"\nimport { FontProcessor } from \"../Mash/Font/FontProcessor\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\nimport { Processor } from \"./Processor\"\n\ntype ProcessorClassType = typeof Processor\n\nconst classes : {[index : string] : ProcessorClassType } = {\n  Audio: AudioProcessor,\n  Font: FontProcessor,\n}\n\nclass ProcessorClass {\n  audio() { return new classes.Audio() } //object : { audibleContext : AudibleContext}\n\n  font() { return new classes.Font() }\n\n  install(type : string, loader : ProcessorClassType) {\n    classes[Capitalize(type)] = loader\n  }\n}\n\nconst ProcessorFactory = new ProcessorClass()\nexport { ProcessorFactory }\n","import { ProcessorFactory } from \"../../Loading/ProcessorFactory\"\n// import { AudibleContext } from \"../../Playing\" // , ContextFactory\nimport { Loader } from \"../../Loading/Loader\"\n\n// import { UnknownObject } from \"../../declarations\"\nimport { LoadType} from \"../../Setup/Enums\"\n\nclass AudioLoader extends Loader {\n  // constructor(object? : UnknownObject | undefined) {\n  //   super()\n  //   if (object && object.audibleContext) {\n  //     this._audibleContext = <AudibleContext> object.audibleContext\n  //   }\n  //   else this._audibleContext = ContextFactory.audible()\n  // }\n\n  type = LoadType.Audio\n\n  // get audibleContext() : AudibleContext { return this._audibleContext }\n\n  // set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  async requestUrl(url: string): Promise<AudioBuffer> {\n    // console.log(this.constructor.name, \"requestUrl\", url)\n    const promise = new Promise<AudioBuffer>((resolve, reject) => {\n      fetch(url).then(response => {\n        // console.log(this.constructor.name, \"requestUrl.fetch\", url)\n        return response.arrayBuffer()\n      }).then(loaded => {\n        // console.log(this.constructor.name, \"requestUrl.fetch.arrayBuffer\", url)\n        const processor = ProcessorFactory.audio() //  options)\n        resolve(processor.process(url, loaded))\n      }).catch(error => reject(error))\n    })\n\n    return promise\n  }\n\n  // _audibleContext : AudibleContext\n}\n\nexport { AudioLoader }\n","import { LoadType } from \"../../Setup/Enums\"\nimport { ProcessorFactory } from \"../../Loading/ProcessorFactory\"\nimport { Loader } from \"../../Loading/Loader\"\nimport { LoadFontPromise } from \"../../declarations\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url : string) : LoadFontPromise {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(buffer => ProcessorFactory.font().process(url, buffer))\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadVideoPromise, DrawingSource } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass VideoLoader extends Loader {\n  type = LoadType.Video\n\n  requestUrl(url : string) : LoadVideoPromise {\n    const promise = new Promise<DrawingSource>((resolve, reject) => {\n      const video = document.createElement('video')\n      // document.body.appendChild(video)\n      video.crossOrigin = \"Anonymous\"\n      video.src = url\n      video.autoplay = true\n      video.oncanplay = (...args) => {\n        console.log(\"oncanplay!\", ...args)\n        resolve(video)\n      }\n      // video.onerror = error => {\n      //   console.error(this.constructor.name, \"requestUrl onerror\", error)\n      //   reject(`Failed to load ${url}`)\n      // }\n    })\n    return promise\n  }\n}\n\nexport { VideoLoader }\n","import { Loader } from \"./Loader\"\nimport { AudioLoader } from \"../Mash/Audio/AudioLoader\"\nimport { FontLoader } from \"../Mash/Font/FontLoader\"\nimport { ImageLoader } from \"../Mash/Image/ImageLoader\"\nimport { VideoLoader } from \"../Mash/Video/VideoLoader\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Video: VideoLoader,\n}\n\nclass LoaderClass {\n  audio() { return new classes.Audio() }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  video() { return new classes.Video()}\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, Constrained, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinition } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { stream, loops, duration, url, audio, source, waveform } = <AudibleDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (stream) this.stream = true\n      if (loops) this.loops = true\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    audible = true\n\n    // TODO: support streaming audio\n    load(start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(start, end)]\n      if (end) {\n        if (Cache.cached(this.urlAudible)) {\n          const cached = Cache.get(this.urlAudible)\n          if (cached instanceof Promise) promises.push(cached)\n        } else promises.push(LoaderFactory.audio().loadUrl(this.urlAudible))\n      }\n      return Promise.all(promises).then()\n    }\n\n    loaded(start : Time, end? : Time) : boolean {\n      return super.loaded(start, end) && Cache.cached(this.urlAudible)\n    }\n\n    loadedAudible(_time?: Time) : AudioBuffer | undefined {\n      return Cache.get(this.urlAudible)\n    }\n\n    loops = false\n\n    source? : string\n\n    stream = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      object.audio = this.urlAudible\n      if (this.loops) object.loops = true\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.urlAudible)) return\n\n      Cache.remove(this.urlAudible)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioDefinitionObject, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nclass AudioDefinitionClass extends AudioDefinitionWithAudible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MasherFactory } from \"../Masher/Masher\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Masher]?: MasherFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject } from \"./Audio\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\n/**\n * @internal\n */\nconst audioInstall = (object: AudioDefinitionObject): AudioDefinition => {\n  const instance = audioDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  install: audioInstall,\n  instance: audioInstance,\n}\n\nFactories.audio = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInstall,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    return this.definition.draw(evaluator, this.evaluated(evaluator))\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  retain = true\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n\n  // id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      array.push(Pixel.neighboringRgbas(index * 4, pixels, size).map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  // id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  // id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { pixelNeighboringRgbas } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = pixelNeighboringRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  // id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceClass {\n  declare definition : FontDefinition\n}\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\n\n\nclass FontDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n    Definitions.install(this)\n  }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    return new FontClass({ ...this.instanceObject, ...object })\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.source)) {\n      const cached = Cache.get(this.source)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.font().loadUrl(this.source))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.source)\n  }\n\n  loadedVisible(_time?: Time) : Any { return Cache.get(this.source) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import fontDefaultJson from \"./DefinitionObjects/default.json\"\nimport { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  install: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories.font = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefine as fontInstall,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { fontDefinitionFromId } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return fontDefinitionFromId(<string> id).source\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n\n  // id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  // id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  // id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  // id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  install: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories.filter = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefine as filterInstall,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, Constrained, JsonObject, ScalarValue, Size } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, Constrained, LoadPromise } from \"../../../declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { Instance } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        promises.push(definition.load(startTime, endTime))\n      })\n      return Promise.all(promises).then()\n    }\n\n    loaded(quantize : number, start : Time, end? : Time) : boolean {\n      if (!super.load(quantize, start, end)) return false\n\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.every(definition =>\n        definition.loaded(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceClass)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\n\nimport effectBlurJson from \"./DefinitionObjects/blur.json\"\nimport effectChromaKeyJson from \"./DefinitionObjects/chromakey.json\"\nimport effectEmbossJson from \"./DefinitionObjects/emboss.json\"\nimport effectGrayscaleJson from \"./DefinitionObjects/grayscale.json\"\nimport effectSepiaJson from \"./DefinitionObjects/sepia.json\"\nimport effectSharpenJson from \"./DefinitionObjects/sharpen.json\"\nimport effectTextJson from \"./DefinitionObjects/text.json\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  install: effectDefine,\n  instance: effectInstance,\n}\n\nFactories.effect = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectDefine as effectInstall,\n  effectInitialize,\n  effectInstance,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Factories } from \"../Mash/Factories/Factories\"\nimport { Errors } from \"../Setup/Errors\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { MashFactory } from \"../Mash/Mash/Mash\"\nimport { MasherFactory } from \"../Mash/Masher/Masher\"\n\n/**\n * Provides access to factory objects that create all other object definitions and instances.\n *\n * @example Create {@link Masher} instance and bind to a CANVAS element\n * ```ts\n * const canvas : ContextElement = document.getElementById('moviemasher-canvas')\n * const masher : Masher = MovieMasher.masher.instance({ canvas })\n * ```\n * @sealed\n */\nclass MovieMasher {\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create effect definitions and instances\n   */\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  static get [DefinitionType.Masher]() : MasherFactory {\n    const factory = Factories[DefinitionType.Masher]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Masher\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  private constructor() {}\n}\n\nexport { MovieMasher }\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\"\n\n\nconst MergerWithModular = ModularMixin(InstanceClass)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../Merger/DefinitionObjects/blend.json\"\nimport mergerCenterJson from \"../Merger/DefinitionObjects/center.json\"\nimport mergerConstrainedJson from \"../Merger/DefinitionObjects/constrained.json\"\nimport mergerDefaultJson from \"../Merger/DefinitionObjects/default.json\"\nimport mergerOverlayJson from \"../Merger/DefinitionObjects/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  install: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories.merger = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefine as mergerInstall,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher\"\n\nconst ScalerWithModular = ModularMixin(InstanceClass)\nclass ScalerClass extends ScalerWithModular {\n  declare definition : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler,\n  ScalerDefinition,\n  ScalerDefinitionObject,\n  ScalerObject\n} from \"../Scaler/Scaler\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport scalerDefaultJson from \"../Scaler/DefinitionObjects/default.json\"\nimport scalerPanJson from \"../Scaler/DefinitionObjects/pan.json\"\nimport scalerScaleJson from \"../Scaler/DefinitionObjects/scale.json\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  install: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories.scaler = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefine as scalerInstall,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, Size, ValueObject } from \"../../../declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { Visible } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction TransformableMixin<TBase extends Constrained<Visible>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject> object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions() : Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects : Effect[] = []\n\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      promises.push(this.merger.load(quantize, start, end))\n      promises.push(this.scaler.load(quantize, start, end))\n      this.effects.forEach(effect => {\n        promises.push(effect.load(quantize, start, end))\n      })\n      return Promise.all(promises).then()\n    }\n\n    mergeContextAtTime(mashTime : Time, quantize: number, context : VisibleContext) : void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger : Merger\n\n    get propertyValues() : SelectionObject {\n      const merger = <ValueObject> this.merger.propertyValues\n      const scaler = <ValueObject> this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler : Scaler\n\n    toJSON() : JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Constrained, Size } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Clip } from \"../Clip/Clip\"\nimport { VisibleDefinition } from \"./Visible\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      const visibleDefinition = <VisibleDefinition>this.definition\n\n      const image = visibleDefinition.loadedVisible(definitionTime)\n      if (!image) {\n        // console.error(this.constructor.name, \"contextAtTimeToSize not loaded\", this.id)\n        return\n      }\n\n      const width = Number(image.width)\n      const height = Number(image.height)\n      // console.log(this.constructor.name, \"contextAtTimeToSize\", width, height)\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceClass)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { TrackType } from \"../../../Setup/Enums\"\nimport { Constrained } from \"../../../declarations\"\nimport { ClipDefinition } from \"../Clip/Clip\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType, LoadType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\n\nclass ImageDefinitionClass  extends ImageDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.urlVisible)) {\n      const cached = Cache.get(this.urlVisible)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.image().loadUrl(this.urlVisible))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.urlVisible)\n  }\n\n  loadedVisible(_time? : Time) : DrawingSource | undefined { return Cache.get(this.urlVisible) }\n\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst imageInstall = (object: ImageDefinitionObject): ImageDefinition => {\n  const instance = imageDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  install: imageInstall,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories.image = ImageFactoryImplementation\n\nexport {\n  imageInstall,\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame } from \"../../Utilities\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\n\ninterface TrackOptions {\n  clips? : Clip[]\n  type? : TrackType\n  index? : number\n}\n\nclass TrackClass {\n  constructor(object : TrackOptions) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips)\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject, TrackOptions}\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType, EventType } from \"../../Setup/Enums\"\nimport { pixelColor } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { VisibleContext } from \"../../Playing\"\nimport { ContextFactory } from \"../ContextFactory\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\nimport { Cache } from \"../../Loading/Cache\"\n\ninterface ClipTiming {\n  start : number\n  duration : number\n  offset : number\n}\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudioBufferSourceNode\n}\n\ninterface CompositionObject {\n  // audibleContext? : AudibleContext\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n  visibleContext? : VisibleContext\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    // console.trace(\"Composition constructor\")\n    const {\n      // audibleContext,\n      backcolor,\n      buffer,\n      gain,\n      quantize,\n      visibleContext\n    } = object\n\n    if (backcolor) this.backcolor = backcolor\n\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n\n    // if (audibleContext) this._audibleContext = audibleContext\n    // else this._audibleContext = ContextFactory.audible()\n\n    if (visibleContext) this._visibleContext = visibleContext\n    else this._visibleContext = ContextFactory.visible()\n\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) {\n      // console.log(this.constructor.name, \"adjustSourceGain no source\", clip.id)\n      return\n    }\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = this.clipTiming(clip)\n    const { start, duration } = timing\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  // private _audibleContext : AudibleContext\n\n  // get audibleContext() : AudibleContext { return this._audibleContext }\n\n  // set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n  private clipTiming(clip : Audible) : ClipTiming {\n    const range = clip.timeRange(this.quantize)\n    const zeroSeconds = this.contextSeconds - this.mashSeconds\n    let offset = 0\n    let start = zeroSeconds + range.seconds\n    let duration = range.lengthSeconds\n\n    if (clip.trim) {\n      range.frame = clip.trim\n      offset = range.seconds\n    }\n    const now = Cache.audibleContext.currentTime\n    if (now > start) {\n      const dif = now - start\n      start = now\n      offset += dif\n      duration -= dif\n    }\n    return { duration, offset, start }\n  }\n\n  compositeAudible(clips: Audible[]): boolean {\n    // console.log(this.constructor.name, \"compositeAudible\", clips.length)\n    if (!this.createSources(clips)) {\n      // if (clips.length) console.log(this.constructor.name, \"compositeAudible didn't createSources\")\n      return false\n    }\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    // console.trace(this.constructor.name, \"compositeVisible\", this.visibleContext.size)\n\n    // console.log(this.constructor.name, \"compositeVisible\", time, clips.length)\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, this.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    })\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n  private contextSeconds = 0\n\n  private createSources(clips: Audible[]): boolean {\n    // console.log(\"Composition.createSources\", clips.length)\n\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const { definition } = clip\n      const buffer = definition.loadedAudible()\n      if (!buffer) {\n        // console.log(\"Composition.createSources loadedAudible false\", clip.id)\n        return false\n      }\n\n      const timing = this.clipTiming(clip)\n      const { start, duration, offset } = timing\n      // console.log(\"Composition.createSources\", start, duration, offset)\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        const gainSource = Cache.audibleContext.createBufferSource()\n        gainSource.buffer = buffer\n        gainSource.loop = clip.definition.loops\n        const gainNode = Cache.audibleContext.createGain()\n        gainSource.connect(gainNode)\n        gainNode.connect(Cache.audibleContext.destination)\n        gainSource.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep: Audible[] = []): void {\n    // console.log(\"Composition.destroySources\", clipsToKeep.length)\n    this.sourcesByClip.forEach((source, clip) => {\n      if (clipsToKeep.includes(clip)) return\n\n      // console.log(\"Composition.destroySources\", clip)\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(Cache.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n      this.sourcesByClip.delete(clip)\n    })\n  }\n\n  private drawBackground() : void {\n    this.visibleContext.clear()\n    if (!this.backcolor) return\n\n    this.visibleContext.drawFill(pixelColor(this.backcolor))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain === value) return\n\n    this._gain = value\n\n    if (this.playing) {\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n    this.visibleContext.emit(EventType.Volume)\n  }\n\n  private mashSeconds = 0\n\n  playing = false\n\n  quantize = Default.mash.quantize\n\n  get seconds() : number {\n    const ellapsed = Cache.audibleContext.currentTime - this.contextSeconds\n    return ellapsed + this.mashSeconds\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext(): void {\n    // console.log(this.constructor.name, \"startContext\")\n    if (this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n    this.bufferSource = Cache.audibleContext.createBufferSource()\n    this.bufferSource.loop = true\n    this.bufferSource.buffer = Cache.audibleContext.createBuffer(this.buffer)\n    this.bufferSource.connect(Cache.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    // console.log(this.constructor.name, \"startPlaying\")\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.mashSeconds = seconds\n\n    this.contextSeconds = Cache.audibleContext.currentTime\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.mashSeconds, this.contextSeconds)\n    return true\n  }\n\n  stopPlaying() : void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.mashSeconds = 0\n    this.contextSeconds = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(Cache.audibleContext.destination)\n    delete this.bufferSource\n  }\n\n  private _visibleContext : VisibleContext\n\n  get visibleContext() : VisibleContext { return this._visibleContext }\n\n  set visibleContext(value : VisibleContext) { this._visibleContext = value }\n\n}\n\nexport { Composition }\n","import { DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Interval, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass, TrackObject, TrackOptions } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { MovieMasher } from \"../../MovieMasher\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceClass } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Action } from \"../../Editing/Action/Action\";\n\nclass MashClass extends InstanceClass implements Mash {\n  constructor(...args: Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n    console.log(this.constructor.name, \"constructor\", this.id)\n\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      // audibleContext,\n      buffer,\n      gain,\n      visibleContext,\n    } = <MashOptions>object\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type + 'Mash.constructor media'\n\n      const definitionType = <DefinitionType>type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return MovieMasher[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Audio))\n    ))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Video))\n    ))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    // if (audibleContext) this._audibleContext = audibleContext\n    if (visibleContext) {\n      // console.log(\"Mash constructor visibleContext\")\n      this._visibleContext = visibleContext\n    }\n  }\n\n  addClipsToTrack(clips: Clip[], trackIndex = 0, insertIndex = 0, frames? : number[]): void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    this.assureClipsHaveFrames(clips)\n    const [clip] = clips\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      if (frames) clips.forEach((clip, index) => { clip.frame = frames[index] })\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType: TrackType): Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    this.visibleContext.emit(EventType.Track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips: Clip[]): void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition>clip.definition\n      const duration = definition.duration\n      clip.frames = Time.fromSeconds(duration, this.quantize, 'floor').frame\n    })\n  }\n\n  private _audibleContext?: AudibleContext\n\n  // get audibleContext(): AudibleContext {\n  //   if (!this._audibleContext) {\n  //     this._audibleContext = ContextFactory.audible()\n  //     if (this._composition) this.composition.audibleContext = this._audibleContext\n  //   }\n  //   return this._audibleContext\n  // }\n\n  // set audibleContext(value: AudibleContext) {\n  //   if (this._audibleContext !== value) {\n  //     this._audibleContext = value\n  //     if (this._composition) this.composition.audibleContext = value\n  //   }\n  // }\n\n  audio: Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor(): string { return this._backcolor }\n\n  set backcolor(value: string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.mash.buffer\n\n  get buffer(): number { return this._buffer }\n\n  set buffer(value: number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames(): number { return this.buffer * this.quantize }\n\n  private get bufferTime(): Time { return Time.fromSeconds(this.buffer) }\n\n  private _bufferTimer?: Interval\n\n  changeClipFrames(clip: Clip, value: number): void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip: Audible, value: number, frames: number): void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clipIntersects(clip: Clip, range: TimeRange): boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip: Clip): Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip: Clip, index = 0): Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  get clips(): Clip[] { return this.clipsInTracks() }\n\n  //   const rangeTracks = this.tracksInRange(trackRange)\n  //   const inTracks = this.clipsInTracks(rangeTracks)\n  //   if (!timeRange) return inTracks\n\n  //   return this.filterIntersecting(inTracks, timeRange)\n  // }\n\n\n  private clipsAtTimes(start: Time, end?: Time): Clip[] {\n    const objects: Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  private clipsAudible(start: Time, end?: Time): Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsInTracks(tracks?: Track[]): Clip[] {\n    const clipTracks = tracks || this.tracks\n    return clipTracks.map(track => track.clips).flat()\n  }\n\n  private filterIntersecting(clips: Clip[], timeRange: TimeRange): Clip[] {\n    const range = timeRange.scale(this.quantize)\n    return clips.filter(clip => this.clipIntersects(clip, range))\n\n  }\n  private get clipsAudibleInTracks(): Audible[] {\n    return <Audible[]> this.clipsInTracks().filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange: TimeRange): Audible[] {\n    return <Audible[]> this.filterIntersecting(this.clipsAudibleInTracks, timeRange)\n  }\n\n  private get clipsVideo(): Visible[] { return <Visible[]>this.video.flatMap(track => track.clips) }\n\n  private clipsVisible(start: Time, end?: Time): Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time: Time): Visible[] {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  clipsVisibleSlice(frame: number, frames: number): Visible[] {\n    const range = TimeRange.fromArgs(frame, this.quantize, frames)\n    return this.clipsVisibleInTimeRange(range)\n  }\n\n  private clipsVisibleInTimeRange(timeRange: TimeRange): Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  compositeAudible(): boolean {\n    const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(clips)\n  }\n\n  private _composition?: Composition\n\n  get composition(): Composition {\n    if (!this._composition) {\n      const options = {\n        // audibleContext: this.audibleContext,\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n        visibleContext: this.visibleContext,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible(): void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest(): void {\n    const { time } = this\n    this.composition.compositeVisibleRequest(time, this.clipsVisibleAtTime(time))\n  }\n\n  declare definition: MashDefinition\n\n  destroy(): void {\n    delete this._visibleContext\n    // delete this._audibleContext\n    delete this._composition\n  }\n\n  private _drawAtInterval?: Interval\n\n  private drawAtInterval(): void {\n    // console.log(this.constructor.name, \"drawAtInterval playing: \", this._playing)\n    if (!this._playing) return\n    const time = this.time.withFrame(this.time.frame + 1)\n    const seconds = this.playing ? this.composition.seconds : time.seconds\n    if (seconds < this.endTime.seconds) {\n      if (seconds >= time.seconds) {\n        this.drawTime(time)\n        this.compositeAudible()\n      }\n    } else {\n      // console.log(this.constructor.name, \"drawAtInterval finished at\", seconds, this.endTime.seconds)\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else {\n        this.paused = true\n        this.visibleContext.emit(EventType.Ended)\n      }\n    }\n  }\n\n  drawnTime?: Time\n\n  private drawTime(time: Time): void {\n    const timeChange = time !== this.time\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n    this.visibleContext.emit(timeChange ? EventType.Time : EventType.Loaded)\n  }\n\n  get duration(): number { return Time.fromArgs(this.frames, this.quantize).seconds }\n\n  private emitIfFramesChange(method: () => void): void {\n    const origFrames = this.frames\n    method()\n    const { frames } = this\n    if (origFrames !== frames) {\n      this.visibleContext.emit(EventType.Duration)\n      if (this.frame > frames) this.seekToTime(Time.fromArgs(frames, this.quantize))\n    }\n  }\n\n  get endTime(): Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  get frame(): number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames(): number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain(): number { return this._gain }\n\n  set gain(value: number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n  handleAction(action: Action): void {\n    this.visibleContext.emit(EventType.Action, { action })\n\n    if (action instanceof ChangeAction) {\n      const changeAction = <ChangeAction>action\n      const { property } = changeAction\n      if (property === \"gain\") {\n        if (this.playing && Is.aboveZero(this.gain)) {\n          this.composition.adjustSourceGain(<Audible>changeAction.target)\n        }\n        return\n      }\n    }\n    this.stopLoadAndDraw()\n  }\n  get startAndEnd(): Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  load(): LoadPromise {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const promises = this.clipsAtTimes(start, end).map(clip =>\n      clip.load(this.quantize, start, end)\n    )\n    return Promise.all(promises).then()\n  }\n\n  loadAndComposite(): void { this.load().then(() => { this.compositeVisibleRequest() }) }\n\n  get loadedDefinitions(): DefinitionTimes {\n    const map = <DefinitionTimes>new Map()\n    const [start, end] = this.startAndEnd\n    this.clipsAtTimes(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  maxTracks(type?: TrackType): number {\n    return type ? this[type].length : this.audio.length + this.video.length\n  }\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks().flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused === forcedValue) return\n\n    this._paused = forcedValue\n    if (forcedValue) {\n      this.playing = false\n      if (this._bufferTimer) {\n        clearInterval(this._bufferTimer)\n        delete this._bufferTimer\n      }\n      // console.log(\"Mash emit\", EventType.Pause)\n\n      this.visibleContext.emit(EventType.Pause)\n    } else {\n      this.composition.startContext()\n      if (!this._bufferTimer) {\n        this._bufferTimer = setInterval(() => { this.load() }, Math.round(this.buffer / 2))\n      }\n      this.load().then(() => { this.playing = true })\n      // console.log(\"Mash emit\", EventType.Play)\n      this.visibleContext.emit(EventType.Play)\n    }\n\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.log(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      if (value) {\n\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n          return\n        }\n        this._drawAtInterval = setInterval(() => { this.drawAtInterval()}, 500 / this.time.fps)\n        this.visibleContext.emit(EventType.Playing)\n      } else {\n        this.composition.stopPlaying()\n        if (this._drawAtInterval) {\n          clearInterval(this._drawAtInterval)\n          delete this._drawAtInterval\n        }\n      }\n      this._playing = value\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n    this.visibleContext.emit(EventType.Track)\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time) : LoadPromise {\n    if (this.seekTime !== time) {\n      this.seekTime = time\n      // console.log(\"seekToTime\", time)\n      this.visibleContext.emit(EventType.Seeking)\n      this.visibleContext.emit(EventType.Time)\n    }\n    return this.stopLoadAndDraw(true)\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  private stopLoadAndDraw(seeking? : boolean) : LoadPromise {\n    const { time, paused, playing } = this\n\n    if (playing) this.playing = false\n    return this.load().then(() => {\n      if (time === this.time) { // otherwise we must have gotten a seek call\n        if (seeking) {\n          delete this.seekTime\n          this.visibleContext.emit(EventType.Seeked)\n        }\n        this.drawTime(time)\n        if (!paused) {\n          this.composition.startContext()\n          this.playing = true\n        }\n      }\n    })\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRange(): TimeRange {\n    const time = Time.fromArgs(this.frames, this.quantize)\n    return TimeRange.fromTime(this.time, time.scale(this.time.fps).frame)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n    return this[type][index]\n  }\n\n  private trackOptions(object : TrackObject, index : number, type : TrackType) : TrackOptions {\n    const { clips } = object\n    if (!(clips && Is.populatedArray(clips))) return { type, index }\n\n    const objects = clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: index, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    })\n    this.assureClipsHaveFrames(objects)\n    return { type, index, clips: objects }\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  // tracksInRange(trackRange?: TrackRange): Track[] | undefined {\n  //   if (!trackRange) return\n  //   const { type } = trackRange\n  //   const range = trackRange.relative ? trackRange.withMax(this.maxTracks(type)) : trackRange\n\n  //   const inRange = []\n  //   if (type !== TrackType.Video) {\n  //     inRange.push(...this.audio.slice(range.first, range.last))\n  //   }\n  //   if (type !== TrackType.Audio) {\n  //     inRange.push(...this.video.slice(range.first, range.last))\n  //   }\n  //   return inRange\n  // }\n\n  video : Track[] = []\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      // console.log(\"Mash get visibleContext creating\")\n      this._visibleContext = ContextFactory.visible()\n\n      if (this._composition) this.composition.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    // console.log(\"Mash set visibleContext\", value)\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._composition) this.composition.visibleContext = value\n    }\n  }\n}\n\nexport { MashClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.mash.default\"\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\n\nconst MashDefaultId = \"com.moviemasher.mash.default\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MashDefaultId\n  return <MashDefinition> Definitions.fromId(idString)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {\n  new MashDefinitionClass({ id: MashDefaultId })\n}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst mashInstall = (object: MashDefinitionObject): MashDefinition => {\n  const instance = mashDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  install: mashInstall,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories.mash = MashFactoryImplementation\n\nexport {\n  mashInstall,\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import {\n  Any,\n  ContextElement,\n  LoadPromise,\n  SelectionValue,\n  ScalarValue,\n  SelectionObject,\n  UnknownObject\n} from \"../../declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes\n} from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Is } from \"../../Utilities/Is\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { ActionFactory } from \"../../Editing/Action/ActionFactory\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { Actions } from \"../../Editing/Actions/Actions\"\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Effect } from \"../Effect/Effect\"\nimport { EffectClass } from \"../Effect/EffectInstance\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { Mash, MashObject, MashOptions } from \"../Mash/Mash\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Clip } from \"../Mixin/Clip/Clip\"\nimport { Transformable } from \"../Mixin/Transformable/Transformable\"\nimport { Video } from \"../Video/Video\"\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject } from \"./Masher\"\nimport { Default } from \"../../Setup/Default\"\nimport { VisibleContext } from \"../../Playing\"\n\nclass MasherClass extends InstanceClass implements Masher {\n  [index : string] : unknown\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n    console.log(this.constructor.name, \"constructor\")\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      // audibleContext,\n      mash,\n      canvas,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n\n    // if (typeof audibleContext !== \"undefined\") this._audibleContext = audibleContext\n    // else this._audibleContext = ContextFactory.audible()\n    // console.log(this.constructor.name, \"constructor created\", this.audibleContext.context)\n\n    if (canvas) this.visibleContext = ContextFactory.fromCanvas(canvas)\n    else this.visibleContext = ContextFactory.visible()\n\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n    if (mash) this.mash = mash\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n    const action = ActionFactory.createFromObject(clone)\n    this.actions.add(action)\n    this.handleAction(this.actions.redo())\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = MovieMasher.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = MovieMasher[definitionType].definition(object)\n\n    const clip = <Clip> definition.instance\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  // private _audibleContext? : AudibleContext\n\n  // get audibleContext() : AudibleContext {\n  //   if (!this._audibleContext) {\n  //     console.log(this.constructor.name, \"audibleContext initializing\")\n  //     this._audibleContext = ContextFactory.audible()\n  //     if (this._mash) this.mash.audibleContext = this._audibleContext\n  //   }\n  //   return this._audibleContext\n  // }\n\n  // set audibleContext(value : AudibleContext) {\n  //   if (this._audibleContext !== value) {\n  //     this._audibleContext = value\n  //     if (this._mash) this.mash.audibleContext = value\n  //   }\n  // }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (this._buffer !== value) {\n      this._buffer = value\n      this.mash.buffer = value\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  get canvas() : ContextElement { return this.visibleContext.canvas }\n\n  set canvas(value : ContextElement) {\n    if (!value) throw Errors.invalid.canvas\n\n    // make sure canvas hasn't been stretched\n    const style = window.getComputedStyle(value)\n    const { width, height } = style\n    if (!(width && height)) throw Errors.invalid.canvas\n\n    const widthTrimmed = Number(width.slice(0, -2))\n    const heightTrimmed = Number(height.slice(0, -2))\n    if (Is.nan(widthTrimmed) || Is.nan(heightTrimmed)) throw Errors.invalid.canvas\n\n    value.width = widthTrimmed\n    value.height = heightTrimmed\n\n    // console.log(\"set canvas\", widthTrimmed, 'x', heightTrimmed, value)\n    this.visibleContext.canvas = value\n    this.mash.compositeVisible()\n  }\n\n  change(property : string, value? : SelectionValue) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) {\n        this.changeEffect(property, value, <Effect> this.selectedEffect)\n      }\n      else this.changeClip(property, value, this.selectedClipOrThrow)\n    } else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selectedClipOrThrow\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selectedEffectOrThrow\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string, value?: SelectionValue) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.internal\n\n    const target = this.mash\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n\n    const undoValue = typeof value === \"undefined\" ? this._pristine[property] : target.value(property)\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue,\n      type: ActionType.Change,\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    // console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selectedClipOrThrow\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    const pristineTarget = this._pristine[transformType]\n    if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = pristineTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  get clips(): Clip[] { return this.mash.clips }\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  // call when player removed from DOM\n  destroy() : void { MovieMasher.masher.destroy(this) }\n\n  draw() : void { this.mash.compositeVisible() }\n\n  get duration() : number { return this.mash.duration }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  private filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    //  must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // must be abutting each other on main track\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps }\n\n  set fps(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.fps\n\n    if (this._fps !== value) {\n      this._fps = value\n      this.visibleContext.emit(EventType.Fps)\n      this.time = this.time.scale(value)\n    }\n  }\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(value, this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value: Time): LoadPromise {\n    return this.mash.seekToTime(value.scaleToFps(this.fps))\n  }\n\n  isSelected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n  private handleAction(action : Action) : void {\n    this.mash.handleAction(action)\n    this.selectedClips = action.selectedClips\n    this.selectedEffects = action.selectedEffects\n  }\n\n  private loadMash() : LoadPromise { return this.mash.load() }\n\n  private loadMashAndDraw() : LoadPromise { return this.loadMash().then(() => { this.draw() }) }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value : boolean) {\n    this._loop = value\n    if (this._mash) this.mash.loop = value\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) {\n      // console.trace(\"get mash\")\n      this._mash = MovieMasher.mash.instance(this.mashOptions())\n    }\n    return this._mash\n  }\n\n  set mash(object : Mash) {\n    if (this._mash === object) return\n\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    // console.log(\"set mash getting visibleContext...\")\n    this._mash.visibleContext = this.visibleContext\n    // console.log(\"creating composition\", this._mash.composition)\n    // console.log(\"set mash got visibleContext!\", this._visibleContext)\n\n    // this._mash.audibleContext = this.audibleContext\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    this.visibleContext.emit(EventType.Mash)\n\n    this.goToTime(Time.fromArgs(0, this.fps))\n    if (this.autoplay) this.paused = false\n  }\n\n  private mashOptions(mashObject : MashObject = {}) : MashOptions {\n    // console.log(\"mashOptions\")\n    return {\n      ...mashObject,\n      // audibleContext: this.audibleContext,\n      buffer: this.buffer,\n      gain: this.gain,\n      loop: this.loop,\n      visibleContext: this.visibleContext,\n    }\n  }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moveClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value : boolean) {\n    if (this._muted !== value) {\n      this._muted = value\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * value, this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  private _pristine? : SelectionObject\n\n  private get pristineOrThrow() {\n    if (!this._pristine) throw Errors.internal\n    return this._pristine\n  }\n\n  private _pristineEffect? : SelectionObject\n\n  private get pristineEffectOrThrow() {\n    if (!this._pristineEffect) throw Errors.internal\n    return this._pristineEffect\n  }\n\n  redo() : void { if (this.actions.canRedo) this.handleAction(this.actions.redo()) }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) {\n      this.removeEffects(<Effect[]> objectOrArray)\n      return\n    }\n\n    this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected? : boolean) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  get selectedClipsOrEffects() : Clip[] | Effect[] {\n    return this.selectedEffects.length ? this.selectedEffects : this.selectedClips\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected? : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected? : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n  get selected(): Clip | Effect | Mash {\n    const effect = this.selectedEffect\n    if (Is.populatedObject(effect)) return <Effect> effect\n\n    return this.selectedClipOrMash\n  }\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        // console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  private selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  private get selectedClipOrThrow() : Clip {\n    const clip = this._selectedClips[0]\n    if (!clip) throw Errors.selection\n\n    return clip\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value: Clip[]) {\n    const newSelectedClips = this.filterClipSelection(value)\n    const newPristine = this.selectedClipOrMash.propertyValues\n\n    const changed = this._selectedClips !== newSelectedClips\n    if (changed) {\n      this._selectedClips = newSelectedClips\n      this._pristine = newPristine\n      if (this.selectedEffects.length) {\n        this.selectedEffects = []\n      } else {\n        this.visibleContext.emit(EventType.Selection)\n      }\n    }\n  }\n\n  get selectedEffect() : Effect | UnknownObject {\n    if (this._selectedEffects.length !== 1) return {}\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value: Effect | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const effect = <Effect>value\n      const { type } = effect\n      if (type !== DefinitionType.Effect) return\n\n      this.selectedEffects = [effect]\n    }\n    else this.selectedEffects = []\n  }\n\n  get selectedEffectOrThrow() : Effect {\n    const effect = this.selectedEffect\n    if (!Is.populatedObject(effect)) throw Errors.selection\n    return <Effect> effect\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const newSelectedEffects = []\n    const newPristineEffect = {}\n    if (value.length) {\n      const { effects } = this.selectedClipOrMash\n      if (effects) {\n        const array = <Effect[]>effects\n        // make sure all selected effects are in the effects of the clip or mash\n        newSelectedEffects.push(...value.filter(effect => array.includes(effect)))\n        if (newSelectedEffects.length === 1) {\n          Object.assign(newPristineEffect, newSelectedEffects[0].propertyValues)\n        }\n      }\n    }\n    const changed = this._selectedEffects !== newSelectedEffects\n    if (changed) {\n      this._selectedEffects = newSelectedEffects\n      this._pristineEffect = newPristineEffect\n      this.visibleContext.emit(EventType.Selection)\n    }\n  }\n\n  get selectionObjects() : SelectionObject[] {\n    const selectedObjects = this.selectedClipsOrEffects\n    const object = selectedObjects.map((object : ClipOrEffect) => object.propertyValues)\n    return object\n  }\n\n  private get silenced() : boolean { return this._paused || this.muted || !this.gain }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<Audible> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) {\n    if (value.equalsTime(this.time)) return\n\n    this.goToTime(value)\n  }\n\n  get timeRange() : TimeRange { return this.mash.timeRange }\n\n  undo() : void { if (this.actions.canUndo) this.handleAction(this.actions.undo()) }\n\n  visibleContext : VisibleContext\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value : number) {\n    if (this._volume !== value) {\n      if (!Is.positive(value)) throw Errors.invalid.volume\n      this._volume = value\n      if (Is.aboveZero(value)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\nexport { MasherClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Default } from \"../../Setup/Default\"\n\nclass MasherDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"autoplay\", type: DataType.Boolean, value: Default.masher.autoplay }))\n    this.properties.push(new Property({ name: \"precision\", type: DataType.Number, value: Default.masher.precision }))\n    this.properties.push(new Property({ name: \"loop\", type: DataType.Boolean, value: Default.masher.loop }))\n    this.properties.push(new Property({ name: \"fps\", type: DataType.Number, value: Default.masher.fps }))\n    this.properties.push(new Property({ name: \"volume\", type: DataType.Number, value: Default.masher.volume }))\n    this.properties.push(new Property({ name: \"buffer\", type: DataType.Number, value: Default.masher.buffer}))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.masher.default\"\n\n  get instance() : Masher {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MasherObject) : Masher {\n    const instance = new MasherClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Masher\n}\n\nexport { MasherDefinitionClass }\n","import { Masher, MasherDefinition, MasherDefinitionObject, MasherObject } from \"./Masher\"\nimport { Interval } from \"../../declarations\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { MasherDefinitionClass } from \"./MasherDefinition\"\n\nconst MasherIntervalTics = 10 * 1000\nconst MasherDefaultId = \"com.moviemasher.masher.default\"\n\nlet MasherInterval : Interval | undefined\n\nconst mashers : Masher[] = []\n\nconst addMasher = (masher : Masher) => {\n  if (!mashers.length) masherStart()\n  mashers.push(masher)\n}\n\nconst masherDestroy = (masher : Masher) : void => {\n  const index = mashers.indexOf(masher)\n  if (index < 0) return\n\n  mashers.splice(index, 1)\n  if (!mashers.length) masherStop()\n}\n\nconst handleInterval = () => {\n  // console.log(constructor.name, \"handleInterval\")\n  const map = <DefinitionTimes> new Map()\n  const definitions = new Set<Definition>()\n\n  mashers.forEach(masher => {\n    masher.definitions.forEach(definition => { definitions.add(definition) })\n\n    const masherMap = masher.loadedDefinitions\n    masherMap.forEach((times, definition) => {\n      if (!map.has(definition)) map.set(definition, [])\n      const definitionTimes = map.get(definition)\n      if (!definitionTimes) throw Errors.internal\n\n      definitionTimes.push(...times)\n    })\n  })\n  map.forEach((times, definition) => {\n    definition.unload(times)\n  })\n\n  Definitions.map.forEach(definition => {\n    if (definitions.has(definition)) {\n      // definition used in a masher (masher.mash.media)\n      if (map.has(definition)) {\n        // definition needs to be at least partially loaded\n        definition.unload(map.get(definition))\n      } else {\n        // definition can be completely unloaded, but not uninstalled\n        definition.unload()\n      }\n    } else {\n      // definition is not used anywhere - unload, and uninstall if not retained\n      definition.unload()\n      if (!definition.retain) Definitions.uninstall(definition.id)\n    }\n  })\n}\n\nconst masherStart = () => {\n  // console.log(constructor.name, \"masherStart\")\n  if (MasherInterval) return\n\n  MasherInterval = setInterval(handleInterval, MasherIntervalTics)\n}\n\nconst masherStop = () => {\n  // console.log(constructor.name, \"masherStop\")\n  if (!MasherInterval) return\n\n  clearInterval(MasherInterval)\n  MasherInterval = undefined\n}\n\nconst masherDefinition = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MasherDefaultId\n\n  return <MasherDefinition> Definitions.fromId(idString)\n}\n\nconst masherDefinitionFromId = (id : string) : MasherDefinition => {\n  return masherDefinition({ id })\n}\n\nconst masherInstance = (object : MasherObject = {}) : Masher => {\n  const definition = masherDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  addMasher(instance)\n  return instance\n}\n\nconst masherFromId = (id : string) : Masher => {\n  return masherInstance({ id })\n}\n\nconst masherInitialize = () : void => {\n  new MasherDefinitionClass({ id: MasherDefaultId })\n}\n\nconst masherDefine = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'masherDefine'\n\n  Definitions.uninstall(id)\n  return masherDefinition(object)\n}\n\nconst MasherFactoryImplementation = {\n  define: masherDefine,\n  install: masherDefine,\n  definition: masherDefinition,\n  definitionFromId: masherDefinitionFromId,\n  destroy: masherDestroy,\n  fromId: masherFromId,\n  initialize: masherInitialize,\n  instance: masherInstance,\n}\n\nFactories.masher = MasherFactoryImplementation\n\nexport {\n  masherDefine as masherInstall,\n  masherDefine,\n  masherDefinition,\n  masherDefinitionFromId,\n  masherDestroy,\n  MasherFactoryImplementation,\n  masherFromId,\n  masherInitialize,\n  masherInstance,\n}\n","import { Size } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceClass)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n  declare definition : ThemeDefinition\n}\n\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport themeColorJson from \"./DefinitionObjects/color.json\"\nimport themeTextJson from \"./DefinitionObjects/text.json\"\nimport themeTitleJson from \"./DefinitionObjects/title.json\"\nimport { Factories } from \"../Factories\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n  new ThemeDefinitionClass(themeTitleJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  install: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories.theme = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefine as themeInstall,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceClass)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport transitionCrossfadeJson from \"./DefinitionObjects/crossfade.json\"\nimport { Factories } from \"../Factories/Factories\"\nimport {\n  Transition,\n  TransitionDefinition,\n  TransitionDefinitionObject,\n  TransitionObject,\n} from \"./Transition\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  install: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories.transition = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefine as transitionInstall,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\n\nconst VideoWithClip = ClipMixin(InstanceClass)\nconst VideoWithAudible = AudibleMixin(VideoWithClip)\nconst VideoWithVisible = VisibleMixin(VideoWithAudible)\nconst VideoWithTransformable = TransformableMixin(VideoWithVisible)\n\nclass VideoClass extends VideoWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n\n}\n\nexport { VideoClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities\"\nimport { Cache } from \"../../Loading\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VideoClass } from \"./VideoInstance\"\nimport { Video, VideoDefinitionObject, VideoObject } from \"./Video\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\nconst VideoDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst VideoDefinitionWithAudible = AudibleDefinitionMixin(VideoDefinitionWithClip)\nconst VideoDefinitionWithVisible = VisibleDefinitionMixin(VideoDefinitionWithAudible)\nclass VideoDefinitionClass extends VideoDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, begin, fps, increment, pattern, video_rate, source } = <VideoDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n\n    if (typeof begin !== \"undefined\") this.begin = begin\n\n    if (fps || video_rate) this.fps = Number(fps || video_rate) // deprecated string\n\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.video.begin\n\n  fps = Default.definition.video.fps\n\n  private frames(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.video.increment\n\n  get instance() : Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoObject) : Video {\n    return new VideoClass({ ...this.instanceObject, ...object })\n  }\n\n  load(start: Time, end?: Time): LoadPromise {\n    const promises: LoadPromise[] = []\n    if (!this.stream) promises.push(super.load(start, end))\n\n    if (this.stream) promises.push(LoaderFactory.video().loadUrl(this.url))\n    else {\n      this.frames(start, end).map(frame => this.urlForFrame(frame)).forEach(url => {\n        if (Cache.cached(url)) {\n          const cached = Cache.get(url)\n          if (cached instanceof Promise) promises.push(cached)\n        } else promises.push(LoaderFactory.image().loadUrl(url))\n      })\n    }\n    return Promise.all(promises).then()\n  }\n\n  loaded(start: Time, end?: Time): boolean {\n    const checkUrls = []\n    if (this.stream) checkUrls.push(this.url)\n    else {\n      if (!super.loaded(start, end)) return false\n\n      checkUrls.push(...this.frames(start, end).map(frame => this.urlForFrame(frame)))\n    }\n    return checkUrls.every(url => Cache.cached(url))\n  }\n\n  loadedVisible(time? : Time) : DrawingSource | undefined {\n    if (!time) throw Errors.internal\n    if (this.stream) return Cache.get(this.url)\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.video.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.video.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.video.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  unload(times?: Times[]): void {\n\n    // TODO: better handle unloading of single stream file\n    if (this.stream) {\n      Cache.remove(this.url)\n      return\n    }\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.frames(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.zeropadding) s = s.padStart(this.zeropadding, '0')\n    return (this.url + this.pattern).replaceAll('%', s)\n  }\n\n  urls(start : Time, end? : Time) : string[] {\n    return this.frames(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  get zeropadding() : number {\n    if (!this.__zeropadding) {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.__zeropadding = String(lastFrame).length\n\n    }\n    return this.__zeropadding\n  }\n\n  private __zeropadding? : number\n}\n\nexport { VideoDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClass } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClass(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoInstall = (object: VideoDefinitionObject): VideoDefinition => {\n  const instance = videoDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  install: videoInstall,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories.video = VideoFactoryImplementation\n\nexport {\n  videoInstall,\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { MovieMasher } from \"../MovieMasher\"\nimport { DefinitionTypes } from \"../Setup/Enums\"\n\nDefinitionTypes.forEach(type => { MovieMasher[type].initialize() })\n","\nconst Seconds = (seconds : number, fps : number, duration : number) : string => {\n  let time, pad, do_rest, s = ''\n  if (! duration) duration = seconds\n  time = 60 * 60 // an hour\n  pad = 2\n  if (duration >= time) {\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 60 // a minute\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 1 // a second\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00'\n  } else s += '00'\n  if (fps > 1) {\n    if (fps === 10) pad = 1\n    s += '.'\n    if (seconds) {\n      if (pad === 1) seconds = Math.floor(seconds * 10) / 10\n      else seconds = Math.floor(100 * seconds) / 100\n      seconds = Number(String(seconds).substr(2, 2))\n      s += String(seconds).padStart(pad, '0')\n    } else s += '0'.padStart(pad, '0')\n  }\n  return s\n}\n\nexport { Seconds }\n"],"names":["rgbValue","value","Math","min","max","floor","Number","rgbNumeric","rgb","r","g","b","yuvNumeric","y","u","v","colorYuv2rgb","yuv","floats","colorRgb2hex","toString","length","colorYuvBlend","yuvs","match","blend","diff","blendYuv","forEach","yuvObject","numericYuv","du","dv","sqrt","colorRgb2yuv","ints","colorStrip","color","toLowerCase","replaceAll","colorValid","colorStripped","style","Option","styleStripped","startsWith","colorTransparent","Color","valid","yuvBlend","rgb2yuv","yuv2rgb","rgb2hex","transparent","strip","Default","label","masher","buffer","fps","loop","volume","precision","autoplay","mash","quantize","backcolor","gain","instance","audio","trim","video","speed","definition","frame","duration","image","theme","transition","pattern","increment","begin","$invalidArgument","$invalidProperty","$deprecated","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","action","actions","internal","argument","invalid","canvas","url","source","id","object","track","trackType","name","type","property","factory","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frames","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","deprecation","property_types","addModulesOfType","configure","set","canvas_context","wrongClass","Parameter","[object Object]","this","String","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","isPopulatedString","isPopulatedObject","Object","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","method","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","ActionType","TrackType","ClipType","ClipTypes","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","TypeValue","identifier","definitionsMap","Map","DefinitionsByType","definitionsByType","list","definitionsList","definitionsClear","clear","definitionsFont","Font","definitionsFromId","definitionsInstalled","console","trace","definitionsInstall","push","has","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","delete","definitions","index","indexOf","splice","Definitions","byType","fromId","install","installed","map","uninstall","Type","modular","JSON","stringify","Boolean","Fontsize","Pixel","Integer","round","Rgb","Rgba","Direction4","Direction8","Mode","find","TypesInstance","entries","entry","key","dataType","includes","propertyTypes","propertyType","dataTypesJson","Property","custom","Types","Capitalize","toUpperCase","substr","ElementScrollProps","elementScrollMetrics","element","getComputedStyle","getPropertyValue","slice","scrollLeft","scrollTop","x","width","height","getBoundingClientRect","fromEntries","Element","scrollMetrics","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","join","Evaluator","context","size","mergeContext","ceil","setInputSize","conditionals","trueConditional","expression","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","bind","inputSize","Set","a","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","scale","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","t","Id","Date","now","random","roundMethod","rounding","roundWithMethod","func","Round","withMethod","pixelRgbaAtIndex","pixels","pixelSafe","pixel","offsetPoint","pt","pixelToPoint","pixelFromPoint","pixelNeighboringRgbas","data","halfSize","depth","pixelNeighboringPixels","p","pixelToIndex","pixelRgba","pixelColor","pixelPerFrame","zoom","widthFrames","pixelFromFrame","perFrame","pixelToFrame","fromFrame","neighboringRgbas","rgbaAtIndex","toFrame","byFrame","byTrack","byLabel","Sort","timeEqualizeRates","time1","time2","gcf","fps1","fps2","greatestCommonDenominator","Time","copy","description","scaleToTime","subtracted","rounded","fromArgs","TimeRange","super","end","endTime","range1","range2","startTime","scaledTime","scaledRange","range","start","TrackRange","first","last","count","relative","trackRange","tracks","fill","_","idx","withEnd","Action","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","selectedClips","done","selectedEffects","redoAction","undoAction","AddTrackAction","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","undoValueNumeric","setValue","redo","FreezeAction","freezeClip","frozenClip","insertClip","trackClips","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","i","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","undo","AudibleContext","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","createBufferSource","createGain","currentTime","Promise","resolve","reject","decodeAudioData","audioData","error","destination","fromSeconds","Point0","VisibleContext","context2d","_context2d","alpha","globalAlpha","getContext","emit","Canvas","clearSize","clearRect","rect","composite","globalCompositeOperation","globalThis","document","createElement","dataUrl","toDataURL","drawAtPoint","point","drawImage","drawFillToSize","fillOriginal","fillRect","drawFillInRect","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","drawInRectFromRect","inSize","fromSize","text","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","detail","event","dispatchEvent","CustomEvent","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactoryInstance","visible","types","Cache","ContextFactory","audible","cachedByKey","urlsByKey","Loader","cached","promiseOrCached","promise","requestUrl","add","processed","_url","Processor","_buffer","InstanceClass","args","_id","_label","instanceFromObject","toJSON","scaleToFps","_identifier","definitionTime","load","loaded","propertyNames","properties","propertyValues","coerced","coerce","constructor","DefinitionClass","icon","instanceObject","_start","_end","_time","propertiesModular","_times","AudibleMixin","Base","z","gainPairs","trimTime","withFrame","muted","space","ClipMixin","Video","endFrame","_quantize","_trim","AudioWithAudible","AudioClass","Audio","ClipPropertyObjects","ClipDefinitionMixin","_duration","AudioProcessor","decode","FontProcessor","face","FontFace","then","fonts","classes","ProcessorFactory","loader","AudioLoader","fetch","response","arrayBuffer","processor","process","catch","FontLoader","ImageLoader","Image","crossOrigin","src","VideoLoader","oncanplay","log","LoaderFactory","AudibleDefinitionMixin","stream","loops","waveform","urlAudible","promises","loadUrl","all","times","unload","some","maybePair","AudioDefinitionWithAudible","AudioDefinitionClass","audioObject","Factories","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","audioInstall","retain","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","FilterDefinitionClass","Filter","_evaluator","_evaluated","BlendFilter","modes","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","offset","reverse","matrix","drawImageData","ColorFilter","drawFill","ColorChannelMixerFilter","rgbas","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","options","bias","rdiv","channel","parseInt","parse","input","output","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","outWidth","outHeight","drawInSizeFromSize","SetSarFilter","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","ModularMixin","constructProperties","modularDefinitions","every","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","Effect","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","MovieMasher","static","Mash","Masher","Theme","Transition","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","flatMap","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","drawFilters","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionClass","urlVisible","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","imageInstall","ImageFactoryImplementation","TrackClass","isMainVideo","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","sort","Composition","visibleContext","_visibleContext","_gain","sourcesByClip","gainNode","timing","clipTiming","cancelScheduledValues","pair","linearRampToValueAtTime","contextSeconds","mashSeconds","dif","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","mainClip","mergeContextAtTime","requestAnimationFrame","compositeVisible","loadedAudible","gainSource","connect","adjustSourceGain","clipsToKeep","disconnect","playing","Volume","bufferSource","stopPlaying","stop","MashClass","_backcolor","definitionId","definitionType","trackOptions","assureClipsHaveFrames","newTrack","clipTrackAtIndex","oldTrack","clipTrack","emitIfFramesChange","removeClips","Track","_composition","bufferFrames","bufferTime","limitedValue","maxFrames","newFrames","intersects","trackOfTypeAtIndex","clipsInTracks","objects","clipsVisible","clipsAudible","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","flat","clipIntersects","filterIntersecting","clipsVideo","clipsVisibleInTimeRange","fromTime","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","_playing","drawTime","seekToTime","paused","Ended","timeChange","drawnTime","Loaded","origFrames","Duration","changeAction","stopLoadAndDraw","startAndEnd","clipsAtTimes","loadedDefinitions","definitionTimes","_paused","forcedValue","_bufferTimer","clearInterval","Pause","startContext","setInterval","Play","startPlaying","_drawAtInterval","drawAtInterval","Playing","pop","seekTime","Seeking","stalled","seeking","Seeked","clipWithTrack","av","MashDefinitionClass","MashDefaultId","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","mashInstall","MashFactoryImplementation","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","MasherClass","_loop","fromCanvas","_fps","_volume","clone","createFromObject","handleAction","_actions","frameOrIndex","addEffect","clipType","addClip","trackCount","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","_selectedClips","clipCanBeSplit","widthTrimmed","heightTrimmed","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","pristineOrThrow","selectedEffectOrThrow","pristineEffectOrThrow","_pristine","transformType","transformable","transformTarget","pristineTarget","destroy","firstClip","abutting","Fps","goToTime","loadMash","_mash","mashOptions","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","effectOrArray","_muted","per","toFixed","positionStep","repeat","_pristineEffect","removeEffects","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipsOrEffects","selected","selectedClipOrMash","selectedClipObject","newSelectedClips","newPristine","Selection","newSelectedEffects","newPristineEffect","selectionObjects","silenced","equalsTime","MasherDefinitionClass","MasherDefaultId","MasherInterval","mashers","masherDestroy","masherStop","handleInterval","masherStart","masherDefinition","masherDefinitionFromId","masherInstance","masherFromId","masherInitialize","masherDefine","MasherFactoryImplementation","ThemeWithTransformable","ThemeClass","ThemeDefinitionWithVisible","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeTitleJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","from","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromClip","toClip","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","VideoWithTransformable","VideoClass","divide","VideoDefinitionWithVisible","VideoDefinitionClass","video_rate","framesMax","urlForFrame","checkUrls","urls","zeroTime","allUrls","deleting","s","zeropadding","padStart","__zeropadding","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","videoInstall","VideoFactoryImplementation","pad","do_rest"],"mappings":"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"}