{"version":3,"file":"moviemasher.min.js","sources":["../src/Setup/Default.ts","../src/Setup/Errors.ts","../src/Setup/Parameter.ts","../src/Utilities/Is.ts","../src/Setup/Enums.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Utilities/Capitalize.ts","../src/Utilities/Color.ts","../src/Utilities/Element.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Id.ts","../src/Utilities/Round.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/TrackRange.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Loading/Cache.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Loading/Processor.ts","../src/Loading/AudioProcessor.ts","../src/Loading/FontProcessor.ts","../src/Loading/ModuleProcessor.ts","../src/Loading/Loader.ts","../src/Loading/ProcessorFactory.ts","../src/Loading/AudioLoader.ts","../src/Loading/FontLoader.ts","../src/Loading/ImageLoader.ts","../src/Loading/ModuleLoader.ts","../src/Mash/Instance/Instance.ts","../src/Mash/Definition/Definition.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/MovieMasher/MovieMasher.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Masher/MasherInstance.ts","../src/Mash/Masher/MasherDefinition.ts","../src/Mash/Masher/MasherFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Factories/index.ts","../src/Utilities/Seconds.ts"],"sourcesContent":["const Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 30,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: \"#00000000\",\n    gain: 0.75,\n    buffer: 10,\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { pattern: '%.jpg', fps: 30, increment: 1, begin: 1  },\n  },\n}\n\nexport { Default }\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    canvas: `${$invalidArgument} canvas `,\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  deprecation: {\n    property_types: `property_types ${$deprecated} - please get MovieMasher.Property.types instead`,\n    addModulesOfType: `addModulesOfType ${$deprecated} for unsupported type `,\n    configure: {\n      get: `configure ${$deprecated} - please get MovieMasher.defaults instead`,\n      set: `configure ${$deprecated} - please supply mash.quantize and media.duration instead`,\n    },\n    canvas_context: {\n      get: `canvas_context ${$deprecated} - please get visibleContext instead`,\n      set: `canvas_context ${$deprecated} - please set visibleContext instead`,\n    }\n  },\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { JsonObject, ScalarValue, ValueObject } from \"../declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { ScalarArray, UnknownObject } from \"../declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Mash = 'mash',\n  Masher = 'masher',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Canvas = 'canvaschange',\n  Ended = 'ended',\n  Duration = 'durationchange',\n  Fps = 'ratechange',\n  Loaded = 'loadeddata',\n  Pause = 'pause',\n  Play = 'play',\n  Playing = 'playing',\n  Seeking = 'seeking',\n  Seeked = 'seeked',\n  Time = 'timeupdate',\n  Track = 'track',\n  Volume = 'volumechange',\n  Waiting = 'waiting',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Hex = 'hex',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  Scalar = 'scalar',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","import { ScalarValue } from \"../../declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","\nimport { ScalarRaw } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarRaw } from \"../../declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) throw Errors.type + 'propertyType ' + type\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarRaw } from \"../declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\nexport { Property, PropertyObject }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { Rgb, RgbObject, Yuv, YuvObject } from \"../declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst yuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst rgb2hex = (rgb : RgbObject) : string => {\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst yuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst rgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst Color = {\n  yuvBlend,\n  rgb2yuv,\n  yuv2rgb,\n  rgb2hex, // unused after 4.1 refactor, but perhaps needed?\n}\n\nexport { Color }\n","import { NumberObject } from '../declarations'\n\nconst ElementScrollProps = [\n  'height',\n  'width',\n  'scrollPaddingleft',\n  'scrollPaddingRight',\n  'scrollPaddingTop',\n  'scrollPaddingBottom',\n  'x',\n  'y',\n]\nconst elementScrollMetrics = (element?: Element | null): NumberObject | undefined => {\n  if (!element) return\n\n\n  const style: CSSStyleDeclaration = getComputedStyle(element)\n  const entries = ElementScrollProps.map(key => {\n    const value = style.getPropertyValue(key) || '0px'\n    const number = Number(value.slice(0, -2))\n    return [key, isNaN(number) ? 0 : number]\n  })\n  const { scrollLeft, scrollTop } = element\n  entries.push(['scrollLeft', scrollLeft])\n  entries.push(['scrollTop', scrollTop])\n  return Object.fromEntries(entries)\n}\n\nconst Element = {\n  scrollMetrics: elementScrollMetrics,\n}\n\nexport { Element, elementScrollMetrics }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","const Id = () : string => {\n  return `${Date.now().toString(36)}${Math.random().toString(36).substr(2)}`\n}\n\nexport { Id }\n","import { NumberConverter } from \"../declarations\"\n\nconst roundMethod = (rounding = '') : NumberConverter => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number: number, method = ''): number => {\n  const func = roundMethod(method)\n  return func(number)\n}\n\nconst Round = {\n  method: roundMethod,\n  withMethod: roundWithMethod,\n}\n\nexport { Round, roundMethod, roundWithMethod }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../declarations\"\nimport { roundWithMethod } from \"./Round\"\n\nconst pixelFromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst pixelToPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst pixelToIndex = (pixel : number) => pixel * 4\n\nconst pixelRgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst pixelRgba = (pixel : number, data : Pixels) => pixelRgbaAtIndex(pixelToIndex(pixel), data)\n\nconst pixelSafe = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = pixelToPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return pixelFromPoint(pt, width)\n}\n\nconst pixelNeighboringPixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(pixelSafe(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst pixelNeighboringRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  pixelNeighboringPixels(pixel, size).map(p => pixelRgba(p, data))\n)\n\nconst pixelColor = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nconst pixelPerFrame = (frames: number, width: number, zoom : number): number => {\n  if (!(frames && width)) return 0\n  const factor = (1.01 - Math.max(0.01, Math.min(1.0, zoom)))\n  const factoredFrames = frames * factor\n  const perFrame = width / factoredFrames\n  return perFrame\n}\n\nconst pixelFromFrame = (frame: number, perFrame : number, rounding = 'ceil'): number => {\n  if (!(frame && perFrame)) return 0\n\n  const pixels = frame * perFrame\n  return roundWithMethod(pixels, rounding)\n}\n\nconst pixelToFrame = (pixels: number, perFrame : number, rounding = 'round'): number => {\n  if (!(pixels && perFrame)) return 0\n\n  return roundWithMethod(pixels / perFrame, rounding)\n}\n\nconst Pixel = {\n  color: pixelColor,\n  fromFrame: pixelFromFrame,\n  neighboringRgbas: pixelNeighboringRgbas,\n  perFrame: pixelPerFrame,\n  rgbaAtIndex: pixelRgbaAtIndex,\n  toFrame: pixelToFrame,\n}\n\nexport {\n  Pixel,\n  pixelColor,\n  pixelFromFrame,\n  pixelNeighboringRgbas,\n  pixelPerFrame,\n  pixelRgbaAtIndex,\n  pixelToFrame,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { roundWithMethod } from \"./Round\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst timeEqualizeRates = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = Number(this.frame / this.fps) * Number(fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return timeEqualizeRates(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, timeEqualizeRates }\n","import { Is } from \"./Is\"\nimport { Time, timeEqualizeRates } from \"./Time\"\nimport { roundWithMethod } from \"./Round\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = timeEqualizeRates(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> timeEqualizeRates(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> timeEqualizeRates(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { TrackType } from \"../Setup/Enums\"\n\nclass TrackRange {\n  constructor(first = 0, last = -1, type? : TrackType) {\n    this.first = first\n    this.last = last\n    this.type = type\n  }\n\n  get count(): number { return 1 + this.last - this.first }\n\n  last = -1\n\n  get relative(): boolean { return this.last < 0 }\n\n  equals(trackRange: TrackRange): boolean {\n    return this.last === trackRange.last && this.first === trackRange.first\n  }\n\n  first = 0\n\n  get tracks(): number[] {\n    if (this.last < 0) return []\n\n    return Array(this.last - this.first + 1).fill(0).map((_, idx) => this.first + idx)\n  }\n\n  toString(): string { return `[${this.type || 'av'}-${this.first}-${this.last}]` }\n\n  type?: TrackType\n\n  withEnd(last: number): TrackRange {\n    return TrackRange.fromArgs(this.first, last, this.type)\n  }\n\n  withMax(max: number): TrackRange { return this.withEnd(max + this.last) }\n\n  static ofType(type: TrackType, last = -1, first = 0): TrackRange {\n    return this.fromArgs(first, last, type)\n  }\n  static fromArgs(first = 0, last = -1, type?: TrackType): TrackRange {\n    return new TrackRange(first, last, type)\n  }\n}\n\nexport { TrackRange }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","\nimport { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Mash | Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Mash | Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target[this.property] = this.redoValue\n  }\n\n  undoAction() : void {\n    this.target[this.property] = this.undoValue\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.redoValue)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.undoValue)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.redoValue, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.undoValue, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex)\n  }\n\n  setFrames(frames : number[]) : void {\n    this.clips.forEach((clip, index) => { clip.frame = frames[index] })\n  }\n\n  redoAction() : void {\n    if (this.redoFrames) this.setFrames(this.redoFrames)\n    this.addClips(this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    if (this.undoFrames) this.setFrames(this.undoFrames)\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\nimport { Is } from \"../../Utilities\";\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  add(action : Action) : void {\n    const remove = this.instances.length - (this.index + 1)\n    if (Is.positive(remove)) this.instances.splice(this.index + 1, remove)\n\n    this.instances.push(action)\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { Any } from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  cached(url : string) : boolean {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return this.cachedByKey.has(this.key(url))\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  get(url : string) : Any | undefined {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.log(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any } from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      // console.log(\"AudibleContext context\", Klass.name)\n      this.__context = new Klass()\n    }\n    return this.__context\n  }\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    // console.log(this.constructor.name, \"createBuffer\", length)\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource() : AudioBufferSourceNode { return this.context.createBufferSource() }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n\n  get currentTime() : number { return this.context.currentTime }\n}\n","import {\n  Context2D,\n  ContextData,\n  ContextElement,\n  DrawingSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle,\n  UnknownObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Action } from \"../Editing/Action/Action\"\nimport { EventType } from \"../Setup/Enums\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nclass VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    const { context2d } = object\n    // console.trace(\"VisibleContext\", \"constructor\", context2d)\n    if (context2d) this._context2d = context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : ContextElement { return this.context2d.canvas }\n\n  set canvas(value: ContextElement) {\n    const { canvas } = this\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.invalid.canvas\n\n    this.context2d = context2d\n\n    // have both the old and new canvas broadcast event\n    this.emit(EventType.Canvas, {}, canvas)\n    this.emit(EventType.Canvas)\n  }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  private get context2d() : Context2D {\n    if (!this._context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this._context2d = context\n    }\n    return this._context2d\n  }\n\n  private set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this._context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : DrawingSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : DrawingSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : DrawingSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : DrawingSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : DrawingSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : DrawingSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : DrawingSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : DrawingSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : DrawingSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n  emit(type: EventType, detail: UnknownObject = {}, target?: ContextElement): void {\n    const element = target ? target : this.canvas\n    const event = { detail }\n    // console.log(\"emit\", type, this.canvas)\n    element.dispatchEvent(new CustomEvent(type, event))\n  }\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : DrawingSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private _context2d? : Context2D\n}\n\ninterface EventsDetail {\n  action? : Action\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { VisibleContext, EventsType, EventsDetail}\n","import { Size, Context2D, ContextElement } from \"../declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromCanvas(canvas : ContextElement) : VisibleContext {\n    const context = this.visible()\n    context.canvas = canvas\n    return context\n  }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","import { Any } from \"../declarations\"\n\nclass Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { Processor }\n","import { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Any, LoadPromise, UnknownObject } from \"../declarations\"\nimport { Processor } from \"./Processor\"\n\nclass AudioProcessor extends Processor {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  process(_url : string, buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return this.audibleContext.decode(buffer)\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioProcessor }\n","import { LoadFontPromise } from \"../declarations\"\nimport { Cache } from \"./Cache\"\nimport { Processor } from \"./Processor\"\n\nclass FontProcessor extends Processor {\n  process(url : string, buffer : ArrayBuffer) : LoadFontPromise {\n    const family = Cache.key(url)\n    const face = new FontFace(family, buffer)\n    const promise = face.load().then(() => {\n      document.fonts.add(face)\n      return { family }\n    })\n    return promise\n  }\n}\n\nexport { FontProcessor }\n","import { Any } from \"../declarations\"\nimport { Processor } from \"./Processor\"\n\nclass ModuleProcessor extends Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { ModuleProcessor }\n","import { Any, LoadPromise, UnknownObject } from \"../declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader  {\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { AudioProcessor } from \"../Loading/AudioProcessor\"\nimport { FontProcessor } from \"../Loading/FontProcessor\"\nimport { ModuleProcessor } from \"../Loading/ModuleProcessor\"\nimport { AudibleContext } from \"../Playing\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\nimport { Processor } from \"./Processor\"\n\ntype ProcessorClassType = typeof Processor\n\nconst classes : {[index : string] : ProcessorClassType } = {\n  Audio: AudioProcessor,\n  Font: FontProcessor,\n  Module: ModuleProcessor,\n}\n\nclass ProcessorClass {\n  audio(object : { audibleContext : AudibleContext}) {\n    return new (<typeof AudioProcessor> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  install(type : string, loader : ProcessorClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst ProcessorFactory = new ProcessorClass()\nexport { ProcessorFactory }\n","import { ProcessorFactory } from \"./ProcessorFactory\"\nimport { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Loader } from \"./Loader\"\n\nimport { Any, LoadPromise, UnknownObject } from \"../declarations\"\nimport { LoadType} from \"../Setup/Enums\"\n\nclass AudioLoader extends Loader {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  type = LoadType.Audio\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  async requestUrl(url : string) : Promise<AudioBuffer> {\n    return fetch(url).then(response => {\n      return response.arrayBuffer()\n    }).then(loaded => {\n      const options = { audibleContext: this.audibleContext }\n      const processor = ProcessorFactory.audio(options)\n      return processor.process(url, loaded)\n    })\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { ProcessorFactory } from \"./ProcessorFactory\"\nimport { Loader } from \"./Loader\"\nimport { LoadFontPromise } from \"../declarations\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url : string) : LoadFontPromise {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(buffer => ProcessorFactory.font().process(url, buffer))\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../declarations\"\nimport { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\nimport { Any } from \"../declarations\"\n\nclass ModuleLoader extends Loader {\n  type = LoadType.Module\n\n  async requestUrl(url : string) : Promise<Any> { return import(url) }\n}\n\nexport { ModuleLoader }\n","import { Any, JsonObject, LoadPromise, SelectionObject, SelectionValue } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Id } from \"../../Utilities\";\n\ninterface InstanceObject {\n  [index: string]: unknown\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceClass {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceClass'\n\n    const { definition, id, label } = <InstanceObject> object\n    if (!definition) throw Errors.invalid.definition.object + 'InstanceClass'\n\n    this.definition = definition\n    if (id && id !== definition.id) this._id = id\n    if (label && label !== definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  protected _id? : string\n\n  get id() : string { return this._id || this.definition.id }\n\n  private _identifier?: string\n\n  get identifier() : string { return this._identifier || Id() }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  load(quantize : number, start : Time, end? : Time) : LoadPromise {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.load(startTime, endTime)\n  }\n\n  loaded(quantize : number, start : Time, end? : Time) : boolean {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.loaded(startTime, endTime)\n  }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + \"value \" + this.propertyNames.includes(key) + \" \" + this[key]\n\n    return <SelectionValue> value\n  }\n}\n\ninterface Instance extends InstanceClass {\n\n}\n\nexport { Instance, InstanceClass, InstanceObject }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, JsonObject, LoadPromise, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { Instance, InstanceClass, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionClass {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    if (label) this.label = label\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label? : string\n\n  load(_start : Time, _end? : Time) : LoadPromise { return Promise.resolve() }\n\n  loaded(_start : Time, _end? : Time) : boolean { return true }\n\n  loadedAudible(_time?: Time) : Any {}\n\n  loadedVisible(_time?: Time) : Any {}\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionClass {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\nexport { Definition, DefinitionClass, DefinitionObject, DefinitionTimes }\n","import { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { Any, Constrained, JsonObject } from \"../../../declarations\"\nimport { Clip } from \"../Clip/Clip\"\nimport { AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst AudibleGainDelimiter = ','\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain, trim } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n      // cnsole.log(\"AudibleMixin gain\", typeof gain, gain, this.gain)\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize : number) : Time { return Time.fromArgs(this.trim, quantize) }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, Constrained, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Instance } from \"../../Instance\"\nimport { ClipObject } from \"./Clip\"\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n      const frame = Math.max(Math.min(time.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceClass)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nclass AudioClass extends AudioWithAudible {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, Constrained, ObjectUnknown } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { Loader } from \".\"\nimport { AudioLoader } from \"../Loading/AudioLoader\"\nimport { FontLoader } from \"../Loading/FontLoader\"\nimport { ImageLoader } from \"../Loading/ImageLoader\"\nimport { ModuleLoader } from \"../Loading/ModuleLoader\"\nimport { UnknownObject } from \"../declarations\"\nimport { Capitalize } from \"../Utilities\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Module: ModuleLoader,\n}\n\nclass LoaderClass {\n  audio(object? : UnknownObject | undefined) : AudioLoader {\n    return new (<typeof AudioLoader> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, Constrained, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinition } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration, url, audio, source, waveform } = <AudibleDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (loops) this.loops = !!loops\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    audible = true\n\n    load(start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(start, end)]\n      if (end) {\n        if (Cache.cached(this.urlAudible)) {\n          const cached = Cache.get(this.urlAudible)\n          if (cached instanceof Promise) promises.push(cached)\n        } else promises.push(LoaderFactory.audio().loadUrl(this.urlAudible))\n      }\n      return Promise.all(promises).then()\n    }\n    loaded(start : Time, end? : Time) : boolean {\n      return super.loaded(start, end) && Cache.cached(this.urlAudible)\n    }\n\n    loadedAudible(_time?: Time) : AudioBuffer | undefined {\n      return Cache.get(this.urlAudible)\n    }\n\n    loops = false\n\n    source? : string\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      object.audio = this.urlAudible\n      if (this.loops) object.loops = true\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.urlAudible)) return\n\n      Cache.remove(this.urlAudible)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst definitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = () : void => { definitionsMap.clear() }\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(id)\n    throw Errors.unknown.definition + 'definitionsFromId ' + id\n  }\n\n  const definition = definitionsMap.get(id)\n  if (!definition) throw Errors.internal\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  // console.log(\"definitionsInstall\", type, id)\n  definitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => definitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) {\n    console.log(\"definitionsUninstall\", id)\n    return\n  }\n  const definition = definitionsFromId(id)\n\n  definitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal + 'definitionsUninstall'\n\n  definitions.splice(index, 1)\n  // console.log(\"uninstalled\", id)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: definitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  definitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nclass AudioDefinitionClass extends AudioDefinitionWithAudible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MasherFactory } from \"../Masher/Masher\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Masher]?: MasherFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject } from \"./Audio\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  instance: audioInstance,\n}\n\nFactories.audio = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    return this.definition.draw(evaluator, this.evaluated(evaluator))\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n\n  // id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      array.push(Pixel.neighboringRgbas(index * 4, pixels, size).map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  // id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  // id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { pixelNeighboringRgbas } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = pixelNeighboringRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  // id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceClass {\n  declare definition : FontDefinition\n}\n\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\n\n\nclass FontDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    const instance = new FontClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.source)) {\n      const cached = Cache.get(this.source)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.font().loadUrl(this.source))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.source)\n  }\n\n  loadedVisible(_time?: Time) : Any { return Cache.get(this.source) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import fontDefaultJson from \"./DefinitionObjects/default.json\"\nimport { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories.font = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { FontFactoryImplementation } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return FontFactoryImplementation.definitionFromId(<string> id).source\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  // id = 'drawtext'\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n\n  // id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  // id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  // id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  // id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories.filter = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, Constrained, JsonObject, ScalarValue, Size } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, Constrained, LoadPromise } from \"../../../declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { Instance } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        promises.push(definition.load(startTime, endTime))\n      })\n      return Promise.all(promises).then()\n    }\n\n    loaded(quantize : number, start : Time, end? : Time) : boolean {\n      if (!super.load(quantize, start, end)) return false\n\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.every(definition =>\n        definition.loaded(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceClass)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\n\nimport effectBlurJson from \"./DefinitionObjects/blur.json\"\nimport effectChromaKeyJson from \"./DefinitionObjects/chromakey.json\"\nimport effectEmbossJson from \"./DefinitionObjects/emboss.json\"\nimport effectGrayscaleJson from \"./DefinitionObjects/grayscale.json\"\nimport effectSepiaJson from \"./DefinitionObjects/sepia.json\"\nimport effectSharpenJson from \"./DefinitionObjects/sharpen.json\"\nimport effectTextJson from \"./DefinitionObjects/text.json\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  instance: effectInstance,\n}\n\nFactories.effect = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectInitialize,\n  effectInstance,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Factories } from \"../Mash/Factories/Factories\"\nimport { Errors } from \"../Setup/Errors\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { MashFactory } from \"../Mash/Mash/Mash\"\nimport { MasherFactory } from \"../Mash/Masher/Masher\"\n\n/**\n * Provides access to factory objects that create all other object definitions and instances.\n *\n * @example Create {@link Masher} instance and bind to a CANVAS element\n * ```ts\n * const canvas : ContextElement = document.getElementById('moviemasher-canvas')\n * const masher : Masher = MovieMasher.masher.instance({ canvas })\n * ```\n * @sealed\n */\nclass MovieMasher {\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create effect definitions and instances\n   */\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  static get [DefinitionType.Masher]() : MasherFactory {\n    const factory = Factories[DefinitionType.Masher]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Masher\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  private constructor() {}\n}\n\n\n\nexport { MovieMasher }\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\"\n\n\nconst MergerWithModular = ModularMixin(InstanceClass)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../Merger/DefinitionObjects/blend.json\"\nimport mergerCenterJson from \"../Merger/DefinitionObjects/center.json\"\nimport mergerConstrainedJson from \"../Merger/DefinitionObjects/constrained.json\"\nimport mergerDefaultJson from \"../Merger/DefinitionObjects/default.json\"\nimport mergerOverlayJson from \"../Merger/DefinitionObjects/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories.merger = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher\"\n\nconst ScalerWithModular = ModularMixin(InstanceClass)\nclass ScalerClass extends ScalerWithModular {\n  declare definition : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler,\n  ScalerDefinition,\n  ScalerDefinitionObject,\n  ScalerObject\n} from \"../Scaler/Scaler\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport scalerDefaultJson from \"../Scaler/DefinitionObjects/default.json\"\nimport scalerPanJson from \"../Scaler/DefinitionObjects/pan.json\"\nimport scalerScaleJson from \"../Scaler/DefinitionObjects/scale.json\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories.scaler = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, Size, ValueObject } from \"../../../declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { Visible } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction TransformableMixin<TBase extends Constrained<Visible>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject> object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions() : Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects : Effect[] = []\n\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      promises.push(this.merger.load(quantize, start, end))\n      promises.push(this.scaler.load(quantize, start, end))\n      this.effects.forEach(effect => {\n        promises.push(effect.load(quantize, start, end))\n      })\n      return Promise.all(promises).then()\n    }\n\n    mergeContextAtTime(mashTime : Time, quantize: number, context : VisibleContext) : void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger : Merger\n\n    get propertyValues() : SelectionObject {\n      const merger = <ValueObject> this.merger.propertyValues\n      const scaler = <ValueObject> this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler : Scaler\n\n    toJSON() : JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { Cache } from \"../../../Loading\"\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Any, Constrained, Size } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Clip } from \"../Clip/Clip\"\nimport { VisibleDefinition } from \"./Visible\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      const visibleDefinition = <VisibleDefinition> this.definition\n      const image = visibleDefinition.loadedVisible(definitionTime)\n      if (!image) return\n\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceClass)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { TrackType } from \"../../../Setup/Enums\"\nimport { Constrained } from \"../../../declarations\"\nimport { ClipDefinition } from \"../Clip/Clip\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType, LoadType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\n\nclass ImageDefinitionClass  extends ImageDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.urlVisible)) {\n      const cached = Cache.get(this.urlVisible)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.image().loadUrl(this.urlVisible))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.urlVisible)\n  }\n\n  loadedVisible(_time? : Time) : DrawingSource | undefined { return Cache.get(this.urlVisible) }\n\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories.image = ImageFactoryImplementation\n\nexport {\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame } from \"../../Utilities\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\n\ninterface TrackOptions {\n  clips? : Clip[]\n  type? : TrackType\n  index? : number\n}\n\nclass TrackClass {\n  constructor(object : TrackOptions) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips)\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject, TrackOptions}\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType, EventType } from \"../../Setup/Enums\"\nimport { pixelColor } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleContext, VisibleContext } from \"../../Playing\"\nimport { ContextFactory } from \"../ContextFactory\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\n\ninterface ClipTiming {\n  start : number\n  duration : number\n  offset : number\n}\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudioBufferSourceNode\n}\n\ninterface CompositionObject {\n  audibleContext? : AudibleContext\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n  visibleContext? : VisibleContext\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    // console.trace(\"Composition constructor\")\n    const {\n      audibleContext,\n      backcolor,\n      buffer,\n      gain,\n      quantize,\n      visibleContext\n    } = object\n\n    if (backcolor) this.backcolor = backcolor\n\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n\n    if (audibleContext) this._audibleContext = audibleContext\n    else this._audibleContext = ContextFactory.audible()\n\n    if (visibleContext) this._visibleContext = visibleContext\n    else this._visibleContext = ContextFactory.visible()\n\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) return\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = this.clipTiming(clip)\n    const { start, duration } = timing\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  private _audibleContext : AudibleContext\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n  private clipTiming(clip : Audible) : ClipTiming {\n    const range = clip.timeRange(this.quantize)\n    const zeroSeconds = this.contextSeconds - this.mashSeconds\n    let offset = 0\n    let start = zeroSeconds + range.seconds\n    let duration = range.lengthSeconds\n\n    if (clip.trim) {\n      range.frame = clip.trim\n      offset = range.seconds\n    }\n    const now = this.audibleContext.currentTime\n    if (now > start) {\n      const dif = now - start\n      start = now\n      offset += dif\n      duration -= dif\n    }\n    return { duration, offset, start }\n  }\n\n  compositeAudible(clips : Audible[]) : boolean {\n    if (!this.createSources(clips)) return false\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    // console.trace(this.constructor.name, \"compositeVisible\", this.visibleContext.size)\n\n    // console.log(this.constructor.name, \"compositeVisible\", time, clips.length)\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, this.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    })\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n  private contextSeconds = 0\n\n  private createSources(clips : Audible[]) : boolean {\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const { definition } = clip\n      const buffer = definition.loadedAudible()\n      if (!buffer) return false\n\n      const timing = this.clipTiming(clip)\n      const { start, duration, offset } = timing\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        const gainSource = this.audibleContext.createBufferSource()\n        gainSource.buffer = buffer\n        gainSource.loop = clip.definition.loops\n        const gainNode = this.audibleContext.createGain()\n        gainSource.connect(gainNode)\n        gainNode.connect(this.audibleContext.destination)\n        gainSource.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep : Audible[] = []) : void {\n    this.sourcesByClip.forEach((source, clip) => {\n      if (clipsToKeep.includes(clip)) return\n\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(this.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n      this.sourcesByClip.delete(clip)\n    })\n  }\n\n  private drawBackground() : void {\n    this.visibleContext.clear()\n    if (!this.backcolor) return\n\n    this.visibleContext.drawFill(pixelColor(this.backcolor))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain === value) return\n\n    this._gain = value\n\n    if (this.playing) {\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n    this.visibleContext.emit(EventType.Volume)\n  }\n\n  private mashSeconds = 0\n\n  playing = false\n\n  quantize = Default.mash.quantize\n\n  get seconds() : number {\n    if (!this.audibleContext) throw Errors.internal + 'audibleContext'\n\n    const ellapsed = this.audibleContext.currentTime - this.contextSeconds\n    return ellapsed + this.mashSeconds\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext() : void {\n    if (this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n    this.bufferSource = this.audibleContext.createBufferSource()\n    this.bufferSource.loop = true\n    this.bufferSource.buffer = this.audibleContext.createBuffer(this.buffer)\n    this.bufferSource.connect(this.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    // console.log(this.constructor.name, \"startPlaying\")\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.mashSeconds = seconds\n\n    this.contextSeconds = this.audibleContext.currentTime\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.mashSeconds, this.contextSeconds)\n    return true\n  }\n\n  stopPlaying() : void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.mashSeconds = 0\n    this.contextSeconds = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(this.audibleContext.destination)\n    delete this.bufferSource\n  }\n\n  private _visibleContext : VisibleContext\n\n  get visibleContext() : VisibleContext { return this._visibleContext }\n\n  set visibleContext(value : VisibleContext) { this._visibleContext = value }\n\n}\n\nexport { Composition }\n","import { DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Interval, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass, TrackObject, TrackOptions } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { MovieMasher } from \"../../MovieMasher\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceClass } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Action } from \"../../Editing/Action/Action\";\nimport { TrackRange } from \"../../Utilities/TrackRange\"\n\nclass MashClass extends InstanceClass implements Mash {\n  constructor(...args: Any[]) {\n\n    super(...args)\n    this._id ||= Id()\n\n    // console.log(\"Mash constructor\", this.id)\n\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      audibleContext,\n      buffer,\n      gain,\n      visibleContext,\n    } = <MashOptions>object\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type + 'Mash.constructor media'\n\n      const definitionType = <DefinitionType>type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return MovieMasher[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Audio))\n    ))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Video))\n    ))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (audibleContext) this._audibleContext = audibleContext\n    if (visibleContext) {\n      // console.log(\"Mash constructor visibleContext\")\n      this._visibleContext = visibleContext\n    }\n  }\n\n  addClipsToTrack(clips: Clip[], trackIndex = 0, insertIndex = 0): void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    this.assureClipsHaveFrames(clips)\n    const [clip] = clips\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType: TrackType): Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    this.visibleContext.emit(EventType.Track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips: Clip[]): void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition>clip.definition\n      const duration = definition.duration\n      clip.frames = Time.fromSeconds(duration, this.quantize, 'floor').frame\n    })\n  }\n\n  private _audibleContext?: AudibleContext\n\n  get audibleContext(): AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._composition) this.composition.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value: AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._composition) this.composition.audibleContext = value\n    }\n  }\n\n  audio: Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor(): string { return this._backcolor }\n\n  set backcolor(value: string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.mash.buffer\n\n  get buffer(): number { return this._buffer }\n\n  set buffer(value: number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames(): number { return this.buffer * this.quantize }\n\n  private get bufferTime(): Time { return Time.fromSeconds(this.buffer) }\n\n  private _bufferTimer?: Interval\n\n  changeClipFrames(clip: Clip, value: number): void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip: Audible, value: number, frames: number): void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clipIntersects(clip: Clip, range: TimeRange): boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip: Clip): Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip: Clip, index = 0): Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  clips(timeRange?: TimeRange, trackRange?: TrackRange): Clip[] {\n    const rangeTracks = this.tracksInRange(trackRange)\n    const inTracks = this.clipsInTracks(rangeTracks)\n    if (!timeRange) return inTracks\n\n    return this.filterIntersecting(inTracks, timeRange)\n  }\n\n\n  private clipsAtTimes(start: Time, end?: Time): Clip[] {\n    const objects: Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  private clipsAudible(start: Time, end?: Time): Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsInTracks(tracks?: Track[]): Clip[] {\n    const clipTracks = tracks || this.tracks\n    return clipTracks.map(track => track.clips).flat()\n  }\n\n  private filterIntersecting(clips: Clip[], timeRange: TimeRange): Clip[] {\n    const range = timeRange.scale(this.quantize)\n    return clips.filter(clip => this.clipIntersects(clip, range))\n\n  }\n  private get clipsAudibleInTracks(): Audible[] {\n    return <Audible[]> this.clipsInTracks().filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange: TimeRange): Audible[] {\n    return <Audible[]> this.filterIntersecting(this.clipsAudibleInTracks, timeRange)\n  }\n\n  private get clipsVideo(): Visible[] { return <Visible[]>this.video.flatMap(track => track.clips) }\n\n  private clipsVisible(start: Time, end?: Time): Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time: Time): Visible[] {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  clipsVisibleSlice(frame: number, frames: number): Visible[] {\n    const range = TimeRange.fromArgs(frame, this.quantize, frames)\n    return this.clipsVisibleInTimeRange(range)\n  }\n\n  private clipsVisibleInTimeRange(timeRange: TimeRange): Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  compositeAudible(): boolean {\n    const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(clips)\n  }\n\n  private _composition?: Composition\n\n  get composition(): Composition {\n    if (!this._composition) {\n      const options = {\n        audibleContext: this.audibleContext,\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n        visibleContext: this.visibleContext,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible(): void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest(): void {\n    const { time } = this\n    this.composition.compositeVisibleRequest(time, this.clipsVisibleAtTime(time))\n  }\n\n  declare definition: MashDefinition\n\n  destroy(): void {\n    delete this._visibleContext\n    delete this._audibleContext\n    delete this._composition\n  }\n\n  private _drawAtInterval?: Interval\n\n  private drawAtInterval(): void {\n    // console.log(this.constructor.name, \"drawAtInterval playing: \", this._playing)\n    if (!this._playing) return\n    const time = this.time.withFrame(this.time.frame + 1)\n    const seconds = this.playing ? this.composition.seconds : time.seconds\n    if (seconds < this.endTime.seconds) {\n      if (seconds >= time.seconds) this.drawTime(time)\n    } else {\n      // console.log(this.constructor.name, \"drawAtInterval finished at\", seconds, this.endTime.seconds)\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else {\n        this.paused = true\n        this.visibleContext.emit(EventType.Ended)\n      }\n    }\n  }\n\n  drawnTime?: Time\n\n  private drawTime(time: Time): void {\n    const timeChange = time !== this.time\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n    this.visibleContext.emit(timeChange ? EventType.Time : EventType.Loaded)\n  }\n\n  get duration(): number { return Time.fromArgs(this.frames, this.quantize).seconds }\n\n  private emitIfFramesChange(method: () => void): void {\n    const origFrames = this.frames\n    method()\n    const { frames } = this\n    if (origFrames !== frames) {\n      this.visibleContext.emit(EventType.Duration)\n      if (this.frame > frames) this.seekToTime(Time.fromArgs(frames, this.quantize))\n    }\n  }\n\n  get endTime(): Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  get frame(): number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames(): number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain(): number { return this._gain }\n\n  set gain(value: number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n  handleAction(action: Action): void {\n    this.visibleContext.emit(EventType.Action, { action })\n\n    if (action instanceof ChangeAction) {\n      const changeAction = <ChangeAction>action\n      const { property } = changeAction\n      if (property === \"gain\") {\n        if (this.playing && Is.aboveZero(this.gain)) {\n          this.composition.adjustSourceGain(<Audible>changeAction.target)\n        }\n        return\n      }\n    }\n    this.stopLoadAndDraw()\n  }\n  get startAndEnd(): Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  load(): LoadPromise {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const promises = this.clipsAtTimes(start, end).map(clip =>\n      clip.load(this.quantize, start, end)\n    )\n    return Promise.all(promises).then()\n  }\n\n  loadAndComposite(): void { this.load().then(() => { this.compositeVisibleRequest() }) }\n\n  get loadedDefinitions(): DefinitionTimes {\n    const map = <DefinitionTimes>new Map()\n    const [start, end] = this.startAndEnd\n    this.clipsAtTimes(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  maxTracks(type?: TrackType): number {\n    return type ? this[type].length : this.audio.length + this.video.length\n  }\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks().flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused === forcedValue) return\n\n    this._paused = forcedValue\n    if (forcedValue) {\n      this.playing = false\n      if (this._bufferTimer) {\n        clearInterval(this._bufferTimer)\n        delete this._bufferTimer\n      }\n      // console.log(\"Mash emit\", EventType.Pause)\n\n      this.visibleContext.emit(EventType.Pause)\n    } else {\n      this.composition.startContext()\n      if (!this._bufferTimer) {\n        this._bufferTimer = setInterval(() => { this.load() }, Math.round(this.buffer / 2))\n      }\n      this.load().then(() => { this.playing = true })\n      // console.log(\"Mash emit\", EventType.Play)\n      this.visibleContext.emit(EventType.Play)\n    }\n\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.log(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      if (value) {\n\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n          return\n        }\n        this._drawAtInterval = setInterval(() => { this.drawAtInterval()}, 500 / this.time.fps)\n        this.visibleContext.emit(EventType.Playing)\n      } else {\n        this.composition.stopPlaying()\n        if (this._drawAtInterval) {\n          clearInterval(this._drawAtInterval)\n          delete this._drawAtInterval\n        }\n      }\n      this._playing = value\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n    this.visibleContext.emit(EventType.Track)\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time) : LoadPromise {\n    if (this.seekTime !== time) {\n      this.seekTime = time\n      // console.log(\"seekToTime\", time)\n      this.visibleContext.emit(EventType.Seeking)\n      this.visibleContext.emit(EventType.Time)\n    }\n    return this.stopLoadAndDraw(true)\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  private stopLoadAndDraw(seeking? : boolean) : LoadPromise {\n    const { time, paused, playing } = this\n\n    if (playing) this.playing = false\n    return this.load().then(() => {\n      if (time === this.time) { // otherwise we must have gotten a seek call\n        if (seeking) {\n          delete this.seekTime\n          this.visibleContext.emit(EventType.Seeked)\n        }\n        this.drawTime(time)\n        if (!paused) {\n          this.composition.startContext()\n          this.playing = true\n        }\n      }\n    })\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRange() : TimeRange { return TimeRange.fromTime(this.time, this.frames) }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n\n    // console.log(\"trackOfTypeAtIndex\", type, index)\n    return this[type][index]\n  }\n\n  private trackOptions(object : TrackObject, index : number, type : TrackType) : TrackOptions {\n    const { clips } = object\n    if (!(clips && Is.populatedArray(clips))) return { type, index }\n\n    const objects = clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: index, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    })\n    this.assureClipsHaveFrames(objects)\n    return { type, index, clips: objects }\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  tracksInRange(trackRange?: TrackRange): Track[] | undefined {\n    if (!trackRange) return\n    const { type } = trackRange\n    const tracksMax = this.maxTracks(type)\n    const range = trackRange.relative ? trackRange.withMax(tracksMax) : trackRange\n\n    const inRange = []\n    if (type !== TrackType.Video) {\n      inRange.push(...this.audio.slice(range.first, range.count))\n    }\n    if (type !== TrackType.Audio) {\n      inRange.push(...this.video.slice(range.first, range.count))\n    }\n\n    console.log(`tracksInRange ${trackRange} -> ${range}`, tracksMax, type, inRange.length)\n    return inRange\n  }\n\n  video : Track[] = []\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      // console.log(\"Mash get visibleContext creating\")\n      this._visibleContext = ContextFactory.visible()\n\n      if (this._composition) this.composition.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    // console.log(\"Mash set visibleContext\", value)\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._composition) this.composition.visibleContext = value\n    }\n  }\n}\n\nexport { MashClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.mash.default\"\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\n\nconst MashDefaultId = \"com.moviemasher.mash.default\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MashDefaultId\n  return <MashDefinition> Definitions.fromId(idString)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {\n  new MashDefinitionClass({ id: MashDefaultId })\n}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories.mash = MashFactoryImplementation\n\nexport {\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import {\n  Any,\n  ContextElement,\n  LoadPromise,\n  SelectionValue,\n  ScalarValue,\n  SelectionObject,\n  UnknownObject\n} from \"../../declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes\n} from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Is } from \"../../Utilities/Is\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { ActionFactory } from \"../../Editing/Action/ActionFactory\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { Actions } from \"../../Editing/Actions/Actions\"\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Effect } from \"../Effect/Effect\"\nimport { EffectClass } from \"../Effect/EffectInstance\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { Mash, MashObject, MashOptions } from \"../Mash/Mash\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Clip } from \"../Mixin/Clip/Clip\"\nimport { Transformable } from \"../Mixin/Transformable/Transformable\"\nimport { Video } from \"../Video/Video\"\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject } from \"./Masher\"\nimport { Default } from \"../../Setup/Default\";\nimport { VisibleContext } from \"../../Playing\";\nimport { TrackRange } from \"../../Utilities\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\n\nclass MasherClass extends InstanceClass implements Masher {\n  [index : string] : unknown\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n    // console.log(\"Masher constructor\", this.id)\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      audibleContext,\n      mash,\n      canvas,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n\n    if (typeof audibleContext !== \"undefined\") this._audibleContext = audibleContext\n\n    if (canvas) this.visibleContext = ContextFactory.fromCanvas(canvas)\n    else this.visibleContext = ContextFactory.visible()\n\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n    if (mash) this.mash = mash\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n    const action = ActionFactory.createFromObject(clone)\n    this.actions.add(action)\n    this.handleAction(this.actions.redo())\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = MovieMasher.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = MovieMasher[definitionType].definition(object)\n\n    const clip = <Clip> definition.instance\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  private _audibleContext? : AudibleContext\n\n  get audibleContext() : AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._mash) this.mash.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value : AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._mash) this.mash.audibleContext = value\n    }\n  }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (this._buffer !== value) {\n      this._buffer = value\n      this.mash.buffer = value\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  get canvas() : ContextElement { return this.visibleContext.canvas }\n\n  set canvas(value : ContextElement) {\n    if (!value) throw Errors.invalid.canvas\n\n    // make sure canvas hasn't been stretched\n    const style = window.getComputedStyle(value)\n    const { width, height } = style\n    if (!(width && height)) throw Errors.invalid.canvas\n\n    const widthTrimmed = Number(width.slice(0, -2))\n    const heightTrimmed = Number(height.slice(0, -2))\n    if (Is.nan(widthTrimmed) || Is.nan(heightTrimmed)) throw Errors.invalid.canvas\n\n    value.width = widthTrimmed\n    value.height = heightTrimmed\n\n    // console.log(\"set canvas\", widthTrimmed, 'x', heightTrimmed, value)\n    this.visibleContext.canvas = value\n    this.mash.compositeVisible()\n  }\n\n  change(property : string, value? : SelectionValue) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) this.changeEffect(property, value, this.selectedEffect)\n      else this.changeClip(property, value, this.selectedClipOrThrow)\n    } else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selectedClipOrThrow\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selectedEffectOrThrow\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string, value?: SelectionValue) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.internal\n\n    const target = this.mash\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n\n    const undoValue = typeof value === \"undefined\" ? this._pristine[property] : target.value(property)\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue,\n      type: ActionType.Change,\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    // console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selectedClipOrThrow\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    const pristineTarget = this._pristine[transformType]\n    if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = pristineTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  clips(timeRange?: TimeRange, trackRange?: TrackRange): Clip[] {\n    return this.mash.clips(timeRange, trackRange)\n  }\n\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  // call when player removed from DOM\n  destroy() : void { MovieMasher.masher.destroy(this) }\n\n  draw() : void { this.mash.compositeVisible() }\n\n  get duration() : number { return this.mash.duration }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  private filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    //  must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // must be abutting each other on main track\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps }\n\n  set fps(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.fps\n\n    if (this._fps !== value) {\n      this._fps = value\n      this.visibleContext.emit(EventType.Fps)\n      this.time = this.time.scale(value)\n    }\n  }\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(value, this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value: Time): LoadPromise {\n    return this.mash.seekToTime(value.scaleToFps(this.fps))\n  }\n\n  isSelected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n  private handleAction(action : Action) : void {\n    this.mash.handleAction(action)\n    this.selectedClips = action.selectedClips\n    this.selectedEffects = action.selectedEffects\n  }\n\n  private loadMash() : LoadPromise { return this.mash.load() }\n\n  private loadMashAndDraw() : LoadPromise { return this.loadMash().then(() => { this.draw() }) }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value : boolean) {\n    this._loop = value\n    if (this._mash) this.mash.loop = value\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) {\n      // console.trace(\"get mash\")\n      this._mash = MovieMasher.mash.instance(this.mashOptions())\n    }\n    return this._mash\n  }\n\n  set mash(object : Mash) {\n    if (this._mash === object) return\n\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    // console.log(\"set mash getting visibleContext...\")\n    this._mash.visibleContext = this.visibleContext\n    // console.log(\"creating composition\", this._mash.composition)\n    // console.log(\"set mash got visibleContext!\", this._visibleContext)\n\n    this._mash.audibleContext = this.audibleContext\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    this.goToTime(Time.fromArgs(0, this.fps))\n    if (this.autoplay) this.paused = false\n  }\n\n  private mashOptions(mashObject : MashObject = {}) : MashOptions {\n    // console.log(\"mashOptions\")\n    return {\n      ...mashObject,\n      audibleContext: this.audibleContext,\n      buffer: this.buffer,\n      gain: this.gain,\n      loop: this.loop,\n      visibleContext: this.visibleContext,\n    }\n  }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moviClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value : boolean) {\n    if (this._muted !== value) {\n      this._muted = value\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * value, this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  private _pristine? : SelectionObject\n\n  private get pristineOrThrow() {\n    if (!this._pristine) throw Errors.internal\n    return this._pristine\n  }\n\n  private _pristineEffect? : SelectionObject\n\n  private get pristineEffectOrThrow() {\n    if (!this._pristineEffect) throw Errors.internal\n    return this._pristineEffect\n  }\n\n  redo() : void { if (this.actions.canRedo) this.handleAction(this.actions.redo()) }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) {\n      this.removeEffects(<Effect[]> objectOrArray)\n      return\n    }\n\n    this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected = false) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  get selectedClipsOrEffects() : Clip[] | Effect[] {\n    return this.selectedEffects.length ? this.selectedEffects : this.selectedClips\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        // console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  private selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  private get selectedClipOrThrow() : Clip {\n    const clip = this._selectedClips[0]\n    if (!clip) throw Errors.selection\n\n    return clip\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value : Clip[]) {\n    this._selectedClips = this.filterClipSelection(value)\n    this._pristine = this.selectedClipOrMash.propertyValues\n    this.selectedEffects = []\n  }\n\n  get selectedEffect() : Effect | undefined {\n    if (this._selectedEffects.length !== 1) return\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value : Effect | undefined) {\n    if (value) this.selectedEffects = [value]\n    else this.selectedEffects = []\n  }\n\n  get selectedEffectOrThrow() : Effect {\n    const effect = this.selectedEffect\n    if (!effect) throw Errors.selection\n    return effect\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const { effects } = this.selectedClipOrMash\n    if (!effects) { // mash or multiple clips, or no effects\n      this._selectedEffects = []\n      this._pristineEffect = {}\n      return\n    }\n    const array = <Effect[]> effects\n    this._selectedEffects = value.filter(effect => array.includes(effect))\n    this._pristineEffect = (this.selectedEffect && this.selectedEffect.propertyValues) || {}\n  }\n\n  get selectionObjects() : SelectionObject[] {\n    const selectedObjects = this.selectedClipsOrEffects\n    const object = selectedObjects.map((object : ClipOrEffect) => object.propertyValues)\n    return object\n  }\n\n  private get silenced() : boolean { return this._paused || this.muted || !this.gain }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<Audible> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) {\n    if (value.equalsTime(this.time)) return\n\n    this.goToTime(value)\n  }\n\n  get timeRange() : TimeRange { return this.mash.timeRange }\n\n  undo() : void { if (this.actions.canUndo) this.handleAction(this.actions.undo()) }\n\n  visibleContext : VisibleContext\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value : number) {\n    if (this._volume !== value) {\n      if (!Is.positive(value)) throw Errors.invalid.volume\n      this._volume = value\n      if (Is.aboveZero(value)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\nexport { MasherClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Default } from \"../../Setup/Default\"\n\nclass MasherDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"autoplay\", type: DataType.Boolean, value: Default.masher.autoplay }))\n    this.properties.push(new Property({ name: \"precision\", type: DataType.Number, value: Default.masher.precision }))\n    this.properties.push(new Property({ name: \"loop\", type: DataType.Boolean, value: Default.masher.loop }))\n    this.properties.push(new Property({ name: \"fps\", type: DataType.Number, value: Default.masher.fps }))\n    this.properties.push(new Property({ name: \"volume\", type: DataType.Number, value: Default.masher.volume }))\n    this.properties.push(new Property({ name: \"buffer\", type: DataType.Number, value: Default.masher.buffer}))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.masher.default\"\n\n  get instance() : Masher {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MasherObject) : Masher {\n    const instance = new MasherClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Masher\n}\n\nexport { MasherDefinitionClass }\n","import { Masher, MasherDefinition, MasherDefinitionObject, MasherObject } from \"./Masher\"\nimport { Interval } from \"../../declarations\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { MasherDefinitionClass } from \"./MasherDefinition\"\n\nconst MasherIntervalTics = 10 * 1000\nconst MasherDefaultId = \"com.moviemasher.masher.default\"\n\nlet MasherInterval : Interval | undefined\n\nconst mashers : Masher[] = []\n\nconst addMasher = (masher : Masher) => {\n  if (!mashers.length) masherStart()\n  mashers.push(masher)\n}\n\nconst masherDestroy = (masher : Masher) : void => {\n  const index = mashers.indexOf(masher)\n  if (index < 0) return\n\n  mashers.splice(index, 1)\n  if (!mashers.length) masherStop()\n}\n\nconst handleInterval = () => {\n  // console.log(constructor.name, \"handleInterval\")\n  const map = <DefinitionTimes> new Map()\n  const definitions = new Set<Definition>()\n\n  mashers.forEach(masher => {\n    masher.definitions.forEach(definition => { definitions.add(definition) })\n\n    const masherMap = masher.loadedDefinitions\n    masherMap.forEach((times, definition) => {\n      if (!map.has(definition)) map.set(definition, [])\n      const definitionTimes = map.get(definition)\n      if (!definitionTimes) throw Errors.internal\n\n      definitionTimes.push(...times)\n    })\n  })\n  map.forEach((times, definition) => {\n    definition.unload(times)\n  })\n\n  Definitions.map.forEach(definition => {\n    if (definitions.has(definition)) {\n      // definition used in a masher (masher.mash.media)\n      if (map.has(definition)) {\n        // definition needs to be at least partially loaded\n        definition.unload(map.get(definition))\n      } else {\n        // definition can be completely unloaded, but not uninstalled\n        definition.unload()\n      }\n    } else {\n      // definition is not used anywhere - unload, and uninstall if not retained\n      definition.unload()\n      if (!definition.retain) Definitions.uninstall(definition.id)\n    }\n  })\n}\n\nconst masherStart = () => {\n  // console.log(constructor.name, \"masherStart\")\n  if (MasherInterval) return\n\n  MasherInterval = setInterval(handleInterval, MasherIntervalTics)\n}\n\nconst masherStop = () => {\n  // console.log(constructor.name, \"masherStop\")\n  if (!MasherInterval) return\n\n  clearInterval(MasherInterval)\n  MasherInterval = undefined\n}\n\nconst masherDefinition = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MasherDefaultId\n\n  return <MasherDefinition> Definitions.fromId(idString)\n}\n\nconst masherDefinitionFromId = (id : string) : MasherDefinition => {\n  return masherDefinition({ id })\n}\n\nconst masherInstance = (object : MasherObject = {}) : Masher => {\n  const definition = masherDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  addMasher(instance)\n  return instance\n}\n\nconst masherFromId = (id : string) : Masher => {\n  return masherInstance({ id })\n}\n\nconst masherInitialize = () : void => {\n  new MasherDefinitionClass({ id: MasherDefaultId })\n}\n\nconst masherDefine = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'masherDefine'\n\n  Definitions.uninstall(id)\n  return masherDefinition(object)\n}\n\nconst MasherFactoryImplementation = {\n  define: masherDefine,\n  definition: masherDefinition,\n  definitionFromId: masherDefinitionFromId,\n  destroy: masherDestroy,\n  fromId: masherFromId,\n  initialize: masherInitialize,\n  instance: masherInstance,\n}\n\nFactories.masher = MasherFactoryImplementation\n\nexport {\n  masherDefine,\n  masherDefinition,\n  masherDefinitionFromId,\n  masherDestroy,\n  MasherFactoryImplementation,\n  masherFromId,\n  masherInitialize,\n  masherInstance,\n}\n","import { Size } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceClass)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n  declare definition : ThemeDefinition\n}\n\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport themeColorJson from \"./DefinitionObjects/color.json\"\nimport themeTextJson from \"./DefinitionObjects/text.json\"\nimport themeTitleJson from \"./DefinitionObjects/title.json\"\nimport { Factories } from \"../Factories\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n  new ThemeDefinitionClass(themeTitleJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories.theme = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceClass)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport transitionCrossfadeJson from \"./DefinitionObjects/crossfade.json\"\nimport { Factories } from \"../Factories/Factories\"\nimport {\n  Transition,\n  TransitionDefinition,\n  TransitionDefinitionObject,\n  TransitionObject,\n} from \"./Transition\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories.transition = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\n\nconst VideoWithClip = ClipMixin(InstanceClass)\nconst VideoWithAudible = AudibleMixin(VideoWithClip)\nconst VideoWithVisible = VisibleMixin(VideoWithAudible)\nconst VideoWithTransformable = TransformableMixin(VideoWithVisible)\n\nclass VideoClass extends VideoWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n\n}\n\nexport { VideoClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities\"\nimport { Cache } from \"../../Loading\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VideoClass } from \"./VideoInstance\"\nimport { Video, VideoDefinitionObject, VideoObject } from \"./Video\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\nconst VideoDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst VideoDefinitionWithAudible = AudibleDefinitionMixin(VideoDefinitionWithClip)\nconst VideoDefinitionWithVisible = VisibleDefinitionMixin(VideoDefinitionWithAudible)\nclass VideoDefinitionClass extends VideoDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, begin, fps, increment, pattern, video_rate, source } = <VideoDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n\n    if (typeof begin !== \"undefined\") this.begin = begin\n\n    if (fps || video_rate) this.fps = Number(fps || video_rate) // deprecated string\n\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.video.begin\n\n  fps = Default.definition.video.fps\n\n  private frames(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.video.increment\n\n  get instance() : Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoObject) : Video {\n    return new VideoClass({ ...this.instanceObject, ...object })\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    const frames = this.frames(start, end)\n    frames.forEach(frame => {\n      const url = this.urlForFrame(frame)\n      if (Cache.cached(url)) {\n        const cached = Cache.get(url)\n        if (cached instanceof Promise) promises.push(cached)\n      } else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    if (!super.loaded(start, end)) return false\n\n    return this.frames(start, end).every(frame => Cache.cached(this.urlForFrame(frame)))\n  }\n\n  loadedVisible(time? : Time) : DrawingSource | undefined {\n    if (!time) throw Errors.internal\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.video.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.video.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.video.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  unload(times? : Times[]) : void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.frames(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.zeropadding) s = s.padStart(this.zeropadding, '0')\n    return (this.url + this.pattern).replaceAll('%', s)\n  }\n\n  urls(start : Time, end? : Time) : string[] {\n    return this.frames(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  get zeropadding() : number {\n    if (!this.__zeropadding) {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.__zeropadding = String(lastFrame).length\n\n    }\n    return this.__zeropadding\n  }\n\n  private __zeropadding? : number\n}\n\nexport { VideoDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClass } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClass(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories.video = VideoFactoryImplementation\n\nexport {\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { MovieMasher } from \"../MovieMasher\"\nimport { DefinitionTypes } from \"../Setup/Enums\"\n\nDefinitionTypes.forEach(type => { MovieMasher[type].initialize() })\n","\nconst Seconds = (seconds : number, fps : number, duration : number) : string => {\n  let time, pad, do_rest, s = ''\n  if (! duration) duration = seconds\n  time = 60 * 60 // an hour\n  pad = 2\n  if (duration >= time) {\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 60 // a minute\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 1 // a second\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00'\n  } else s += '00'\n  if (fps > 1) {\n    if (fps === 10) pad = 1\n    s += '.'\n    if (seconds) {\n      if (pad === 1) seconds = Math.floor(seconds * 10) / 10\n      else seconds = Math.floor(100 * seconds) / 100\n      seconds = Number(String(seconds).substr(2, 2))\n      s += String(seconds).padStart(pad, '0')\n    } else s += '0'.padStart(pad, '0')\n  }\n  return s\n}\n\nexport { Seconds }\n"],"names":["Default","label","masher","buffer","fps","loop","volume","precision","autoplay","mash","quantize","backcolor","gain","instance","audio","trim","video","speed","definition","frame","duration","image","theme","transition","pattern","increment","begin","$invalidArgument","$invalidProperty","$deprecated","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","action","actions","internal","argument","invalid","canvas","url","source","id","object","track","trackType","name","value","type","property","factory","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frames","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","deprecation","property_types","addModulesOfType","configure","set","canvas_context","wrongClass","Parameter","[object Object]","this","String","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","Number","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","length","isPopulatedString","isPopulatedObject","Object","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","method","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","ActionType","TrackType","ClipType","ClipTypes","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","TypeValue","identifier","Type","modular","JSON","stringify","push","map","TypesInstance","Map","entries","forEach","entry","key","dataType","includes","propertyTypes","propertyType","dataTypesJson","Property","custom","Types","Capitalize","toUpperCase","substr","rgbValue","Math","min","max","floor","rgbNumeric","rgb","r","g","b","yuvNumeric","y","u","v","Color","yuvBlend","yuvs","yuv","match","blend","diff","blendYuv","yuvObject","numericYuv","du","dv","sqrt","rgb2yuv","ints","yuv2rgb","floats","rgb2hex","toString","ElementScrollProps","elementScrollMetrics","element","style","getComputedStyle","getPropertyValue","slice","scrollLeft","scrollTop","fromEntries","Element","scrollMetrics","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","join","Evaluator","context","size","mergeContext","ceil","setInputSize","conditionals","trueConditional","find","expression","replaceAll","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","has","bind","inputSize","width","height","Set","a","x","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","scale","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","t","Id","Date","now","random","roundMethod","rounding","round","roundWithMethod","func","Round","withMethod","pixelRgbaAtIndex","index","pixels","pixelSafe","pixel","offsetPoint","pt","pixelToPoint","pixelFromPoint","pixelNeighboringRgbas","data","halfSize","depth","pixelNeighboringPixels","p","pixelToIndex","pixelRgba","pixelColor","pixelPerFrame","zoom","pixelFromFrame","perFrame","pixelToFrame","Pixel","color","fromFrame","neighboringRgbas","rgbaAtIndex","toFrame","byFrame","byTrack","byLabel","Sort","timeEqualizeRates","time1","time2","gcf","fps1","fps2","greatestCommonDenominator","Time","copy","description","scaleToTime","subtracted","rounded","fromArgs","TimeRange","super","end","endTime","range1","range2","startTime","scaledTime","scaledRange","range","start","TrackRange","first","last","count","relative","trackRange","tracks","fill","_","idx","withEnd","Action","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","selectedClips","done","selectedEffects","redoAction","undoAction","AddTrackAction","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","undoValueNumeric","redo","FreezeAction","freezeClip","frozenClip","insertClip","trackClips","splice","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","i","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","setFrames","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","undo","Cache","cachedByKey","urlsByKey","delete","AudibleContext","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","createBufferSource","createGain","Promise","resolve","reject","decodeAudioData","audioData","error","destination","fromSeconds","currentTime","Point0","VisibleContext","context2d","_context2d","alpha","globalAlpha","getContext","emit","Canvas","clearSize","clearRect","rect","composite","globalCompositeOperation","globalThis","document","createElement","dataUrl","toDataURL","drawAtPoint","point","drawImage","drawFillToSize","fillOriginal","fillRect","drawFillInRect","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","drawInRectFromRect","inSize","fromSize","text","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","detail","event","dispatchEvent","CustomEvent","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactoryInstance","visible","types","Processor","_url","_buffer","AudioProcessor","_audibleContext","ContextFactory","audible","decode","FontProcessor","face","FontFace","load","then","fonts","add","ModuleProcessor","Loader","cached","promiseOrCached","promise","requestUrl","processed","classes","Audio","Font","Module","ProcessorFactory","loader","AudioLoader","fetch","response","arrayBuffer","loaded","options","process","FontLoader","ImageLoader","Image","crossOrigin","src","ModuleLoader","import","InstanceClass","args","_id","_label","instanceFromObject","toJSON","definitions","scaleToFps","_identifier","definitionTime","propertyNames","properties","propertyValues","DefinitionClass","icon","instanceObject","_start","_end","_time","propertiesModular","_times","AudibleMixin","Base","z","gainPairs","trimTime","withFrame","muted","space","ClipMixin","Video","endFrame","_quantize","_trim","AudioWithAudible","AudioClass","ClipPropertyObjects","Integer","ClipDefinitionMixin","_duration","LoaderFactory","AudibleDefinitionMixin","loops","waveform","urlAudible","promises","loadUrl","all","times","unload","some","maybePair","definitionsMap","DefinitionsByType","definitionsByType","list","definitionsList","definitionsClear","clear","definitionsFont","definitionsFromId","definitionsInstalled","console","trace","definitionsInstall","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","log","indexOf","Definitions","byType","fromId","install","installed","uninstall","AudioDefinitionWithAudible","AudioDefinitionClass","audioObject","Factories","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","FilterDefinitionClass","Filter","_evaluator","_evaluated","BlendFilter","modes","Mode","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","offset","reverse","matrix","drawImageData","ColorFilter","drawFill","ColorChannelMixerFilter","rgbas","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","bias","rdiv","channel","parseInt","parse","input","output","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","outWidth","outHeight","drawInSizeFromSize","SetSarFilter","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","ModularMixin","constructProperties","modularDefinitions","every","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","Effect","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","MovieMasher","static","Mash","Masher","Theme","Transition","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","flatMap","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","drawFilters","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionClass","urlVisible","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","ImageFactoryImplementation","TrackClass","isMainVideo","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","sort","Composition","visibleContext","_visibleContext","_gain","sourcesByClip","gainNode","timing","clipTiming","cancelScheduledValues","pair","linearRampToValueAtTime","contextSeconds","mashSeconds","dif","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","mainClip","mergeContextAtTime","requestAnimationFrame","compositeVisible","loadedAudible","gainSource","connect","adjustSourceGain","clipsToKeep","disconnect","playing","Volume","bufferSource","stopPlaying","stop","MashClass","_backcolor","definitionId","definitionType","trackOptions","assureClipsHaveFrames","newTrack","clipTrackAtIndex","oldTrack","clipTrack","emitIfFramesChange","removeClips","Track","_composition","bufferFrames","bufferTime","limitedValue","maxFrames","newFrames","intersects","trackOfTypeAtIndex","rangeTracks","tracksInRange","inTracks","clipsInTracks","filterIntersecting","objects","clipsVisible","clipsAudible","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","flat","clipIntersects","clipsVideo","clipsVisibleInTimeRange","fromTime","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","_playing","drawTime","seekToTime","paused","Ended","timeChange","drawnTime","Loaded","origFrames","Duration","changeAction","stopLoadAndDraw","startAndEnd","clipsAtTimes","loadedDefinitions","definitionTimes","_paused","forcedValue","_bufferTimer","clearInterval","Pause","startContext","setInterval","Play","startPlaying","_drawAtInterval","drawAtInterval","Playing","pop","seekTime","Seeking","stalled","seeking","Seeked","constructor","clipWithTrack","av","tracksMax","maxTracks","withMax","inRange","MashDefinitionClass","Rgba","MashDefaultId","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","MashFactoryImplementation","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","MasherClass","_loop","fromCanvas","_fps","_volume","clone","createFromObject","handleAction","_actions","frameOrIndex","addEffect","clipType","addClip","trackCount","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","_mash","_selectedClips","clipCanBeSplit","widthTrimmed","heightTrimmed","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","pristineOrThrow","selectedEffectOrThrow","pristineEffectOrThrow","_pristine","transformType","transformable","transformTarget","pristineTarget","destroy","firstClip","abutting","Fps","goToTime","loadMash","mashOptions","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","effectOrArray","_muted","per","toFixed","positionStep","repeat","_pristineEffect","removeEffects","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipsOrEffects","selectedClipObject","selectedClipOrMash","selectionObjects","silenced","equalsTime","MasherDefinitionClass","Boolean","MasherDefaultId","MasherInterval","mashers","masherDestroy","masherStop","handleInterval","retain","masherStart","masherDefinition","masherDefinitionFromId","masherInstance","masherFromId","masherInitialize","masherDefine","MasherFactoryImplementation","ThemeWithTransformable","ThemeClass","ThemeDefinitionWithVisible","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeTitleJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","from","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromClip","toClip","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","VideoWithTransformable","VideoClass","divide","VideoDefinitionWithVisible","VideoDefinitionClass","video_rate","framesMax","urlForFrame","urls","zeroTime","allUrls","deleting","s","zeropadding","padStart","__zeropadding","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","VideoFactoryImplementation","pad","do_rest"],"mappings":"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"}