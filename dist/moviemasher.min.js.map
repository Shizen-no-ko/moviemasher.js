{"version":3,"file":"moviemasher.min.js","sources":["../src/Setup/Enums.ts","../src/Setup/Errors.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Editing/Events/Events.ts","../src/Setup/Default.ts","../src/Utilities/Is.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/Color.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Capitalize.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Instance/Instance.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Factory/Factory.ts","../src/Editing/Masher/Masher.ts","../src/Setup/Parameter.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Mash/Definition/Definition.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Loading/Cache.ts","../src/Loading/Processor.ts","../src/Loading/AudioProcessor.ts","../src/Loading/FontProcessor.ts","../src/Loading/ModuleProcessor.ts","../src/Loading/Loader.ts","../src/Loading/ProcessorFactory.ts","../src/Loading/AudioLoader.ts","../src/Loading/FontLoader.ts","../src/Loading/ImageLoader.ts","../src/Loading/ModuleLoader.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Editing/Masher/MasherFactory.ts","../src/Factories/index.ts"],"sourcesContent":["\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\nenum DefinitionType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Filter = 'filter',\n  Font = 'font',\n  Image = 'image',\n  Mash = 'mash',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Add = 'add',\n  Duration = 'duration',\n  Redo = 'redo',\n  Truncate = 'truncate',\n  Undo = 'undo',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Hex = 'hex',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  Scalar = 'scalar',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n    },\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  deprecation: {\n    property_types: `property_types ${$deprecated} - please get MovieMasher.Property.types instead`,\n    addModulesOfType: `addModulesOfType ${$deprecated} for unsupported type `,\n    configure: {\n      get: `configure ${$deprecated} - please get MovieMasher.defaults instead`,\n      set: `configure ${$deprecated} - please supply mash.quantize and media.duration instead`,\n    },\n    canvas_context: {\n      get: `canvas_context ${$deprecated} - please get visibleContext instead`,\n      set: `canvas_context ${$deprecated} - please set visibleContext instead`,\n    }\n  },\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Events } from \"../Events\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { EventType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get events() : Events | undefined { return this.mash.events }\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n    if (!this.events) return\n\n    this.events.emit(EventType.Action, { action: this })\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n    if (!this.events) return\n\n    this.events.emit(EventType.Action, { action: this })\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","\nimport { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : string | number\n  target : Mash | Clip | Effect\n  undoValue : string | number\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : string | number\n\n  target : Mash | Clip | Effect\n\n  undoValue : string | number\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target[this.property] = this.redoValue\n  }\n\n  undoAction() : void {\n    this.target[this.property] = this.undoValue\n  }\n\n  updateAction(value : string | number) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.redoValue)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.undoValue)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.redoValue, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.undoValue, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex)\n  }\n\n  setFrames(frames : number[]) : void {\n    this.clips.forEach((clip, index) => { clip.frame = frames[index] })\n  }\n\n  redoAction() : void {\n    if (this.redoFrames) this.setFrames(this.redoFrames)\n    this.addClips(this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    if (this.undoFrames) this.setFrames(this.undoFrames)\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  do(action : Action) : Action[] {\n    const remove = this.instances.length - (this.index + 1)\n    const removed = remove ? this.instances.splice(this.index + 1, remove) : []\n\n    this.instances.push(action)\n    this.redo()\n    return removed\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { EventsTarget, EventsCallback } from \"../../Setup/declarations\"\nimport { Action } from \"../Action\"\n\n\nclass Events {\n  constructor(object : { target? : EventsTarget } = {}) {\n    // console.log(\"Events constructor\")\n    const { target } = object\n    if (target) this.target = target\n  }\n\n  methods : Set<EventsCallback> = new Set()\n\n  get target() : EventsTarget | undefined { return this.__target }\n\n  set target(value : EventsTarget | undefined) {\n    if (this.__target !== value) {\n      const methods = new Set(this.methods)\n      methods.forEach(this.removeListener, this)\n      this.__target = value\n      methods.forEach(this.addListener, this)\n    }\n  }\n\n  addListener(method : EventsCallback) : void {\n    if (this.methods.add(method)) {\n      if (!this.target) return\n\n      this.target.addEventListener(Events.type, method)\n    }\n  }\n\n  emit(type : string, info = {}) : void {\n    const detail = { type, ...info }\n    const event = { detail }\n    if (!this.target) return\n\n    this.target.dispatchEvent(new CustomEvent(Events.type, event))\n  }\n\n  removeListener(method : EventsCallback) : void {\n    if (this.methods.delete(method)) {\n      if (!this.target) return\n\n      this.target.removeEventListener(Events.type, method)\n    }\n  }\n\n  static get type() : string { return \"masher\" }\n\n  __target? : EventsTarget\n}\ninterface EventsDetail {\n  action? : Action\n  type : string\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { Events, EventsType, EventsDetail}\n","const Default = {\n  buffer: 10,\n  fps: 30,\n  loop: true,\n  volume: 0.75,\n  precision: 3,\n  autoplay: false,\n  mash: {\n    label: \"Untitled Mash\",\n    quantize: 10,\n    backcolor: \"#00000000\",\n  },\n  clip: {\n    audio: { gain: 1.0, trim: 0 },\n    video: { speed: 1.0 }\n  },\n  media: {\n\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { pattern: '%.jpg', fps: 30, increment: 1, begin: 1  },\n  },\n}\n\nexport { Default }\n","import { ScalarArray, UnknownObject } from \"../Setup/declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst scaleTimes = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nconst roundingMethod = (rounding = '') => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number : number, method = '') : number => (\n  roundingMethod(method)(number)\n)\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = scaleTimes(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = Number(this.frame / this.fps) * Number(fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return scaleTimes(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, scaleTimes, roundWithMethod }\n","import { Is } from \"./Is\"\nimport { Time, scaleTimes, roundWithMethod } from \"./Time\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> scaleTimes(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = scaleTimes(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> scaleTimes(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> scaleTimes(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { Rgb, RgbObject, Yuv, YuvObject } from \"../Setup/declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst yuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst rgb2hex = (rgb : RgbObject) : string => {\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst yuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst rgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst Color = {\n  yuvBlend,\n  rgb2yuv,\n  yuv2rgb,\n  rgb2hex, // unused after 4.1 refactor, but perhaps needed?\n}\n\nexport { Color }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../Setup/declarations\"\n\nconst fromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst toPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst toIndex = (pixel : number) => pixel * 4\n\nconst rgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst rgba = (pixel : number, data : Pixels) => rgbaAtIndex(toIndex(pixel), data)\n\nconst safePixel = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = toPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return fromPoint(pt, width)\n}\n\nconst safePixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(safePixel(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\n// TODO: this is not correctly converting from rgba to rgb!! (size??)\nconst rgbs = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  safePixels(pixel, size).map(p => rgba(p, data))\n)\n\nconst color = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nexport const Pixel = {\n  color,\n  rgbaAtIndex,\n  rgbs,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../Setup/declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../Setup/declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst definitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = () : void => { definitionsMap.clear() }\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) throw Errors.unknown.definition\n\n  const definition = definitionsMap.get(id)\n  if (!definition) throw Errors.internal\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  // console.log(\"definitionsInstall\", type, id)\n  definitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => definitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) {\n\n    return\n  }\n  const definition = definitionsFromId(id)\n\n  definitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal + type + ' ' + id\n  definitions.splice(index, 1)\n  // console.log(\"uninstalled\", id)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: definitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  definitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { Any, JsonObject, LoadPromise, SelectionObject, SelectionValue } from \"../../Setup/declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Time } from \"../../Utilities/Time\"\n\ninterface InstanceObject {\n  [index: string]: unknown\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceClass {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'instance'\n\n    const { id, definition, label } = <InstanceObject> object\n\n    if (definition) this.definition = definition\n    else {\n      if (id && Definitions.installed(id)) {\n        this.definition = Definitions.fromId(id)\n      } else throw Errors.invalid.argument\n    }\n    if (label) this._label = label\n    // console.log(\"InstanceClass\", this.definition.id)\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  get id() : string { return this.definition.id }\n\n  private _label? : string\n\n  get label() : string { return this._label || this.definition.label }\n\n  set label(value : string) { this._label = value }\n\n  load(quantize : number, start : Time, end? : Time) : LoadPromise {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.load(startTime, endTime)\n  }\n\n  loaded(quantize : number, start : Time, end? : Time) : boolean {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.loaded(startTime, endTime)\n  }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + \"value \" + this.propertyNames.includes(key) + \" \" + this[key]\n\n    return <SelectionValue> value\n  }\n\n}\n\ninterface Instance extends InstanceClass {\n\n}\n\nexport { Instance, InstanceClass, InstanceObject }\n","import { Any, Constrained, LoadPromise } from \"../../../Setup/declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { Instance } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    definition! : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        promises.push(definition.load(startTime, endTime))\n      })\n      return Promise.all(promises).then()\n    }\n\n    loaded(quantize : number, start : Time, end? : Time) : boolean {\n      if (!super.load(quantize, start, end)) return false\n\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.every(definition =>\n        definition.loaded(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../Setup/declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceClass)\nclass EffectClass extends EffectWithModular {\n  definition! : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { Any } from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      // console.log(\"AudibleContext context\", Klass.name)\n      this.__context = new Klass()\n    }\n    return this.__context\n  }\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    // console.log(this.constructor.name, \"createBuffer\", length)\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource() : AudioBufferSourceNode { return this.context.createBufferSource() }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n\n  get currentTime() : number { return this.context.currentTime }\n}\n","import {\n  Context2D,\n  ContextData,\n  ContextElement,\n  DrawingSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle\n} from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nexport class VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    // console.trace(\"VisibleContext\", \"constructor\")\n    if (object.context2d) this.__context2d = object.context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : ContextElement { return this.context2d.canvas }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  get context2d() : Context2D {\n    if (!this.__context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this.__context2d = context\n    }\n    return this.__context2d\n  }\n\n  set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this.__context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : DrawingSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : DrawingSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : DrawingSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : DrawingSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : DrawingSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : DrawingSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : DrawingSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : DrawingSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : DrawingSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  // TODO: rename method to match return type\n  get imageSource() : DrawingSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private __context2d? : Context2D\n}\n","import { Size, Context2D } from \"../Setup/declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\n\ntype FactoryObject = {\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Factories, FactoryObject } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MashFactory } from \"../Mash/Mash\"\n\n\nclass FactoryClass implements Readonly <Required <FactoryObject>> {\n  get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n}\n\nconst Factory = new FactoryClass()\n\nexport { Factory }\n","import {\n  Any,\n  Context2D,\n  ContextElement,\n  Timeout,\n  UnknownObject,\n  ScalarValue,\n  SelectionObject,\n  LoadPromise,\n} from \"../../Setup/declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n} from \"../../Setup/Enums\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { ChangeAction } from \"../Action\"\nimport { Actions } from \"../Actions\"\nimport { Mash, MashObject, MashOptions } from \"../../Mash/Mash/Mash\"\nimport { Events, EventsType } from \"../../Editing/Events\"\nimport { ActionFactory } from \"../../Editing/Action/ActionFactory\"\nimport { EffectClass } from \"../../Mash/Effect/EffectInstance\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AudibleContext, VisibleContext, ContextFactory } from \"../../Playing\"\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../../Mash/Definition/Definition\"\nimport { Factory } from \"../../Mash/Factory/Factory\"\nimport { Transformable } from \"../../Mash/Mixin/Transformable/Transformable\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Video } from \"../../Mash/Video/Video\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\nimport { byFrame } from \"../../Utilities/Sort\"\n\nconst MasherProperty = {\n  autoplay: \"autoplay\",\n  precision: \"precision\",\n  loop: \"loop\",\n  fps: \"fps\",\n  volume: \"volume\",\n  buffer: \"buffer\",\n}\n\ntype ClipOrEffect = Clip | Effect\n\ninterface MasherObject {\n  autoplay?: boolean,\n  precision?: number,\n  loop?: boolean,\n  fps?: number,\n  volume?: number,\n  buffer?: number,\n  visibleContext? : VisibleContext\n  audibleContext? : AudibleContext\n  mash? : Mash\n}\n\ntype AddPromise = Promise<ClipOrEffect>\n\nclass MasherClass {\n  [index : string] : unknown\n\n  constructor(object : MasherObject = {}) {\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      audibleContext,\n      visibleContext,\n      mash,\n    } = object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n\n    if (typeof audibleContext !== \"undefined\") this._audibleContext = audibleContext\n    if (typeof visibleContext !== \"undefined\") this._visibleContext = visibleContext\n\n\n    this.events.addListener(this.handleMasher.bind(this))\n\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n\n    this._time = Time.fromArgs(0, this.fps)\n\n    if (mash) this.mash = mash\n  }\n\n  actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n\n    const action = ActionFactory.createFromObject(clone)\n    // console.log(this.constructor.name, \"actionCreate\", action)\n    action.actions = this.actions\n    // const removedActions =\n    this.actions.do(action)\n\n    // const type = removedActions.length ? EventType.Truncate : EventType.Add\n    // const { currentAction } = this.actions\n\n    // this.events.emit(type, { action: currentAction })\n  }\n\n  private _actions? : Actions\n\n  get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : AddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n\n    const { type } = object\n    if (!type) throw Errors.type + 'Masher.add'\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = Factory.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = Factory[definitionType].definition(object)\n\n    const clip = <Clip> definition.instance\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  private _audibleContext? : AudibleContext\n\n  get audibleContext() : AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._mash) this.mash.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value : AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._mash) this.mash.audibleContext = value\n    }\n  }\n\n  autoplay = Default.autoplay\n\n  private _buffer = Default.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (this._buffer !== value) {\n      this._buffer = value\n      this.mash.buffer = value\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  get canvas() : ContextElement { return this.visibleContext.canvas }\n\n  set canvas(value : ContextElement) {\n    // console.log(this.constructor.name, \"set canvas\")\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.internal + 'context2d'\n\n    this.events.target = value\n    this.context2d = context2d\n  }\n\n  change(property : string) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) this.changeEffect(property)\n      else this.changeClip(property)\n    } else this.changeMash(property)\n  }\n\n  changeClip(property : string) : void {\n    console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n    if (!this._pristine) throw Errors.internal + \"changeClip _pristine\"\n\n    const target = this.selectedClipOrThrow\n    const options : UnknownObject = { property, target }\n    const [transform, transformProperty] = property.split(\".\")\n\n    if (transformProperty) {\n      const transformType = <TransformType> transform\n      // make sure first component is merger or scaler\n      if (!TransformTypes.includes(transformType)) throw Errors.property + \"transform \" + transform\n\n      const transformable = <Transformable> target\n      // we'll call merger/scaler set property, even if it's 'id'\n      options.target = transformable[transformType]\n      options.property = transformProperty\n      options.redoValue = transformable[transformType].value(transformProperty)\n\n      const pristineTarget = this._pristine[transformType]\n      if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n      const value = pristineTarget[transformProperty]\n      if (typeof value === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n      options.undoValue = value\n    } else {\n      options.undoValue = this._pristine[property]\n      options.redoValue = target.value(property)\n    }\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> options.redoValue)\n      return\n    }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string) : void {\n    console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = this.selectedEffect\n    if (!target) throw Errors.selection\n    if (!this._pristineEffect) throw Errors.selection\n\n    const redoValue = <ScalarValue> target[property]\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      return\n    }\n\n    const undoValue = this._pristineEffect[property]\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.selection\n\n    const target = this.mash\n    const redoValue = <ScalarValue> this.mash[property]\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      return changeAction.updateAction(redoValue)\n    }\n\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue: this._pristine[property],\n      type: ActionType.Change,\n    }\n    // console.log(\"changeMash\", options)\n\n    this.actionCreate(options)\n  }\n\n  clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  private _context2D? : Context2D\n\n  get context2d() : Context2D {\n    return this.visibleContext.context2d\n  }\n\n  set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\")\n    if (this._context2D !== value) {\n      this._context2D = value\n      if (this._visibleContext) {\n        this.visibleContext.context2d = value\n        this.mash.compositeVisible()\n      }\n    }\n  }\n\n  get configured() : boolean {\n    return true\n    // return !!(this._mash && this._context2D)\n  }\n\n  currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  // time, but in seconds\n  get currentTime() : number { return this.time.seconds }\n\n  set currentTime(seconds : number) { this.time = Time.fromSeconds(seconds, this.fps) }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  delayedDraw() : void {\n    // console.log(\"MasherClass.delayedDraw\")\n    // called when assets are cached\n    if (!this._delayedTimer) {\n      this._delayedTimer = setTimeout(() => {\n        // console.log(this.constructor.name, \"delayedDraw timeout\", )\n        delete this._delayedTimer\n        this.mash.compositeVisible()\n      }, 50)\n    }\n  }\n\n  private _delayedTimer? : Timeout\n\n  // call when player removed from DOM\n  destroy() : void {\n    //Mashers.delete(this)\n  }\n\n  draw() : void { this.mash.compositeVisible() }\n\n  get duration() : number { return this.mash.duration }\n\n  get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  __events? : Events\n\n  get events() : Events {\n    if (!this.__events) {\n      this.__events = new Events({ target: this.canvas })\n    }\n    return this.__events\n  }\n\n  filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    // selected clips must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // selected clips on main track must be abutting each other\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.fps\n\n  get fps() : number { return this._fps }\n\n  set fps(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.fps\n\n    if (this._fps !== value) {\n      this._fps = value\n      this._time = this._time.scale(value)\n    }\n  }\n\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) {\n    // called from ruler to change position\n    // console.log('frame=', value, this.fps)\n\n    this.time = Time.fromArgs(value, this.fps)\n    // console.log(\"time\", this.time)\n    // console.log(\"position\", this.position)\n  }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  handleGainChange() : void { this.mash.gain = this.gain }\n\n  handleMasher(event : Event) : Any {\n    // console.log(\"handleMasher\", event.type)\n    if (event.type !== Events.type) return\n\n    const { detail } = <EventsType> event\n    // console.log(\"handleMasher\", detail.type)\n\n    if (detail.type === EventType.Action) {\n      const { action } = detail\n      if (!action) throw Errors.internal + 'action'\n\n      this.selectedClips = action.selectedClips\n      this.selectedEffects = action.selectedEffects\n    }\n  }\n\n  loadMash() : LoadPromise { return this.mash.load() }\n\n  loadMashAndDraw() : LoadPromise { return this.loadMash().then(() => { this.draw() }) }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n\n  private _loop = Default.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value : boolean) {\n    this._loop = value\n    if (this._mash) this.mash.loop = value\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) this._mash = Factory.mash.instance(this.mashOptions({ id: 'mash-id' }))\n    return this._mash\n  }\n\n  set mash(object : Mash) {\n    if (this._mash === object) return\n\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    this._mash.events = this.events\n    this._mash.visibleContext = this.visibleContext\n    this._mash.audibleContext = this.audibleContext\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    this.time = Time.fromSeconds(0, this.fps)\n    if (this.autoplay) this.paused = false\n  }\n\n  mashOptions(mashObject : MashObject = {}) : MashOptions {\n    return {\n      ...mashObject,\n      audibleContext: this.audibleContext,\n      buffer: this.buffer,\n      events: this.events,\n      gain: this.gain,\n      loop: this.loop,\n      visibleContext: this.visibleContext,\n    }\n  }\n\n  media(clip : Clip) : Definition { return clip.definition }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moviClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value : boolean) {\n    if (this._muted !== value) {\n      this._muted = value\n      this.handleGainChange()\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { this.mash.paused = value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this._time.frame) {\n      per = this._time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.time = Time.fromSeconds(this.duration * value, this.fps)\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.precision\n\n  private _pristine? : SelectionObject\n\n  private _pristineEffect? : SelectionObject\n\n  get properties() : string[] { return Object.values(MasherProperty) }\n\n  redo() : void { if (this.actions.canRedo) this.actions.redo() }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) return this.removeEffects(<Effect[]> objectOrArray)\n\n    return this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected = false) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n  selected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  get selectedClipOrThrow() : Clip {\n    if (this._selectedClips.length !== 1) throw Errors.selection\n\n    return this._selectedClips[0]\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value : Clip[]) {\n    this._selectedClips = this.filterClipSelection(value)\n    this._pristine = this.selectedClipOrMash.propertyValues\n    this.selectedEffects = []\n  }\n\n  get selectedEffect() : Effect | undefined {\n    if (this._selectedEffects.length !== 1) return\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value : Effect | undefined) {\n    if (value) this.selectedEffects = [value]\n    else this.selectedEffects = []\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const { effects } = this.selectedClipOrMash\n    if (!effects) { // mash or multiple clips selected, or no effects\n      this._selectedEffects = []\n      this._pristineEffect = {}\n      return\n    }\n    const array = <Effect[]> effects\n    this._selectedEffects = value.filter(effect => array.includes(effect))\n    this._pristineEffect = (this.selectedEffect && this.selectedEffect.propertyValues) || {}\n  }\n\n  get silenced() : boolean { return this._paused || this.muted || !this.gain }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<Audible> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get stalling() : boolean { return !this.__moving && !this.paused }\n\n  private _time : Time\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) { this.mash.seekToTime(value) }\n\n  type = \"masher\"\n\n  undo() : void { if (this.actions.canUndo) this.actions.undo() }\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      if (typeof this._context2D === \"undefined\") {\n        this._visibleContext = ContextFactory.visible()\n      } else this._visibleContext = ContextFactory.fromContext2D(this._context2D)\n\n      if (this._mash) this.mash.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._mash) this.mash.visibleContext = value\n    }\n  }\n\n  private _volume = Default.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value : number) {\n    if (this._volume !== value) {\n      if (!Is.positive(value)) throw Errors.invalid.volume\n      this._volume = value\n      if (Is.aboveZero(value)) this.muted = false\n\n      this.handleGainChange()\n    }\n  }\n}\n\ninterface Masher extends MasherClass {}\n\nexport { Masher, MasherClass }\n","import { JsonObject, ScalarValue, ValueObject } from \"./declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { ScalarValue } from \"../../Setup/declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","\nimport { ScalarValue } from \"../../Setup/declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarValue\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarValue\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarValue } from \"../../Setup/declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) {\n      console.trace('propertyType ' + type)\n      throw Errors.type + 'propertyType ' + type\n    }\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarValue {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarValue } from \"./declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarValue\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarValue\n}\n\nexport { Property, PropertyObject }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, JsonObject, LoadPromise, ScalarValue, UnknownObject } from \"../../Setup/declarations\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Instance, InstanceClass, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionClass {\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.unknown.definition\n\n    const { id, label, icon } = <DefinitionObject> object\n    if (!id) throw Errors.id\n\n\n    this.id = id\n    this.label = label || id\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label : string\n\n  load(_start : Time, _end? : Time) : LoadPromise { return Promise.resolve() }\n\n  loaded(_start : Time, _end? : Time) : boolean { return true }\n\n  loadedAudible(_time?: Time) : Any {}\n\n  loadedVisible(_time?: Time) : Any {}\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type, label: this.label }\n    if (this.icon) object.icon = this.icon\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : ScalarValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionClass {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\nexport { Definition, DefinitionClass, DefinitionObject, DefinitionTimes }\n","import { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Any, Constrained, JsonObject } from \"../../../Setup/declarations\"\nimport { Clip } from \"../Clip/Clip\"\nimport { AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup\"\n\nconst AudibleGainDelimiter = ','\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain, trim } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n      // cnsole.log(\"AudibleMixin gain\", typeof gain, gain, this.gain)\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n    }\n\n    audible = true\n\n    definition! : AudibleDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    gain = Default.clip.audio.gain\n\n    gainPairs : number[][] = []\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    mediaTime(time : Time, addOneFrame = false) : Time {\n      const { fps } = time\n      const endFrame = this.frame + this.frames\n      const endTime = Time.fromArgs(endFrame, fps)\n      const limitedTime = time.min(endTime)\n      const startTime = Time.fromArgs(this.frame, fps)\n      let mediaTime = limitedTime.subtract(startTime)\n\n      if (addOneFrame) {\n        const addTime = Time.fromArgs(1, fps)\n        mediaTime = mediaTime.add(addTime)\n      }\n      if (this.trim === Default.clip.audio.trim) return mediaTime\n\n\n        const addTime = Time.fromArgs(this.trim, fps)\n        return mediaTime.add(addTime)\n    }\n\n    mediaTimeRange(timeRange : TimeRange) : TimeRange {\n      const addOneFrame = (timeRange.frames > 1)\n      return TimeRange.fromTimes(\n        this.mediaTime(timeRange.startTime),\n        this.mediaTime(timeRange.endTime, addOneFrame)\n      )\n    }\n\n\n    // timeRangeRelative(time : Time, quantize : number) : TimeRange {\n    //   const range = super.timeRangeRelative(time, quantize)\n    //   return this.mediaTimeRange(range)\n\n    //   // this.timeRange(quantize).scale(time.fps)\n    //   // const trimTime = Time.fromArgs(this.trim, quantize).scale(time.fps)\n\n    //   // const frame = time.frame + trimTime.frame - range.frame\n    //   // const frames = range.frames - trimTime.frame\n    //   // return TimeRange.fromArgs(frame, range.fps, frames)\n    // }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.clip.audio.trim) object.trim = this.trim\n      if (this.gain !== Default.clip.audio.gain) object.gain = this.gain\n      return object\n    }\n\n    trim = Default.clip.audio.trim\n\n    trimTime(quantize : number) : Time { return Time.fromArgs(this.trim, quantize) }\n\n\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, Constrained, JsonObject, LoadPromise } from \"../../../Setup/declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Instance } from \"../../Instance\"\nimport { ClipObject } from \"./Clip\"\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n      const frame = Math.max(Math.min(time.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    mediaTime(time : Time) : Time { return time }\n\n    mediaTimeRange(timeRange : TimeRange) : TimeRange { return timeRange }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = time.frame - range.frame\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceClass)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nclass AudioClass extends AudioWithAudible {\n  definition! : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, Constrained, ObjectUnknown } from \"../../../Setup/declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.media\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { Any } from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n  add(url : string, value : Any) : void {\n    console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  cached(url : string) : boolean {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return this.cachedByKey.has(this.key(url))\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  get(url : string) : Any | undefined {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) {\n      console.trace()\n      throw Errors.argument + 'url'\n    }\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    console.log(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any } from \"../Setup/declarations\"\n\nclass Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { Processor }\n","import { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { Processor } from \"./Processor\"\n\nclass AudioProcessor extends Processor {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  process(_url : string, buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return this.audibleContext.decode(buffer)\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioProcessor }\n","import { LoadFontPromise } from \"../Setup/declarations\"\nimport { Cache } from \"./Cache\"\nimport { Processor } from \"./Processor\"\n\nclass FontProcessor extends Processor {\n  process(url : string, buffer : ArrayBuffer) : LoadFontPromise {\n    const family = Cache.key(url)\n    const face = new FontFace(family, buffer)\n    const promise = face.load().then(() => {\n      document.fonts.add(face)\n      return { family }\n    })\n    return promise\n  }\n}\n\nexport { FontProcessor }\n","import { Any } from \"../Setup/declarations\"\nimport { Processor } from \"./Processor\"\n\nclass ModuleProcessor extends Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { ModuleProcessor }\n","import { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader  {\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { AudioProcessor } from \"../Loading/AudioProcessor\"\nimport { FontProcessor } from \"../Loading/FontProcessor\"\nimport { ModuleProcessor } from \"../Loading/ModuleProcessor\"\nimport { AudibleContext } from \"../Playing\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\nimport { Processor } from \"./Processor\"\n\ntype ProcessorClassType = typeof Processor\n\nconst classes : {[index : string] : ProcessorClassType } = {\n  Audio: AudioProcessor,\n  Font: FontProcessor,\n  Module: ModuleProcessor,\n}\n\nclass ProcessorClass {\n  audio(object : { audibleContext : AudibleContext}) {\n    return new (<typeof AudioProcessor> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  install(type : string, loader : ProcessorClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst ProcessorFactory = new ProcessorClass()\nexport { ProcessorFactory }\n","import { ProcessorFactory } from \"./ProcessorFactory\"\nimport { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Loader } from \"./Loader\"\n\nimport { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { LoadType} from \"../Setup/Enums\"\n\nclass AudioLoader extends Loader {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  type = LoadType.Audio\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  async requestUrl(url : string) : Promise<AudioBuffer> {\n    return fetch(url).then(response => {\n      return response.arrayBuffer()\n    }).then(loaded => {\n      const options = { audibleContext: this.audibleContext }\n      const processor = ProcessorFactory.audio(options)\n      return processor.process(url, loaded)\n    })\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { ProcessorFactory } from \"./ProcessorFactory\"\nimport { Loader } from \"./Loader\"\nimport { LoadFontPromise } from \"../Setup/declarations\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url : string) : LoadFontPromise {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(buffer => ProcessorFactory.font().process(url, buffer))\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../Setup/declarations\"\nimport { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\nimport { Any } from \"../Setup/declarations\"\n\nclass ModuleLoader extends Loader {\n  type = LoadType.Module\n\n  async requestUrl(url : string) : Promise<Any> { return import(url) }\n}\n\nexport { ModuleLoader }\n","import { Loader } from \".\"\nimport { AudioLoader } from \"../Loading/AudioLoader\"\nimport { FontLoader } from \"../Loading/FontLoader\"\nimport { ImageLoader } from \"../Loading/ImageLoader\"\nimport { ModuleLoader } from \"../Loading/ModuleLoader\"\nimport { UnknownObject } from \"../Setup/declarations\"\nimport { Capitalize } from \"../Utilities\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Module: ModuleLoader,\n}\n\nclass LoaderClass {\n  audio(object? : UnknownObject | undefined) : AudioLoader {\n    return new (<typeof AudioLoader> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, Constrained, JsonObject, LoadPromise } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinition } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration, url, audio, source, waveform } = <AudibleDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (loops) this.loops = !!loops\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    audible = true\n\n    load(start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(start, end)]\n      if (end) {\n        if (Cache.cached(this.urlAudible)) {\n          const cached = Cache.get(this.urlAudible)\n          if (cached instanceof Promise) promises.push(cached)\n        } else promises.push(LoaderFactory.audio().loadUrl(this.urlAudible))\n      }\n      return Promise.all(promises).then()\n    }\n    loaded(start : Time, end? : Time) : boolean {\n      return super.loaded(start, end) && Cache.cached(this.urlAudible)\n    }\n\n    loadedAudible(_time?: Time) : AudioBuffer | undefined {\n      return Cache.get(this.urlAudible)\n    }\n\n    loops = false\n\n    source? : string\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      object.audio = this.urlAudible\n      if (this.loops) object.loops = true\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.urlAudible)) return\n\n      Cache.remove(this.urlAudible)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../Setup/declarations\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nclass AudioDefinitionClass extends AudioDefinitionWithAudible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject } from \"./Audio\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\nconst audioInitialize = () : void => {}\n\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  instance: audioInstance,\n}\n\nFactories.audio = AudioFactoryImplementation\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  definition! : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    return this.definition.draw(evaluator, this.evaluated(evaluator))\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../Setup/declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType, Errors } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { Pixel } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbs = Pixel.rgbs(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbs[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceClass {\n  definition! : FontDefinition\n}\n\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\n\n\nclass FontDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    const instance = new FontClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.source)) {\n      const cached = Cache.get(this.source)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.font().loadUrl(this.source))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.source)\n  }\n\n  loadedVisible(_time?: Time) : Any { return Cache.get(this.source) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import fontDefaultJson from \"./DefinitionObjects/default.json\"\nimport { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories.font = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { FontFactoryImplementation } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return FontFactoryImplementation.definitionFromId(<string> id).source\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  id = 'drawtext'\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"./FilterDefinition\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst Classes : {[index : string] : typeof FilterDefinitionClass } = {\n  setsar: SetSarFilter,\n  blend: BlendFilter,\n  chromakey: ChromaKeyFilter,\n  color: ColorFilter,\n  colorchannelmixer: ColorChannelMixerFilter,\n  convolution: ConvolutionFilter,\n  crop: CropFilter,\n  drawbox: DrawBoxFilter,\n  drawtext: DrawTextFilter,\n  fade: FadeFilter,\n  overlay: OverlayFilter,\n  scale: ScaleFilter,\n}\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && typeof id === \"string\" && id.length)) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  if (!Classes[id]) throw Errors.unknown.filter\n\n  return new Classes[id]({ id, type: DefinitionType.Filter })\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  return filterDefinition({ id }).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => {\n  return filterInstance({ id })\n}\n\nconst filterInitialize = () : void => {}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories.filter = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.imageSource, identifier)\n    return mergeContext\n  }\n\n  id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../Setup/declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      const rgbs = Pixel.rgbs(index * 4, pixels, size)\n      array.push(rgbs.map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.imageSource, inRect, fromSize)\n    return drawing\n  }\n\n  id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    drawing.drawWithAlpha(context.imageSource, evaluator.position)\n    return drawing\n  }\n\n  id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.imageSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.imageSource, inSize, fromSize)\n    return drawing\n  }\n\n  id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { Modular, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, Constrained, JsonObject, ScalarValue, Size } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any, DefinitionType } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\n\nimport effectBlurJson from \"./DefinitionObjects/blur.json\"\nimport effectChromaKeyJson from \"./DefinitionObjects/chromakey.json\"\nimport effectEmbossJson from \"./DefinitionObjects/emboss.json\"\nimport effectGrayscaleJson from \"./DefinitionObjects/grayscale.json\"\nimport effectSepiaJson from \"./DefinitionObjects/sepia.json\"\nimport effectSharpenJson from \"./DefinitionObjects/sharpen.json\"\nimport effectTextJson from \"./DefinitionObjects/text.json\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst Objects : {[index : string] : UnknownObject } = {\n  \"com.moviemasher.effect.blur\": effectBlurJson,\n  \"com.moviemasher.effect.chromakey\": effectChromaKeyJson,\n  \"com.moviemasher.effect.emboss\": effectEmbossJson,\n  \"com.moviemasher.effect.grayscale\": effectGrayscaleJson,\n  \"com.moviemasher.effect.sepia\": effectSepiaJson,\n  \"com.moviemasher.effect.sharpen\": effectSharpenJson,\n  \"com.moviemasher.effect.text\": effectTextJson,\n}\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && id.length)) throw Errors.id\n\n  if (!Definitions.installed(id)) {\n    const options = { type: DefinitionType.Effect }\n    if (Objects[id]) Object.assign(options, Objects[id])\n    Object.assign(options, object)\n    new EffectDefinitionClass(options)\n  }\n  return <EffectDefinition> Definitions.fromId(id)\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  instance: effectInstance,\n}\n\nFactories.effect = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectInitialize,\n  effectInstance,\n}\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../Factory\"\n\n\nconst MergerWithModular = ModularMixin(InstanceClass)\nclass MergerClass extends MergerWithModular {\n  definition! : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../Setup/declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../Merger/DefinitionObjects/blend.json\"\nimport mergerCenterJson from \"../Merger/DefinitionObjects/center.json\"\nimport mergerConstrainedJson from \"../Merger/DefinitionObjects/constrained.json\"\nimport mergerDefaultJson from \"../Merger/DefinitionObjects/default.json\"\nimport mergerOverlayJson from \"../Merger/DefinitionObjects/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { GenericFactory } from \"../../Setup/declarations\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (!Definitions.installed(idString)) {\n    new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n  }\n  return <MergerDefinition> Definitions.fromId(idString)\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerDefinitionObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  mergerDefinition(mergerBlendJson)\n  mergerDefinition(mergerCenterJson)\n  mergerDefinition(mergerConstrainedJson)\n  mergerDefinition(mergerDefaultJson)\n  mergerDefinition(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\ntype MergerFactory = GenericFactory<Merger, MergerObject, MergerDefinition, MergerDefinitionObject>\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories.merger = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../Factory\"\n\nconst ScalerWithModular = ModularMixin(InstanceClass)\nclass ScalerClass extends ScalerWithModular {\n  definition! : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../Setup/declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler,\n  ScalerDefinition,\n  ScalerDefinitionObject,\n  ScalerObject\n} from \"../Scaler/Scaler\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport scalerDefaultJson from \"../Scaler/DefinitionObjects/default.json\"\nimport scalerPanJson from \"../Scaler/DefinitionObjects/pan.json\"\nimport scalerScaleJson from \"../Scaler/DefinitionObjects/scale.json\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && typeof id === \"string\" && id.length ? id : scalerDefaultId\n  if (!Definitions.installed(idString)) {\n    new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n  }\n  return <ScalerDefinition> Definitions.fromId(idString)\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  scalerDefinition(scalerDefaultJson)\n  scalerDefinition(scalerPanJson)\n  scalerDefinition(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories.scaler = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, Size, ValueObject } from \"../../../Setup/declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { Visible } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction TransformableMixin<TBase extends Constrained<Visible>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject> object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions() : Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects : Effect[] = []\n\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      promises.push(this.merger.load(quantize, start, end))\n      promises.push(this.scaler.load(quantize, start, end))\n      this.effects.forEach(effect => {\n        promises.push(effect.load(quantize, start, end))\n      })\n      return Promise.all(promises).then()\n    }\n\n    mergeContextAtTime(mashTime : Time, quantize: number, context : VisibleContext) : void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger : Merger\n\n    get propertyValues() : SelectionObject {\n      const merger = <ValueObject> this.merger.propertyValues\n      const scaler = <ValueObject> this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler : Scaler\n\n    toJSON() : JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { Cache } from \"../../../Loading\"\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Any, Constrained, Size } from \"../../../Setup/declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Clip } from \"../Clip/Clip\"\nimport { VisibleDefinition } from \"./Visible\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      const visibleDefinition = <VisibleDefinition> this.definition\n      const image = visibleDefinition.loadedVisible(definitionTime)\n      if (!image) return\n\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceClass)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  definition! : ImageDefinition\n}\n\nexport { ImageClass }\n","import { TrackType } from \"../../../Setup/Enums\"\nimport { Constrained } from \"../../../Setup/declarations\"\nimport { ClipDefinition } from \"../Clip/Clip\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType, LoadType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\n\nclass ImageDefinitionClass  extends ImageDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.urlVisible)) {\n      const cached = Cache.get(this.urlVisible)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.image().loadUrl(this.urlVisible))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.urlVisible)\n  }\n\n  loadedVisible(_time? : Time) : DrawingSource | undefined { return Cache.get(this.urlVisible) }\n\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories.image = ImageFactoryImplementation\n\nexport {\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../Setup/declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame, TimeRange } from \"../../Utilities\"\nimport { Definitions } from \"../Definitions\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\nclass TrackClass {\n  constructor(object : TrackObject) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: this.index, ...clip }\n      const instance = <Clip> definition.instanceFromObject(clipWithTrack)\n\n      return instance\n    }))\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject }\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Pixel } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleContext, VisibleContext } from \"../../Playing\"\nimport { ContextFactory } from \"../ContextFactory\"\nimport { Cache } from \"../../Loading\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\n\ninterface ClipTiming {\n  start : number\n  duration : number\n  offset : number\n}\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudioBufferSourceNode\n}\n\ninterface CompositionObject {\n  audibleContext? : AudibleContext\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n  visibleContext? : VisibleContext\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    const {\n      audibleContext,\n      backcolor,\n      buffer,\n      gain,\n      quantize,\n      visibleContext\n    } = object\n\n    if (backcolor) this.backcolor = backcolor\n\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n\n    if (audibleContext) this._audibleContext = audibleContext\n    else this._audibleContext = ContextFactory.audible()\n\n    if (visibleContext) this._visibleContext = visibleContext\n    else this._visibleContext = ContextFactory.visible()\n\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) return\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = this.clipTiming(clip)\n    const { start, duration } = timing\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  private _audibleContext : AudibleContext\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  backcolor? : string\n\n  buffer = Default.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n  private clipTiming(clip : Audible) : ClipTiming {\n    const range = clip.timeRange(this.quantize)\n    const zeroSeconds = this.contextSeconds - this.mashSeconds\n    let offset = 0\n    let start = zeroSeconds + range.seconds\n    let duration = range.lengthSeconds\n\n    if (clip.trim) {\n      range.frame = clip.trim\n      offset = range.seconds\n    }\n    const now = this.audibleContext.currentTime\n    if (now > start) {\n      const dif = now - start\n      start = now\n      offset += dif\n      duration -= dif\n    }\n    return { duration, offset, start }\n  }\n\n  compositeAudible(clips : Audible[]) : boolean {\n    if (!this.createSources(clips)) return false\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    // console.log(this.constructor.name, \"compositeVisible\", time, clips.length)\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, this.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    })\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n  private contextSeconds = 0\n\n  private createSources(clips : Audible[]) : boolean {\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const { definition } = clip\n      const buffer = definition.loadedAudible()\n      if (!buffer) return false\n\n      const timing = this.clipTiming(clip)\n      const { start, duration, offset } = timing\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        const gainSource = this.audibleContext.createBufferSource()\n        gainSource.buffer = buffer\n        gainSource.loop = clip.definition.loops\n        const gainNode = this.audibleContext.createGain()\n        gainSource.connect(gainNode)\n        gainNode.connect(this.audibleContext.destination)\n        gainSource.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep : Audible[] = []) : void {\n    this.sourcesByClip.forEach((source, clip) => {\n      if (clipsToKeep.includes(clip)) return\n\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(this.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n      this.sourcesByClip.delete(clip)\n    })\n  }\n\n  private drawBackground() : void {\n    this.visibleContext.clear()\n    if (!this.backcolor) return\n\n    this.visibleContext.drawFill(Pixel.color(this.backcolor))\n  }\n\n  private _gain = Default.volume\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain !== value) {\n      this._gain = value\n      if (!this.playing) return\n\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n  }\n\n  private mashSeconds = 0\n\n  playing = false\n\n  quantize = Default.fps\n\n  get seconds() : number {\n    if (!this.audibleContext) throw Errors.internal + 'audibleContext'\n\n    const ellapsed = this.audibleContext.currentTime - this.contextSeconds\n    return ellapsed + this.mashSeconds\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext() : void {\n    if (this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n    this.bufferSource = this.audibleContext.createBufferSource()\n    this.bufferSource.loop = true\n    this.bufferSource.buffer = this.audibleContext.createBuffer(this.buffer)\n    this.bufferSource.connect(this.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    // console.log(this.constructor.name, \"startPlaying\")\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.mashSeconds = seconds\n\n    this.contextSeconds = this.audibleContext.currentTime\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.mashSeconds, this.contextSeconds)\n    return true\n  }\n\n  stopPlaying() : void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.mashSeconds = 0\n    this.contextSeconds = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(this.audibleContext.destination)\n    delete this.bufferSource\n  }\n\n  private _visibleContext : VisibleContext\n\n  get visibleContext() : VisibleContext { return this._visibleContext }\n\n  set visibleContext(value : VisibleContext) { this._visibleContext = value }\n\n}\n\nexport { Composition }\n","import { DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Interval, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Events, EventsType } from \"../../Editing/Events\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Factory } from \"../Factory\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceClass } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\n\nclass MashClass extends InstanceClass implements Mash {\n  constructor(...args : Any[]) {\n    super(...args)\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      events,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      audibleContext,\n      buffer,\n      gain,\n      visibleContext,\n    } = <MashOptions> object\n\n    this._events = events\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type\n\n      const definitionType = <DefinitionType> type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return Factory[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map(track => new TrackClass(track)))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map(track => new TrackClass(track)))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (audibleContext) this._audibleContext = audibleContext\n    if (visibleContext) this._visibleContext = visibleContext\n  }\n\n  addClipsToTrack(clips : Clip[], trackIndex = 0, insertIndex = 0) : void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    const [clip] = clips\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition> clip.definition\n      const duration = definition.duration\n      clip.frames = Time.fromSeconds(duration).scale(this.quantize, 'floor').frame\n    })\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType : TrackType) : Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    return track\n  }\n\n  private _audibleContext? : AudibleContext\n\n  get audibleContext() : AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._composition) this.composition.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value : AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._composition) this.composition.audibleContext = value\n    }\n  }\n\n  audio : Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor() : string { return this._backcolor }\n\n  set backcolor(value : string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames() : number { return this.buffer * this.quantize }\n\n  private get bufferTime() : Time { return Time.fromSeconds(this.buffer) }\n\n  private __bufferTimer? : Interval\n\n  changeClipFrames(clip : Clip, value : number) : void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip : Audible, value : number, frames : number) : void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clipIntersects(clip : Clip, range : TimeRange) : boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip : Clip) : Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip : Clip, index = 0) : Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  private clips(start : Time, end? : Time) : Clip[] {\n    const objects : Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  get clipsInTracks() : Clip[] { return this.tracks.map(track => track.clips).flat() }\n\n  private clipsAudible(start : Time, end? : Time) : Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private get clipsAudibleInTracks() : Audible[] {\n    return <Audible[]> this.clipsInTracks.filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange : TimeRange) : Audible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsAudibleInTracks.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  private get clipsVideo() : Visible[] { return <Visible[]> this.video.flatMap(track => track.clips) }\n\n  private clipsVisible(start : Time, end? : Time) : Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time : Time) : Visible[]  {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  private clipsVisibleInTimeRange(timeRange : TimeRange) : Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  compositeAudible() : boolean {\n    const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(clips)\n  }\n\n  private _composition? : Composition\n\n  get composition() : Composition {\n    if (!this._composition) {\n      const options = {\n        audibleContext: this.audibleContext,\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n        visibleContext: this.visibleContext,\n        events: this.events,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible() : void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest() : void {\n    const { time } = this\n    this.composition.compositeVisibleRequest(time, this.clipsVisibleAtTime(time))\n  }\n\n  definition! : MashDefinition\n\n  destroy() : void {\n    delete this._events\n    delete this._visibleContext\n    delete this._audibleContext\n    delete this._composition\n\n  }\n\n  private _drawAtInterval? : Interval\n\n  private drawAtInterval() : void {\n    // console.log(this.constructor.name, \"drawAtInterval playing: \", this._playing)\n    if (!this._playing) return\n    const time = this.time.withFrame(this.time.frame + 1)\n    const seconds = this.playing ? this.composition.seconds : time.seconds\n    if (seconds < this.endTime.seconds) {\n      if (seconds >= time.seconds) this.drawTime(time)\n    } else {\n      // console.log(this.constructor.name, \"drawAtInterval finished at\", seconds, this.endTime.seconds)\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else this.paused = true\n    }\n  }\n\n  private drawnTime? : Time\n\n  private drawTime(time : Time) : void {\n    delete this.seekTime\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n  }\n\n  get duration() : number { return Time.fromArgs(this.frames, this.quantize).seconds }\n\n  private emitDuration() : void {\n    const info = {\n      value: Time.fromArgs(this.frames, this.quantize).seconds\n    }\n    // console.log(\"emitDuration\", info)\n    this.events?.emit(EventType.Duration, info)\n  }\n\n  private emitIfFramesChange(method : () => void) : void {\n    // console.log(\"emitIfFramesChange\", this.events)\n    const frames = this.events ? this.frames : null\n    method()\n    if (this.events && frames !== this.frames) this.emitDuration()\n  }\n\n  get endTime() : Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  private _events? : Events\n\n  get events() : Events {\n    if (!this._events) this.events = new Events()\n    if (!this._events) throw Errors.internal\n\n    return this._events\n  }\n\n  set events(value : Events) {\n    if (this._events !== value) {\n      if (!value) throw Errors.argument + 'events'\n\n      if (this._events) this._events.removeListener(this.handleEvent.bind(this))\n      this._events = value\n      this._events.addListener(this.handleEvent.bind(this))\n    }\n  }\n\n  get frame() : number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames() : number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.volume\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n\n  handleEvent(event : Event) : void {\n    if (event.type !== Events.type) return\n\n    const { detail } = <EventsType> event\n    if (!detail) throw Errors.internal\n\n    const { type, action } = detail\n    if (!type) return\n\n    switch (type) {\n      case EventType.Duration: {\n        // make sure our time is still valid\n        if (this.frame > this.frames) {\n          this.seekToTime(Time.fromArgs(this.frames, this.quantize))\n        }\n        return\n      }\n      case EventType.Action: {\n        if (action && action instanceof ChangeAction) {\n          const changeAction = <ChangeAction> action\n          const { property } = changeAction\n          if (property === \"gain\") {\n            if (this.playing && Is.aboveZero(this.gain)) {\n              this.composition.adjustSourceGain(<Audible> changeAction.target)\n            }\n            return\n          }\n\n          // if (changeAction.target.definition.propertiesModular.find(p => p.name === property)) {\n          //   this.loadAndComposite()\n          //   return\n          // }\n        }\n        break\n      }\n      default: break\n    }\n\n    // console.log(this.constructor.name, \"handleEvent\", event.type)\n\n    this.stopAndLoad()\n  }\n\n  get startAndEnd() : Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  load() : LoadPromise {\n    const [start, end] = this.startAndEnd\n    const promises = this.clips(start, end).map(clip =>\n      clip.load(this.quantize, start, end)\n    )\n    return Promise.all(promises).then()\n  }\n\n  loadAndComposite() : void {this.load().then(() => { this.compositeVisibleRequest() }) }\n\n  get loadedDefinitions() : DefinitionTimes {\n    const map = <DefinitionTimes> new Map()\n    const [start, end] = this.startAndEnd\n    this.clips(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks.flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused !== forcedValue) {\n      this._paused = forcedValue\n      if (forcedValue) {\n        this.playing = false\n        if (this.__bufferTimer) {\n          clearInterval(this.__bufferTimer)\n          delete this.__bufferTimer\n        }\n      } else {\n        this.composition.startContext()\n        if (!this.__bufferTimer) {\n          this.__bufferTimer = setInterval(() => { this.load() }, Math.round(this.buffer / 2))\n        }\n        this.load().then(() => { this.playing = true })\n      }\n    }\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.log(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      if (value) {\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n          return\n        }\n        this._drawAtInterval = setInterval(() => { this.drawAtInterval()}, 500 / this.time.fps)\n      } else {\n        this.composition.stopPlaying()\n        if (this._drawAtInterval) {\n          clearInterval(this._drawAtInterval)\n          delete this._drawAtInterval\n        }\n      }\n      this._playing = value\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  async seekToTime(time: Time) : LoadPromise {\n    if (this.seekTime === time) return\n\n    this.seekTime = time\n    return this.stopAndLoad()\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  async stopAndLoad() : LoadPromise {\n    const { time } = this\n\n    const paused = this.paused\n    if (this.playing) this.playing = false\n    await this.load()\n\n    if (time !== this.time) return // we must have gotten a seek call\n\n    this.drawTime(time)\n    if (!paused) {\n      this.composition.startContext()\n      this.playing = true\n    }\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n\n    // console.log(\"trackOfTypeAtIndex\", type, index)\n    return this[type][index]\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  video : Track[] = []\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      this._visibleContext = ContextFactory.visible()\n\n      if (this._composition) this.composition.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._composition) this.composition.visibleContext = value\n    }\n  }\n}\n\nexport { MashClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../Setup/declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    // this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    // this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"Untitled\" }))\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <MashDefinition> Definitions.fromId(id)\n\n  return new MashDefinitionClass(object)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories.mash = MashFactoryImplementation\n\nexport {\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import { Size } from \"../../Setup/declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceClass)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n  definition! : ThemeDefinition\n}\n\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any, DefinitionType } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport themeColorJson from \"./DefinitionObjects/color.json\"\nimport themeTextJson from \"./DefinitionObjects/text.json\"\nimport { Factories } from \"../Factories\"\n\nconst Objects : {[index : string] : UnknownObject } = {\n  \"com.moviemasher.theme.color\": themeColorJson,\n  \"com.moviemasher.theme.text\": themeTextJson,\n}\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (!Definitions.installed(id)) {\n    const options = {}\n    if (Objects[id]) Object.assign(options, Objects[id])\n    Object.assign(options, object)\n    Object.assign(options, { type: DefinitionType.Theme, id: id })\n    new ThemeDefinitionClass(options)\n  }\n  return <ThemeDefinition> Definitions.fromId(id)\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories.theme = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../Setup/declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceClass)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  definition! : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../Setup/declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Modular } from \"../Mixin/Modular/Modular\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n    }\n\n    if (from) {\n      const { filters } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], modular : Modular, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    const [fromClip, toClip] = sorted\n\n    const range = TimeRange.fromTime(time)\n\n    const fromRange = fromClip.timeRange(time.fps)\n\n    if (color) context.drawFill(color)\n\n    if (fromRange.intersects(range)) {\n      fromClip.mergeContextAtTime(time, quantize, context)\n      this.filters = this.fromFilters\n      this.drawFilters(modular, range, context, size)\n    }\n    if (!toClip) return\n\n    const toRange = toClip.timeRangeRelative(time, quantize)\n    if (!toRange.intersects(range)) return\n\n    const drawing = ContextFactory.toSize(size)\n    if (color) drawing.drawFill(color)\n    toClip.mergeContextAtTime(time, quantize, drawing)\n\n    this.filters = this.toFilters\n\n    this.drawFilters(modular, range, drawing, size)\n\n    context.draw(drawing.imageSource)\n\n  }\n\n  private fromFilters : Filter[] = []\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport transitionCrossfadeJson from \"./DefinitionObjects/crossfade.json\"\nimport { Factories } from \"../Factories/Factories\"\nimport {\n  Transition,\n  TransitionDefinition,\n  TransitionDefinitionObject,\n  TransitionObject,\n} from \"./Transition\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories.transition = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../Setup/declarations\"\nimport { Time } from \"../../Utilities/Time\"\n\nconst VideoWithClip = ClipMixin(InstanceClass)\nconst VideoWithAudible = AudibleMixin(VideoWithClip)\nconst VideoWithVisible = VisibleMixin(VideoWithAudible)\nconst VideoWithTransformable = TransformableMixin(VideoWithVisible)\n\nclass VideoClass extends VideoWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : Video { return <Video> super.copy }\n\n  definition! : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.clip.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.clip.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.clip.video.speed) object.speed = this.speed\n    return object\n  }\n\n}\n\nexport { VideoClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities\"\nimport { Cache } from \"../../Loading\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VideoClass } from \"./VideoInstance\";\nimport { Video, VideoDefinitionObject, VideoObject } from \"./Video\";\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../Setup/declarations\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Definitions } from \"../Definitions/Definitions\";\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\";\nimport { Default, Property } from \"../../Setup\";\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\";\n\nconst VideoDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst VideoDefinitionWithAudible = AudibleDefinitionMixin(VideoDefinitionWithClip)\nconst VideoDefinitionWithVisible = VisibleDefinitionMixin(VideoDefinitionWithAudible)\nclass VideoDefinitionClass extends VideoDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, begin, fps, increment, pattern, video_rate, source } = <VideoDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n\n    if (typeof begin !== \"undefined\") this.begin = begin\n\n    if (fps || video_rate) this.fps = Number(fps || video_rate) // deprecated string\n\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  begin = Default.media.video.begin\n\n  fps = Default.media.video.fps\n\n  private frames(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.media.video.increment\n\n  get instance() : Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoObject) : Video {\n    return new VideoClass({ ...this.instanceObject, ...object })\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    const frames = this.frames(start, end)\n    frames.forEach(frame => {\n      const url = this.urlForFrame(frame)\n      if (Cache.cached(url)) {\n        const cached = Cache.get(url)\n        if (cached instanceof Promise) promises.push(cached)\n      } else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    if (!super.loaded(start, end)) return false\n\n    return this.frames(start, end).every(frame => Cache.cached(this.urlForFrame(frame)))\n  }\n\n  loadedVisible(time? : Time) : DrawingSource | undefined {\n    if (!time) throw Errors.internal\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.media.video.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.media.video.increment) object.increment = this.increment\n    if (this.begin !== Default.media.video.begin) object.begin = this.begin\n    if (this.fps !== Default.media.video.fps) object.fps = this.fps\n    return object\n  }\n\n  unload(times? : Times[]) : void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.frames(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.zeropadding) s = s.padStart(this.zeropadding, '0')\n    return (this.url + this.pattern).replaceAll('%', s)\n  }\n\n  urls(start : Time, end? : Time) : string[] {\n    return this.frames(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  get zeropadding() : number {\n    if (!this.__zeropadding) {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.__zeropadding = String(lastFrame).length\n\n    }\n    return this.__zeropadding\n  }\n\n  private __zeropadding? : number\n}\n\nexport { VideoDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClass } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClass(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories.video = VideoFactoryImplementation\n\nexport {\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { Masher, MasherClass } from \"./Masher\"\nimport { Timeout } from \"../../Setup/declarations\"\nimport { Definition, DefinitionTimes } from \"../../Mash/Definition/Definition\"\nimport { Errors } from \"../../Setup\"\nimport { Definitions } from \"../../Mash\"\n\nconst MasherTypes = [\"masher\"]\nconst MasherType = Object.fromEntries(MasherTypes.map(type => [type, type]))\nconst INTERVAL_TICS = 10 * 1000\n\nconst classes = {\n  Masher: MasherClass // Editor, Player\n}\n\nclass MasherFactory {\n  interval? : Timeout\n\n  mashers : Masher[] = []\n\n  create(object = {}) : Masher {\n    const masher = new classes.Masher(object)\n    this.addMasher(masher)\n    return masher\n  }\n\n  addMasher(masher : Masher) {\n    if (!this.mashers.length) this.start()\n    this.mashers.push(masher)\n  }\n\n  destroy(masher : Masher) {\n    const index = this.mashers.indexOf(masher)\n    if (index < 0) return\n\n    this.mashers.splice(index, 1)\n    if (!this.mashers.length) this.stop()\n  }\n\n  handleInterval() {\n    // console.log(this.constructor.name, \"handleInterval\")\n    const map = <DefinitionTimes> new Map()\n    const definitions = new Set<Definition>()\n\n    this.mashers.forEach(masher => {\n      masher.definitions.forEach(definition => { definitions.add(definition) })\n\n      const masherMap = masher.loadedDefinitions\n      masherMap.forEach((times, definition) => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(...times)\n      })\n    })\n    map.forEach((times, definition) => {\n      definition.unload(times)\n    })\n\n    Definitions.map.forEach(definition => {\n      if (definitions.has(definition)) {\n        // definition used in a masher (masher.mash.media)\n        if (map.has(definition)) {\n          // definition needs to be at least partially loaded\n          definition.unload(map.get(definition))\n        } else {\n          // definition can be completely unloaded, but not uninstalled\n          definition.unload()\n        }\n      } else {\n        // definition is not used anywhere - unload, and uninstall if not retained\n        definition.unload()\n        if (!definition.retain) Definitions.uninstall(definition.id)\n      }\n    })\n  }\n\n  start() {\n    // console.log(this.constructor.name, \"start\")\n    if (this.interval) return\n\n    this.interval = setInterval(this.handleInterval.bind(this), INTERVAL_TICS)\n  }\n\n  stop() {\n    // console.log(this.constructor.name, \"stop\")\n    if (!this.interval) return\n\n    clearInterval(this.interval)\n    delete this.interval\n  }\n\n  get type() { return MasherType }\n\n  get types() { return MasherTypes }\n}\n\nconst MasherFactoryInstance = new MasherFactory()\n\nexport { MasherFactoryInstance as MasherFactory }\n","import { effectInitialize } from \"../Mash/Effect/EffectFactory\"\nimport { filterInitialize } from \"../Mash/Filter/FilterFactory\"\nimport { fontInitialize } from \"../Mash/Font/FontFactory\"\nimport { mergerInitialize } from \"../Mash/Merger/MergerFactory\"\nimport { scalerInitialize } from \"../Mash/Scaler/ScalerFactory\"\nimport { themeInitialize } from \"../Mash/Theme/ThemeFactory\"\nimport { transitionInitialize } from \"../Mash/Transition/TransitionFactory\"\n\nmergerInitialize()\nscalerInitialize()\nfontInitialize()\ntransitionInitialize()\neffectInitialize()\nfilterInitialize()\nthemeInitialize()\n"],"names":["ActionType","TrackType","ClipType","ClipTypes","Object","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","$invalidArgument","$invalidProperty","$deprecated","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","mash","action","actions","internal","argument","invalid","definition","duration","audio","url","source","id","track","trackType","name","value","type","property","object","factory","volume","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frame","frames","fps","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","deprecation","property_types","addModulesOfType","configure","set","canvas_context","wrongClass","Action","[object Object]","this","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","events","selectedClips","done","selectedEffects","redoAction","emit","undoAction","AddTrackAction","super","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","Number","undoValueNumeric","redo","FreezeAction","freezeClip","frozenClip","index","insertClip","trackClips","splice","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","i","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","forEach","setFrames","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","length","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","removed","push","undo","Events","Set","__target","methods","removeListener","addListener","method","add","addEventListener","info","event","detail","dispatchEvent","CustomEvent","delete","removeEventListener","Default","buffer","loop","precision","autoplay","label","quantize","backcolor","gain","trim","video","speed","image","theme","transition","pattern","increment","begin","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","isPopulatedString","String","isPopulatedObject","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","scaleTimes","time1","time2","rounding","gcf","a","b","fps1","fps2","t","greatestCommonDenominator","scale","roundWithMethod","Math","ceil","floor","round","roundingMethod","Time","copy","description","min","scaleToTime","subtracted","rounded","fromArgs","TimeRange","end","endTime","lengthSeconds","position","startTime","max","range1","range2","scaledTime","scaledRange","range","start","rgbValue","rgbNumeric","rgb","r","g","yuvNumeric","y","u","v","Color","yuvBlend","yuvs","yuv","match","blend","diff","blendYuv","yuvObject","numericYuv","du","dv","sqrt","rgb2yuv","ints","yuv2rgb","floats","rgb2hex","toString","rgbaAtIndex","pixels","safePixel","pixel","offsetPoint","size","x","width","height","pt","toPoint","fromPoint","Pixel","color","slice","rgbs","data","halfSize","depth","safePixels","map","p","toIndex","rgba","byFrame","byTrack","byLabel","Sort","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","element","join","Evaluator","context","mergeContext","Map","setInputSize","conditionals","trueConditional","find","expression","replaceAll","replaceOperators","evaluateExpression","conditionalValue","script","replaceKeys","Function","exception","console","warn","key","has","includes","bind","inputSize","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","expressions","fromEntries","RegExp","entries","regExp","vertical","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","Capitalize","toUpperCase","substr","classes","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","definitionsMap","DefinitionsByType","definitionsByType","list","definitionsList","definitionsClear","clear","definitionsFont","Font","definitionsFromId","definitionsInstalled","definitionsInstall","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","definitions","indexOf","Definitions","byType","fromId","install","installed","uninstall","InstanceClass","args","_label","instanceFromObject","toJSON","scaleToFps","definitionTime","load","loaded","propertyNames","properties","propertyValues","ModularMixin","Base","constructProperties","modularDefinitions","promises","Promise","all","then","every","propertiesModular","EffectWithModular","EffectClass","AudibleContext","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","createBufferSource","createGain","resolve","reject","decodeAudioData","audioData","error","destination","fromSeconds","currentTime","Point0","VisibleContext","context2d","__context2d","alpha","globalAlpha","canvas","clearSize","clearRect","rect","composite","globalCompositeOperation","globalThis","document","createElement","getContext","dataUrl","toDataURL","drawAtPoint","point","drawImage","fill","drawFillToSize","fillOriginal","fillRect","drawFillInRect","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","JSON","stringify","drawInRectFromRect","inSize","fromSize","text","style","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","imageSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactoryInstance","visible","types","Factories","FactoryClass","Audio","Effect","Filter","Image","Mash","Theme","Transition","Video","Factory","MasherProperty","MasherClass","visibleContext","_loop","_audibleContext","_visibleContext","handleMasher","_fps","_volume","_buffer","_time","clone","createFromObject","do","_actions","frameOrIndex","instance","addEffect","clipType","addClip","options","trackOfTypeAtIndex","trackCount","isMainVideo","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","ContextFactory","audible","_mash","z","_selectedClips","clipCanBeSplit","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","log","constructor","_pristine","transform","transformProperty","transformType","transformable","pristineTarget","currentActionReusable","updateAction","_pristineEffect","fromTime","clipRange","intersects","_context2D","compositeVisible","configured","_delayedTimer","setTimeout","__events","firstClip","sort","abutting","clipTrack","muted","loadMash","loadedDefinitions","mashOptions","paused","destroy","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","offset","effectOrArray","_muted","handleGainChange","per","toFixed","positionStep","repeat","removeEffects","removeClips","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipObject","selectedClipOrMash","silenced","_paused","stalling","__moving","seekToTime","fromContext2D","Parameter","TypeValue","identifier","Type","modular","TypesInstance","entry","dataType","propertyTypes","trace","propertyType","dataTypesJson","Property","custom","Types","DefinitionClass","icon","instanceObject","_start","_end","_times","AudibleMixin","gainPairs","trimTime","withFrame","space","addOneFrame","endFrame","limitedTime","mediaTime","subtract","addTime","fromTimes","ClipMixin","_quantize","_trim","AudioWithAudible","AudioClass","ClipPropertyObjects","Integer","ClipDefinitionMixin","_duration","Cache","cachedByKey","urlsByKey","Processor","_url","AudioProcessor","decode","FontProcessor","face","FontFace","fonts","ModuleProcessor","Loader","cached","promiseOrCached","promise","requestUrl","processed","Module","ProcessorFactory","loader","AudioLoader","fetch","response","arrayBuffer","process","FontLoader","ImageLoader","crossOrigin","src","ModuleLoader","import","LoaderFactory","AudibleDefinitionMixin","loops","waveform","urlAudible","loadUrl","times","unload","some","maybePair","AudioDefinitionWithAudible","AudioDefinitionClass","audioObject","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","FilterDefinitionClass","_evaluator","_evaluated","RBGA","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","Classes","setsar","modes","Mode","all_mode","drawWithComposite","chromakey","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","matrix","drawImageData","drawFill","colorchannelmixer","rgbas","first","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","convolution","bias","rdiv","channel","parseInt","parse","input","output","inputData","outputData","area","sum","crop","out_w","out_h","drawing","toSize","drawInRectFromSize","drawbox","drawtext","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","fade","drawWithAlpha","overlay","outWidth","outHeight","drawInSizeFromSize","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","EffectDefinitionWithModular","EffectDefinitionClass","Objects","com.moviemasher.effect.blur","com.moviemasher.effect.chromakey","com.moviemasher.effect.emboss","com.moviemasher.effect.grayscale","com.moviemasher.effect.sepia","com.moviemasher.effect.sharpen","com.moviemasher.effect.text","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectDefine","EffectFactoryImplementation","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerInstance","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","ScalerFactoryImplementation","TransformableMixin","effectInstances","flatMap","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","reverse","drawFilters","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionClass","urlVisible","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","ImageFactoryImplementation","TrackClass","clipWithTrack","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","Composition","_gain","sourcesByClip","gainNode","timing","clipTiming","cancelScheduledValues","pair","linearRampToValueAtTime","contextSeconds","mashSeconds","now","dif","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","mainClip","mergeContextAtTime","requestAnimationFrame","loadedAudible","gainSource","connect","adjustSourceGain","clipsToKeep","disconnect","playing","bufferSource","stopPlaying","stop","MashClass","_events","_backcolor","definitionId","definitionType","newTrack","clipTrackAtIndex","oldTrack","emitIfFramesChange","_composition","bufferFrames","bufferTime","limitedValue","maxFrames","newFrames","objects","clipsVisible","clipsAudible","clipsInTracks","tracks","flat","clipsAudibleInTracks","intersectsTime","clipIntersects","clipsVideo","clipsVisibleInTimeRange","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","_playing","drawTime","seekTime","drawnTime","Duration","emitDuration","handleEvent","changeAction","stopAndLoad","startAndEnd","definitionTimes","forcedValue","__bufferTimer","clearInterval","startContext","setInterval","startPlaying","_drawAtInterval","drawAtInterval","pop","stalled","av","MashDefinitionClass","Rgba","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","MashFactoryImplementation","ThemeWithTransformable","ThemeClass","ThemeDefinitionWithVisible","ThemeDefinitionClass","com.moviemasher.theme.color","com.moviemasher.theme.text","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","from","toFilters","fromFilters","sorted","fromClip","toClip","fromRange","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","VideoWithTransformable","VideoClass","divide","VideoDefinitionWithVisible","VideoDefinitionClass","video_rate","framesMax","urlForFrame","urls","zeroTime","allUrls","deleting","s","zeropadding","padStart","__zeropadding","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","VideoFactoryImplementation","MasherTypes","MasherType","MasherFactoryInstance","masher","addMasher","mashers","retain","interval","handleInterval"],"mappings":"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"}