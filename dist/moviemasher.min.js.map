{"version":3,"file":"moviemasher.min.js","sources":["../src/Utilities/Color.ts","../src/Setup/Default.ts","../src/Setup/Errors.ts","../src/Setup/Parameter.ts","../src/Utilities/Is.ts","../src/Setup/Enums.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Utilities/Capitalize.ts","../src/Utilities/Element.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Id.ts","../src/Utilities/Round.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/TrackRange.ts","../src/Utilities/Url.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Loading/Cache.ts","../src/Loading/Loader.ts","../src/Mash/Instance/Instance.ts","../src/Mash/Definition/Definition.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Mixin/AudibleFile/AudibleFileMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Mash/Audio/AudioLoader.ts","../src/Mash/Font/FontLoader.ts","../src/Mash/Image/ImageLoader.ts","../src/Mash/Video/VideoLoader.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Mixin/AudibleFile/AudibleFileDefinitionMixin.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/Factory/Factory.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Masher/MasherInstance.ts","../src/Mash/Masher/MasherDefinition.ts","../src/Mash/Masher/MasherFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Mash/VideoStream/VideoStreamInstance.ts","../src/Mash/Mixin/Streamable/StreamableMixin.ts","../src/Mash/VideoStream/VideoStreamDefinition.ts","../src/Mash/Mixin/Streamable/StreamableDefinitionMixin.ts","../src/Mash/VideoStream/VideoStreamFactory.ts","../src/Mash/VideoSequence/VideoSequenceInstance.ts","../src/Mash/VideoSequence/VideoSequenceDefinition.ts","../src/Mash/VideoSequence/VideoSequenceFactory.ts","../src/Factories/index.ts","../src/Job/Job.ts","../src/Utilities/Seconds.ts"],"sourcesContent":["import { Rgb, RgbObject, Yuv, YuvObject } from \"../declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst colorYuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst colorRgb2hex = (rgb: RgbObject): string => {\n  // unused after 5.0 refactor, but perhaps needed?\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst colorYuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst colorRgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst colorStrip = (color: string): string => color.toLowerCase().replaceAll(/[\\s]/g, '')\n\n\nconst colorValid = (color: string): boolean => {\n  const colorStripped = colorStrip(color)\n  const style = new Option().style\n  style.color = color\n  const styleStripped = colorStrip(style.color)\n  if (!styleStripped) return false\n\n  if (styleStripped.startsWith('rgb')) return true\n\n  return styleStripped === colorStripped\n}\n\nconst colorTransparent = '#00000000'\n\nconst Color = {\n  valid: colorValid,\n  yuvBlend: colorYuvBlend,\n  rgb2yuv: colorRgb2yuv,\n  yuv2rgb: colorYuv2rgb,\n  rgb2hex: colorRgb2hex,\n  transparent: colorTransparent,\n  strip: colorStrip,\n}\nexport {\n  Color,\n  colorStrip,\n  colorValid,\n  colorRgb2hex,\n  colorYuv2rgb,\n  colorRgb2yuv,\n  colorYuvBlend,\n  colorTransparent,\n}\n","import { colorTransparent } from \"../Utilities/Color\"\n\nconst Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 0,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: colorTransparent,\n    gain: 0.75,\n    buffer: 10,\n    output: {\n      size: '320x240',\n    }\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0, loop: 1 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { fps: 0 },\n    videosequence: { pattern: '%.jpg', fps: 10, increment: 1, begin: 1, padding: 0 },\n    videostream: { duration: 10 },\n  },\n}\n\nexport { Default }\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    canvas: `${$invalidArgument} canvas `,\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    size: `${$invalid} size `,\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { JsonObject, ScalarValue, ValueObject } from \"../declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { ScalarArray, UnknownObject } from \"../declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n  VideoSequence = 'videosequence',\n  VideoStream = 'videostream',\n  // AudioStream = 'audiostream',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Font = 'font',\n  Mash = 'mash',\n  Masher = 'masher',\n  Theme = 'theme',\n  Transition = 'transition',\n  Image = 'image',\n  Video = 'video',\n  Audio = 'audio',\n  VideoStream = 'videostream',\n  VideoSequence = 'videosequence',\n  // AudioStream = 'audiostream',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Duration = 'durationchange',\n  Draw = 'draw',\n  Ended = 'ended',\n  Fps = 'ratechange',\n  Loaded = 'loadeddata',\n  Mash = 'mashchange',\n  Pause = 'pause',\n  Play = 'play',\n  Playing = 'playing',\n  Seeked = 'seeked',\n  Seeking = 'seeking',\n  Selection = 'selection',\n  Time = 'timeupdate',\n  Track = 'track',\n  Volume = 'volumechange',\n  Waiting = 'waiting',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n  Video = 'video',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nenum CommandType {\n  File = 'file',\n  Stream = 'stream'\n}\n\nconst CommandTypes = Object.values(CommandType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  CommandType,\n  CommandTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","import { ScalarValue } from \"../../declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst DefinitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = (): void => {\n  DefinitionsMap.clear()\n  DefinitionsByType.clear()\n}\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(id)\n    throw Errors.unknown.definition + id\n  }\n\n  const definition = DefinitionsMap.get(id)\n  if (!definition) throw Errors.internal + id\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  DefinitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => DefinitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) return\n\n  const definition = definitionsFromId(id)\n  DefinitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal\n\n  definitions.splice(index, 1)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: DefinitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  DefinitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { ScalarRaw, SelectionValue } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { colorValid } from \"../../Utilities/Color\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { isNan } from \"../../Utilities/Is\"\n\n\n\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  coerce(value: SelectionValue): ScalarRaw | undefined {\n    const string = String(value)\n    const number = Number(value)\n\n    if (this.modular && !Definitions.fromId(string)) return\n\n    switch (this.id) {\n      case DataType.Boolean: return !!value\n      case DataType.Number:\n      case DataType.Fontsize:\n      case DataType.Pixel: {\n        if (isNan(number)) return\n\n        return number\n      }\n      case DataType.Integer: {\n        if (isNan(number)) return\n\n        return Math.round(number)\n      }\n      case DataType.Rgb:\n      case DataType.Rgba: {\n        if (!colorValid(string)) return\n\n        break\n      }\n      case DataType.Direction4:\n      case DataType.Direction8:\n      case DataType.Mode: {\n        if (!this.values?.find(object => { object.id === string })) return\n\n        break\n      }\n    }\n    return string\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarRaw } from \"../../declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) throw Errors.type + 'propertyType ' + type\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarRaw } from \"../declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\nexport { Property, PropertyObject }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { ScrollMetrics } from '../declarations'\n\n\nconst ElementScrollProps = [\n  'scrollPaddingleft',\n  'scrollPaddingRight',\n  'scrollPaddingTop',\n  'scrollPaddingBottom',\n]\nconst elementScrollMetrics = (element?: Element | null): ScrollMetrics | undefined => {\n  if (!element) return\n\n  const style: CSSStyleDeclaration = getComputedStyle(element)\n  const entries = ElementScrollProps.map(key => {\n    const value = style.getPropertyValue(key) || '0px'\n    const number = Number(value.slice(0, -2))\n    return [key, isNaN(number) ? 0 : number]\n  })\n  const { scrollLeft, scrollTop } = element\n  const { x, y, width, height } = element.getBoundingClientRect()\n  entries.push(['scrollLeft', scrollLeft])\n  entries.push(['scrollTop', scrollTop])\n  entries.push(['x', x])\n  entries.push(['y', y])\n  entries.push(['width', width])\n  entries.push(['height', height])\n  return Object.fromEntries(entries)\n}\n\nconst Element = {\n  scrollMetrics: elementScrollMetrics,\n}\n\nexport { Element, elementScrollMetrics }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","const Id = () : string => {\n  return `${Date.now().toString(36)}${Math.random().toString(36).substr(2)}`\n}\n\nexport { Id }\n","import { NumberConverter } from \"../declarations\"\n\nconst roundMethod = (rounding = '') : NumberConverter => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number: number, method = ''): number => {\n  const func = roundMethod(method)\n  return func(number)\n}\n\nconst Round = {\n  method: roundMethod,\n  withMethod: roundWithMethod,\n}\n\nexport { Round, roundMethod, roundWithMethod }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../declarations\"\nimport { roundWithMethod } from \"./Round\"\n\nconst pixelFromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst pixelToPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst pixelToIndex = (pixel : number) => pixel * 4\n\nconst pixelRgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst pixelRgba = (pixel : number, data : Pixels) => pixelRgbaAtIndex(pixelToIndex(pixel), data)\n\nconst pixelSafe = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = pixelToPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return pixelFromPoint(pt, width)\n}\n\nconst pixelNeighboringPixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(pixelSafe(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst pixelNeighboringRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  pixelNeighboringPixels(pixel, size).map(p => pixelRgba(p, data))\n)\n\nconst pixelColor = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nconst pixelPerFrame = (frames: number, width: number, zoom: number): number => {\n  if (!(frames && width)) return 0\n\n  const widthFrames = width / frames\n\n  const min = Math.min(1, widthFrames)\n  const max = Math.max(1, widthFrames)\n  if (zoom === 1) return max\n  if (!zoom) return min\n\n  return min + ((max - min) * zoom)\n}\n\nconst pixelFromFrame = (frame: number, perFrame : number, rounding = 'ceil'): number => {\n  if (!(frame && perFrame)) return 0\n\n  const pixels = frame * perFrame\n  return roundWithMethod(pixels, rounding)\n}\n\nconst pixelToFrame = (pixels: number, perFrame : number, rounding = 'round'): number => {\n  if (!(pixels && perFrame)) return 0\n\n  return roundWithMethod(pixels / perFrame, rounding)\n}\n\nconst Pixel = {\n  color: pixelColor,\n  fromFrame: pixelFromFrame,\n  neighboringRgbas: pixelNeighboringRgbas,\n  perFrame: pixelPerFrame,\n  rgbaAtIndex: pixelRgbaAtIndex,\n  toFrame: pixelToFrame,\n}\n\nexport {\n  Pixel,\n  pixelColor,\n  pixelFromFrame,\n  pixelNeighboringRgbas,\n  pixelPerFrame,\n  pixelRgbaAtIndex,\n  pixelToFrame,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { roundWithMethod } from \"./Round\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst timeEqualizeRates = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrame(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = (Number(this.frame) / Number(this.fps)) * Number(fps)\n    // console.debug(this.constructor.name, \"scale\", frame, \"=\", this.frame, \"/\", this.fps, \"*\", fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return timeEqualizeRates(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, timeEqualizeRates }\n","import { Is } from \"./Is\"\nimport { Time, timeEqualizeRates } from \"./Time\"\nimport { roundWithMethod } from \"./Round\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  addFrames(frames : number) : TimeRange {\n    const time = this.copy\n    time.frames += frames\n    return time\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = timeEqualizeRates(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> timeEqualizeRates(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  get times(): Time[] {\n    const { frames, frame, fps } = this\n    return Array.from({ length: frames + 1 }, (_, i) => Time.fromArgs(frame + i, fps))\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> timeEqualizeRates(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { TrackType } from \"../Setup/Enums\"\n\nclass TrackRange {\n  constructor(first = 0, last = -1, type? : TrackType) {\n    this.first = first\n    this.last = last\n    this.type = type\n  }\n\n  get count(): number { return 1 + this.last - this.first }\n\n  last = -1\n\n  get relative(): boolean { return this.last < 0 }\n\n  equals(trackRange: TrackRange): boolean {\n    return this.last === trackRange.last && this.first === trackRange.first\n  }\n\n  first = 0\n\n  get tracks(): number[] {\n    if (this.last < 0) return []\n\n    return Array(this.last - this.first + 1).fill(0).map((_, idx) => this.first + idx)\n  }\n\n  toString(): string { return `[${this.type || 'av'}-${this.first}-${this.last}]` }\n\n  type?: TrackType\n\n  withEnd(last: number): TrackRange {\n    return TrackRange.fromArgs(this.first, last, this.type)\n  }\n\n  withMax(max: number): TrackRange { return this.withEnd(max + this.last) }\n\n  static ofType(type: TrackType, last = -1, first = 0): TrackRange {\n    return this.fromArgs(first, last, type)\n  }\n  static fromArgs(first = 0, last = -1, type?: TrackType): TrackRange {\n    return new TrackRange(first, last, type)\n  }\n}\n\nexport { TrackRange }\n","\nconst urlAbsolute = (url: string): string => (new URL(url, document.baseURI)).href\n\nconst Url = { absolute: urlAbsolute }\n\nexport { Url, urlAbsolute }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Mash | Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Mash | Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target.setValue(this.property, this.redoValue)\n  }\n\n  undoAction() : void {\n    this.target.setValue(this.property, this.undoValue)\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.redoValueNumeric)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.undoValueNumeric)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.redoValueNumeric, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.undoValueNumeric, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number, frames?: number[]) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex, frames)\n  }\n\n  redoAction() : void {\n    this.addClips(this.trackIndex, this.insertIndex, this.redoFrames)\n  }\n\n  undoAction() : void {\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex, this.undoFrames)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\nimport { Is } from \"../../Utilities\";\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  add(action : Action) : void {\n    const remove = this.instances.length - (this.index + 1)\n    if (Is.positive(remove)) this.instances.splice(this.index + 1, remove)\n\n    this.instances.push(action)\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { AudibleSource } from \"../declarations\"\nimport { EventType } from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      this.__context = new Klass()\n    }\n    return this.__context\n  }\n\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource(buffer?: AudioBuffer): AudibleSource {\n    // console.trace(this.constructor.name, \"createBufferSource\")\n    const sourceNode = this.context.createBufferSource()\n    if (buffer) sourceNode.buffer = buffer\n    return sourceNode\n  }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  get currentTime() : number { return this.context.currentTime }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  emit(type: EventType): void { this.context.dispatchEvent(new CustomEvent(type)) }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n}\n","import {\n  Context2D,\n  ContextData,\n  VisibleContextElement,\n  VisibleSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle,\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Action } from \"../Editing/Action/Action\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nclass VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    const { context2d } = object\n    // console.trace(\"VisibleContext\", \"constructor\", context2d)\n    if (context2d) this._context2d = context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : VisibleContextElement { return this.context2d.canvas }\n\n  set canvas(value: VisibleContextElement) {\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.invalid.canvas\n    this.context2d = context2d\n  }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  private get context2d() : Context2D {\n    if (!this._context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this._context2d = context\n    }\n    return this._context2d\n  }\n\n  private set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this._context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : VisibleSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : VisibleSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : VisibleSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : VisibleSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : VisibleSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : VisibleSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : VisibleSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : VisibleSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : VisibleSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : VisibleSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private _context2d? : Context2D\n}\n\ninterface EventsDetail {\n  action? : Action\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { VisibleContext, EventsType, EventsDetail}\n","import { Size, Context2D, VisibleContextElement } from \"../declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromCanvas(canvas : VisibleContextElement) : VisibleContext {\n    const context = this.visible()\n    context.canvas = canvas\n    return context\n  }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","\nimport { Any } from \"../declarations\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  audibleContext = ContextFactory.audible()\n\n  cached(url: string): boolean {\n    const object = this.getObject(url)\n    return object && ! (object instanceof Promise)\n  }\n\n  caching(url: string): boolean {\n    const object = this.getObject(url)\n    return object && object instanceof Promise\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  flush(retainUrls: string[]) {\n    const keys = [...this.urlsByKey.keys()]\n    const retainKeys = retainUrls.map(url => this.key(url))\n    const removeKeys = keys.filter(key => !retainKeys.includes(key))\n    removeKeys.forEach(key => {\n      const url = this.urlsByKey.get(key)\n      if (url) this.remove(url)\n    })\n  }\n\n  get(url : string) : Any {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  getObject(url: string): Any {\n     if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    const key = this.key(url)\n    if (!this.cachedByKey.has(key)) return\n\n     return this.cachedByKey.get(key)\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.trace(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n\n  visibleContext = ContextFactory.visible()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any, LoadPromise } from \"../declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader {\n  arrayBufferPromiseFromUrl(url: string): Promise<ArrayBuffer> {\n    return fetch(url).then(response => response.arrayBuffer())\n  }\n\n  arrayBufferPromiseFromBlob(blob: Blob):Promise<ArrayBuffer> {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => { resolve(<ArrayBuffer> reader.result) }\n      reader.onerror = reject\n      reader.readAsArrayBuffer(blob)\n    })\n  }\n\n  audioBufferPromiseFromArrayBuffer(arrayBuffer: ArrayBuffer): Promise<AudioBuffer> {\n    return Cache.audibleContext.decode(arrayBuffer)\n  }\n\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Id } from \"../../Utilities\"\n\ninterface InstanceObject extends UnknownObject {\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceBase {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceBase'\n\n    const { definition, id, label } = <InstanceObject> object\n    if (!definition) throw Errors.invalid.definition.object + 'InstanceBase'\n\n    this.definition = definition\n    if (id && id !== definition.id) this._id = id\n    if (label && label !== definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  protected _id? : string\n\n  get id() : string { return this._id || this.definition.id }\n\n  private _identifier?: string\n\n  get identifier() : string { return this._identifier ||= Id() }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  setValue(key: string, value: SelectionValue): boolean {\n    const property = this.definition.property(key)\n    if (!property) throw Errors.property + key\n\n    const { type } = property\n    const coerced = type.coerce(value)\n    if (typeof coerced === 'undefined') {\n      console.error(this.constructor.name, \"setValue\", key, value)\n      return false\n    }\n\n    this[key] = coerced\n    return true\n  }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + key\n\n    return <SelectionValue> value\n  }\n}\n\ninterface Instance extends InstanceBase {}\n\ntype InstanceClass = Constrained<InstanceBase>\n\nexport { Instance, InstanceClass, InstanceBase, InstanceObject }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Constrained, JsonObject, LoadPromise, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { Instance, InstanceBase, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionBase {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    this.label = label || id\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceBase({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label : string\n\n  loadDefinition(_quantize: number, _start : Time, _end? : Time) : LoadPromise | void { }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [] }\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label !== this.id) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionBase {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\ntype DefinitionClass = Constrained<DefinitionBase>\n\nexport { Definition, DefinitionClass, DefinitionBase, DefinitionObject, DefinitionTimes }\n","import { Is } from \"../../../Utilities/Is\"\nimport { Any, AudibleSource, JsonObject, StartOptions } from \"../../../declarations\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { AudibleClass, AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup/Default\"\nimport { Cache } from \"../../../Loading/Cache\"\nimport { Time } from \"../../../Utilities/Time\"\n\nconst AudibleGainDelimiter = ','\n\nfunction AudibleMixin<T extends ClipClass>(Base: T) : AudibleClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n\n    loadedAudible():AudibleSource | undefined {\n      return this.definition.loadedAudible()\n    }\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n        const range = this.timeRange(quantize)\n\n        let start = seconds + range.seconds\n        let duration = range.lengthSeconds\n\n        const now = Cache.audibleContext.currentTime\n        if (now > start) {\n          const dif = now - start\n          start = now\n          duration -= dif\n        }\n        return { start, duration }\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { InstanceClass } from \"../../Instance\"\nimport { ClipClass, ClipObject, ClipDefinition } from \"./Clip\"\n\n\n\nfunction ClipMixin<T extends InstanceClass>(Base: T): ClipClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    declare definition: ClipDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n\n      const frame = Math.max(Math.min(scaledTime.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    loadClip(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.loadDefinition(quantize, startTime, endTime)\n    }\n\n    clipUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.definitionUrls(startTime, endTime)\n    }\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { Any, JsonObject, StartOptions } from \"../../../declarations\"\nimport { Default } from \"../../../Setup/Default\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { AudibleFileClass, AudibleFileDefinition, AudibleFileObject } from \"./AudibleFile\"\n\nimport { Cache } from \"../../../Loading/Cache\"\n\nfunction AudibleFileMixin<T extends AudibleClass>(Base: T): AudibleFileClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { loop, trim } = <AudibleFileObject>object\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n      if (typeof loop !== \"undefined\" && Is.integer(loop)) this.loop = loop\n    }\n\n    declare definition : AudibleFileDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    loop = Default.instance.audio.loop\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n      const range = this.timeRange(quantize)\n\n      let offset = 0\n      let start = seconds + range.seconds\n      let duration = range.lengthSeconds\n\n      if (this.trim) {\n        range.frame = this.trim\n        offset = range.seconds\n      }\n      const now = Cache.audibleContext.currentTime\n      if (now > start) {\n        const dif = now - start\n        start = now\n        offset += dif\n        duration -= dif\n      }\n      return { start, offset, duration }\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize: number): Time { return Time.fromArgs(this.trim, quantize) }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.loop !== Default.instance.audio.loop) object.loop = this.loop\n      return object\n    }\n  }\n}\nexport { AudibleFileMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceBase)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nconst AudioWithAudibleFile = AudibleFileMixin(AudioWithAudible)\nclass AudioClass extends AudioWithAudibleFile {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, ObjectUnknown } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { DefinitionClass } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\nimport { ClipDefinitionClass } from \"./Clip\"\nimport { Time } from \"../../../Utilities/Time\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\nfunction ClipDefinitionMixin<T extends DefinitionClass>(Base: T) : ClipDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // TODO: determine if this is needed!\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    frames(quantize: number): number {\n      return Time.fromSeconds(this.duration, quantize, 'floor').frame\n    }\n\n    streamable = false\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { LoadAudioPromise } from \"../../declarations\"\nimport { LoadType} from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass AudioLoader extends Loader {\n  async requestUrl(url: string): LoadAudioPromise {\n    const promise: LoadAudioPromise = new Promise((resolve, reject) => {\n      this.arrayBufferPromiseFromUrl(url)\n        .then(arrayBuffer => this.audioBufferPromiseFromArrayBuffer(arrayBuffer))\n        .then(resolve)\n        .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Audio\n}\n\nexport { AudioLoader }\n","import { LoadFontPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url: string): LoadFontPromise {\n    const promise : LoadFontPromise = new Promise((resolve, reject) => {\n      console.debug(this.constructor.name, \"requestUrl\", url)\n      const family = Cache.key(url)\n      this.arrayBufferPromiseFromUrl(url)\n        .then(buffer => {\n          const face = new FontFace(family, buffer)\n          return face.load()\n        }).then(face => {\n          document.fonts.add(face)\n          resolve(face)\n        }).catch(reason => reject(reason))\n    })\n    return promise\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadedVideo, LoadVideoPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass VideoLoader extends Loader {\n  requestUrl(url: string): LoadVideoPromise {\n    const promise: LoadVideoPromise = new Promise((resolve, reject) => {\n      return this.videoPromiseFromUrl(url).then(video => {\n        return this.arrayBufferPromiseFromUrl(url).then(arrayBuffer => {\n          return this.audioBufferPromiseFromArrayBuffer(arrayBuffer).then(audioBuffer => {\n            resolve({ video, audio: audioBuffer, sequence: [] })\n          })\n        })\n      })\n      .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Video\n\n  videoPromiseFromUrl(url: string): Promise<LoadedVideo> {\n    return new Promise<LoadedVideo>((resolve, reject) => {\n      const video = this.videoFromUrl(url)\n\n      video.ondurationchange = () => {\n        video.ondurationchange = null\n        video.width = video.videoWidth\n        video.height = video.videoHeight\n        // console.debug(this.constructor.name, \"videoPromiseFromUrl\", 'ondurationchange', video.width, video.height)\n        resolve(video)\n      }\n      video.onerror = reject\n      video.load()\n    })\n  }\n\n  videoFromUrl(url: string): HTMLVideoElement {\n    const video = document.createElement('video')\n    video.crossOrigin = 'anonymous'\n    video.src = url\n    return video\n  }\n}\n\nexport { VideoLoader }\n","import { Loader } from \"./Loader\"\nimport { AudioLoader } from \"../Mash/Audio/AudioLoader\"\nimport { FontLoader } from \"../Mash/Font/FontLoader\"\nimport { ImageLoader } from \"../Mash/Image/ImageLoader\"\nimport { VideoLoader } from \"../Mash/Video/VideoLoader\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Video: VideoLoader,\n}\n\nclass LoaderClass {\n  audio() { return new classes.Audio() }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  video() { return new classes.Video()}\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { Any, JsonObject, LoadPromise, AudibleSource, LoadedAudio } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionClass, AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading/Cache\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../../Utilities/Url\"\n\nfunction AudibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : AudibleDefinitionClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { stream, url, audio, source, waveform } = <AudibleDefinitionObject>object\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (stream) this.stream = true\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n    }\n\n    get absoluteUrl(): string { return urlAbsolute(this.urlAudible) }\n\n    audible = true\n\n    loadDefinition(_quantize: number, _start: Time, end?: Time): LoadPromise | void {\n      if (!end) return\n\n      const url = this.absoluteUrl\n      if (Cache.cached(url)) return\n\n      if (Cache.caching(url)) return Cache.get(url)\n\n      return LoaderFactory.audio().loadUrl(url)\n    }\n\n    definitionUrls() : string[] { return [this.absoluteUrl] }\n\n    loadedAudible(): AudibleSource | undefined {\n\n      const cached: LoadPromise | LoadedAudio | undefined = Cache.get(this.absoluteUrl)\n      if (!cached || cached instanceof Promise) return\n\n      console.debug(this.constructor.name, \"loadedAudible\", cached.constructor.name)\n      return Cache.audibleContext.createBufferSource(cached)\n    }\n\n    loops = false\n\n    source? : string\n\n    stream = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.audio = this.urlAudible\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.absoluteUrl)) return\n\n      Cache.remove(this.absoluteUrl)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, JsonObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleFileDefinitionClass, AudibleFileDefinitionObject } from \"./AudibleFile\"\nimport { Property } from \"../../../Setup/Property\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n\nfunction AudibleFileDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : AudibleFileDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration } = <AudibleFileDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n      if (loops) {\n        this.properties.push(new Property({ name: \"loop\", type: DataType.Integer, value: 1 }))\n        this.loops = true\n      }\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    duration : number\n\n    loops = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      if (this.loops) object.loops = true\n      return object\n    }\n  }\n}\n\nexport { AudibleFileDefinitionMixin }\n","import { Any } from \"../../declarations\"\nimport { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nconst AudioDefinitionWithAudibleFile = AudibleFileDefinitionMixin(AudioDefinitionWithAudible)\nclass AudioDefinitionClass extends AudioDefinitionWithAudibleFile {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MasherFactory } from \"../Masher/Masher\"\nimport { VideoStreamFactory } from \"../VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../VideoSequence/VideoSequence\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Masher]?: MasherFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n  [DefinitionType.VideoSequence]?: VideoSequenceFactory\n  [DefinitionType.VideoStream]?: VideoStreamFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject, Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\n/**\n * @internal\n */\nconst audioInstall = (object: AudioDefinitionObject): AudioDefinition => {\n  const instance = audioDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  install: audioInstall,\n  instance: audioInstance,\n}\n\nFactories[DefinitionType.Audio] = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInstall,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    const evaluated = this.evaluated(evaluator)\n    console.log(this.constructor.name, \"drawFilter\", evaluated)\n    return this.definition.draw(evaluator, evaluated)\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  retain = true\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n\n  // id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      array.push(Pixel.neighboringRgbas(index * 4, pixels, size).map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  // id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  // id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { pixelNeighboringRgbas } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = pixelNeighboringRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  // id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceBase {\n  declare definition : FontDefinition\n}\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\nclass FontDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n    Definitions.install(this)\n  }\n  get absoluteUrl(): string { return urlAbsolute(this.source) }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    return new FontClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.font().loadUrl(url)\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] {\n    return [urlAbsolute(this.source)]\n  }\n\n  loadedVisible() : Any { return Cache.get(urlAbsolute(this.source)) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport fontDefaultJson from \"../../DefinitionObjects/font/default.json\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  install: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories[DefinitionType.Font] = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefine as fontInstall,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { fontDefinitionFromId } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return fontDefinitionFromId(<string> id).absoluteUrl\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n\n  // id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  // id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  // id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  // id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  install: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories[DefinitionType.Filter] = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefine as filterInstall,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionClass, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, JsonObject, ScalarValue, Size } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { DefinitionClass } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\nfunction ModularDefinitionMixin<T extends DefinitionClass>(Base: T) : ModularDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, LoadPromise } from \"../../../declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularClass, ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { InstanceClass } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n\nfunction ModularMixin<T extends InstanceClass>(Base: T) : ModularClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    loadModular(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const promises: LoadPromise[] = []\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        const promise = definition.loadDefinition(quantize, startTime, endTime)\n        if (promise) promises.push(promise)\n      })\n      return Promise.all(promises).then()\n    }\n\n    modularUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.flatMap(definition =>\n        definition.definitionUrls(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceBase)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\n\nimport effectBlurJson from \"../../DefinitionObjects/effect/blur.json\"\nimport effectChromaKeyJson from \"../../DefinitionObjects/effect/chromakey.json\"\nimport effectEmbossJson from \"../../DefinitionObjects/effect/emboss.json\"\nimport effectGrayscaleJson from \"../../DefinitionObjects/effect/grayscale.json\"\nimport effectSepiaJson from \"../../DefinitionObjects/effect/sepia.json\"\nimport effectSharpenJson from \"../../DefinitionObjects/effect/sharpen.json\"\nimport effectTextJson from \"../../DefinitionObjects/effect/text.json\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  install: effectDefine,\n  instance: effectInstance,\n}\n\nFactories[DefinitionType.Effect] = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectDefine as effectInstall,\n  effectInitialize,\n  effectInstance,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Factories } from \"../Mash/Factories/Factories\"\nimport { Errors } from \"../Setup/Errors\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { MashFactory } from \"../Mash/Mash/Mash\"\nimport { MasherFactory } from \"../Mash/Masher/Masher\"\nimport { VideoStreamFactory } from \"../Mash/VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../Mash/VideoSequence/VideoSequence\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\n\n/**\n * Provides access to factory objects that create all other object definitions and instances.\n *\n * @example Create {@link Masher} instance\n * ```ts\n * const masher : Masher = Factory.masher.instance()\n * ```\n * @sealed\n */\nclass Factory {\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  static get context():typeof ContextFactory { return ContextFactory }\n\n  /**\n   * Object with methods to create effect definitions and instances\n   */\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  static get [DefinitionType.Masher]() : MasherFactory {\n    const factory = Factories[DefinitionType.Masher]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Masher\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoSequence]() : VideoSequenceFactory {\n    const factory = Factories[DefinitionType.VideoSequence]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoSequence\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoStream]() : VideoStreamFactory {\n    const factory = Factories[DefinitionType.VideoStream]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoStream\n\n    return factory\n  }\n  private constructor() {}\n}\n\nexport { Factory }\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../../Factory/Factory\"\n\n\nconst MergerWithModular = ModularMixin(InstanceBase)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../../DefinitionObjects/merger/blend.json\"\nimport mergerCenterJson from \"../../DefinitionObjects/merger/center.json\"\nimport mergerConstrainedJson from \"../../DefinitionObjects/merger/constrained.json\"\nimport mergerDefaultJson from \"../../DefinitionObjects/merger/default.json\"\nimport mergerOverlayJson from \"../../DefinitionObjects/merger/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  install: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories[DefinitionType.Merger] = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefine as mergerInstall,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../../Factory\"\n\nconst ScalerWithModular = ModularMixin(InstanceBase)\nclass ScalerClass extends ScalerWithModular {\n  declare definition : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler, ScalerDefinition, ScalerDefinitionObject, ScalerObject\n} from \"../Scaler/Scaler\"\n\nimport scalerDefaultJson from \"../../DefinitionObjects/scaler/default.json\"\nimport scalerPanJson from \"../../DefinitionObjects/scaler/pan.json\"\nimport scalerScaleJson from \"../../DefinitionObjects/scaler/scale.json\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  install: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories[DefinitionType.Scaler] = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefine as scalerInstall,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import {\n  Any, JsonObject, LoadPromise, SelectionObject, Size, ValueObject\n} from \"../../../declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { VisibleClass } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableClass, TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\nfunction TransformableMixin<T extends VisibleClass>(Base: T): TransformableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject>object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions(): Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects: Effect[] = []\n\n    loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        super.loadClip(quantize, start, end),\n        this.loadTransformable(quantize, start, end)\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    loadTransformable(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        this.merger.loadModular(quantize, start, end),\n        this.scaler.loadModular(quantize, start, end),\n        ...this.effects.map(effect => effect.loadModular(quantize, start, end))\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    mergeContextAtTime(mashTime: Time, quantize: number, context: VisibleContext): void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger: Merger\n\n    get propertyValues(): SelectionObject {\n      const merger = <ValueObject>this.merger.propertyValues\n      const scaler = <ValueObject>this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler: Scaler\n\n    toJSON(): JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { VisibleSource, Size } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { VisibleClass, VisibleDefinition } from \"./Visible\"\n\nfunction VisibleMixin<T extends ClipClass>(Base: T) : VisibleClass & T {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      // console.debug(this.constructor.name, \"contextAtTimeToSize\", definitionTime.toString(), mashTime.toString())\n      const image = this.loadedVisible(quantize, definitionTime)\n      if (!image) {\n        console.error(this.constructor.name, \"contextAtTimeToSize not loaded\", this.id)\n        return\n      }\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    declare definition: VisibleDefinition\n\n    loadedVisible(quantize: number, definitionTime:Time):VisibleSource | undefined {\n      return this.definition.loadedVisible(quantize, definitionTime)\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceBase)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { VisibleSource } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { VisibleDefinitionClass } from \"./Visible\"\n\nfunction VisibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : VisibleDefinitionClass & T {\n  return class extends Base {\n    loadedVisible(): VisibleSource | undefined { return }\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\nconst ImageDefinitionWithTransformable = VisibleDefinitionMixin(ImageDefinitionWithVisible)\n\nclass ImageDefinitionClass extends ImageDefinitionWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.urlVisible) }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  loadDefinition(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const definitionPromise = super.loadDefinition(quantize, start, end)\n    if (definitionPromise) promises.push(definitionPromise)\n    const url = this.absoluteUrl\n    if (!Cache.cached(url)) {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    }\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] { return [this.absoluteUrl] }\n\n  loadedVisible(): VisibleSource | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst imageInstall = (object: ImageDefinitionObject): ImageDefinition => {\n  const instance = imageDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  install: imageInstall,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories[DefinitionType.Image] = ImageFactoryImplementation\n\nexport {\n  imageInstall,\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame } from \"../../Utilities\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\n\ninterface TrackOptions {\n  clips? : Clip[]\n  type? : TrackType\n  index? : number\n}\n\nclass TrackClass {\n  constructor(object : TrackOptions) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips)\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject, TrackOptions}\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType, EventType } from \"../../Setup/Enums\"\nimport { pixelColor } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { AudibleSource } from \"../..\"\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudibleSource\n}\n\ninterface CompositionObject {\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    const { backcolor, buffer, gain, quantize } = object\n    if (backcolor) this.backcolor = backcolor\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) {\n      // console.log(this.constructor.name, \"adjustSourceGain no source\", clip.id)\n      return\n    }\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = clip.startOptions(this.startedContextAt - this.startedMashAt, this.quantize)\n    const { start, duration } = timing\n\n    console.log(this.constructor.name, \"adjustSourceGain\", clip.label, timing, this.startedContextAt - this.startedMashAt, this.quantize)\n\n\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n\n  compositeAudible(clips: Audible[]): boolean {\n    // console.log(this.constructor.name, \"compositeAudible\", clips.length)\n    if (!this.createSources(clips)) {\n      // if (clips.length) console.log(this.constructor.name, \"compositeAudible didn't createSources\")\n      return false\n    }\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, Cache.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    })\n    Cache.audibleContext.emit(EventType.Draw)\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n\n  private createSources(clips: Audible[]): boolean {\n    // console.log(\"Composition.createSources\", clips.length)\n\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const sourceNode = clip.loadedAudible()\n      if (!sourceNode) {\n        console.debug(this.constructor.name, \"createSources loadedAudible undefined\", clip.id)\n        return false\n      }\n\n      const timing = clip.startOptions(this.startedContextAt - this.startedMashAt, this.quantize)\n      const { start, duration, offset } = timing\n      console.log(this.constructor.name, \"createSources\", clip.label, timing, this.startedContextAt - this.startedMashAt, this.quantize)\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        sourceNode.loop = clip.definition.loops\n        const gainNode = Cache.audibleContext.createGain()\n        sourceNode.connect(gainNode)\n        gainNode.connect(Cache.audibleContext.destination)\n        sourceNode.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource: sourceNode, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep: Audible[] = []): void {\n    const sourceClips = [...this.sourcesByClip.keys()]\n    const clipsToRemove = sourceClips.filter(clip => !clipsToKeep.includes(clip))\n    clipsToRemove.forEach(clip => {\n      const source = this.sourcesByClip.get(clip)\n      if (!source) return\n\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(Cache.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n    })\n    clipsToRemove.forEach(clip => this.sourcesByClip.delete(clip))\n  }\n\n  private drawBackground() : void {\n    Cache.visibleContext.clear()\n    if (!this.backcolor) return\n\n    Cache.visibleContext.drawFill(pixelColor(this.backcolor))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain === value) return\n\n    this._gain = value\n\n    if (this.playing) {\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n    Cache.audibleContext.emit(EventType.Volume)\n  }\n\n\n  playing = false\n\n  quantize = Default.mash.quantize\n\n  get seconds() : number {\n    const ellapsed = Cache.audibleContext.currentTime - this.startedContextAt\n    return ellapsed + this.startedMashAt\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext(): void {\n    // console.log(this.constructor.name, \"startContext\")\n    if (this.bufferSource) throw Errors.internal + 'bufferSource startContext'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const buffer = Cache.audibleContext.createBuffer(1)\n    this.bufferSource = Cache.audibleContext.createBufferSource(buffer)\n    this.bufferSource.loop = true\n    this.bufferSource.connect(Cache.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource startPlaying'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.startedMashAt = seconds\n\n    this.startedContextAt = Cache.audibleContext.currentTime\n    console.log(this.constructor.name, \"startPlaying startedContextAt\", this.startedContextAt)\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.startedMashAt, this.startedContextAt)\n    return true\n  }\n\n  // position of masher (in seconds) when startPlaying called\n  private startedMashAt = 0\n\n  // currentTime of context (in seconds) was created when startPlaying called\n  private startedContextAt = 0\n\n  stopPlaying(): void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.startedMashAt = 0\n    this.startedContextAt = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(Cache.audibleContext.destination)\n    delete this.bufferSource\n  }\n}\n\nexport { Composition }\n","import { CommandType, DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, InputCommand, InputCommandPromise, Interval, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass, TrackObject, TrackOptions } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Factory } from \"../../Factory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceBase } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { Cache } from \"../../Loading/Cache\"\n\ninterface TimeRangeClips {\n  clips: Clip[]\n  timeRange: TimeRange\n}\nclass MashClass extends InstanceBase implements Mash {\n  constructor(...args: Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      buffer,\n      gain,\n    } = <MashOptions>object\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type + 'Mash.constructor media'\n\n      const definitionType = <DefinitionType>type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return Factory[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Audio))\n    ))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Video))\n    ))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    this.setDrawInterval()\n    // console.debug(this.constructor.name, \"constructor\", this.identifier, this)\n  }\n\n  addClipsToTrack(clips: Clip[], trackIndex = 0, insertIndex = 0, frames? : number[]): void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    this.assureClipsHaveFrames(clips)\n    const [clip] = clips\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      if (frames) clips.forEach((clip, index) => { clip.frame = frames[index] })\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType: TrackType): Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    Cache.audibleContext.emit(EventType.Track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips: Clip[]): void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition>clip.definition\n      clip.frames = definition.frames(this.quantize)\n    })\n  }\n\n  audio: Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor(): string { return this._backcolor }\n\n  set backcolor(value: string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.mash.buffer\n\n  get buffer(): number { return this._buffer }\n\n  set buffer(value: number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames(): number { return this.buffer * this.quantize }\n\n  private bufferStart() {\n    if (this._bufferTimer) return\n\n    this._bufferTimer = setInterval(() => {\n      // console.debug(this.constructor.name, \"bufferTimer calling load\")\n      this.loadPromise\n    }, Math.round((this.buffer * 1000) / 2))\n  }\n\n  private bufferStop() {\n    if (!this._bufferTimer) return\n\n    clearInterval(this._bufferTimer)\n    delete this._bufferTimer\n  }\n\n  private get bufferTime(): Time { return Time.fromSeconds(this.buffer) }\n\n  private _bufferTimer?: Interval\n\n  changeClipFrames(clip: Clip, value: number): void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip: Audible, value: number, frames: number): void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clearDrawInterval():void {\n    if (this.drawInterval) {\n      clearInterval(this.drawInterval)\n      this.drawInterval = undefined\n    }\n  }\n\n  clipIntersects(clip: Clip, range: TimeRange): boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip: Clip): Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip: Clip, index = 0): Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  get clips(): Clip[] { return this.clipsInTracks() }\n\n  private clipsAtTimes(start: Time, end?: Time): Clip[] {\n    const objects: Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  private clipsAudible(start: Time, end?: Time): Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsInTracks(tracks?: Track[]): Clip[] {\n    const clipTracks = tracks || this.tracks\n    return clipTracks.map(track => track.clips).flat()\n  }\n\n  private filterIntersecting(clips: Clip[], timeRange: TimeRange): Clip[] {\n    const range = timeRange.scale(this.quantize)\n    return clips.filter(clip => this.clipIntersects(clip, range))\n\n  }\n  private get clipsAudibleInTracks(): Audible[] {\n    return <Audible[]> this.clipsInTracks().filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange: TimeRange): Audible[] {\n    return <Audible[]> this.filterIntersecting(this.clipsAudibleInTracks, timeRange)\n  }\n\n  private get clipsVideo(): Visible[] { return <Visible[]>this.video.flatMap(track => track.clips) }\n\n  clipsVisible(start: Time, end?: Time): Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time: Time): Visible[] {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  private clipsVisibleInTimeRange(timeRange: TimeRange): Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  private compositeAudible(clips? : Audible[]): boolean {\n    const audibleClips = clips || this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(audibleClips)\n  }\n\n  private compositeAudibleClips(clips: Clip[]): void {\n    if (this._paused) return\n\n    const audibleClips = clips.filter(clip => clip.audible && !clip.muted)\n    if (audibleClips.length) this.compositeAudible(<Audible[]> audibleClips)\n  }\n\n  private _composition?: Composition\n\n  get composition(): Composition {\n    if (!this._composition) {\n      const options = {\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible(): void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest(clips?: Visible[]): void {\n    const { time, composition } = this\n    composition.compositeVisibleRequest(time, clips || this.clipsVisibleAtTime(time))\n  }\n\n  declare definition: MashDefinition\n\n  destroy(): void {\n    this.paused = true\n    this.clearDrawInterval()\n    delete this._composition\n  }\n\n  private drawInterval?: Interval\n\n  private drawTime(time: Time): void {\n    const timeChange = time !== this.time\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n    Cache.audibleContext.emit(timeChange ? EventType.Time : EventType.Loaded)\n  }\n\n  private drawWhileNotPlaying() {\n    const now = performance.now()\n    const ellapsed = now - this.drawnSeconds\n    if (ellapsed < 1.0 / this.quantize) return\n\n    this.drawnSeconds = now\n    const { time } = this\n    const clips = this.clipsVisible(time)\n    const streamableClips = clips.filter(clip => clip.definition.streamable)\n    if (!streamableClips.length) return\n\n    const loading = clips.some(clip => clip.clipUrls(this.quantize, time).some(url =>\n      !Cache.cached(url)\n    ))\n    if (loading) return\n\n    this.compositeVisibleRequest()\n  }\n\n  private drawWhilePlaying() {\n    // what time does the audio context think it is?\n    const { seconds } = this.composition\n\n    // what time would masher consider to be in next frame?\n    const nextFrameTime = this.time.withFrame(this.time.frame + 1)\n\n    // are we beyond the end of mash?\n    if (seconds >= this.endTime.seconds) {\n\n      // should we loop back to beginning?\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else {\n        this.paused = true\n        Cache.audibleContext.emit(EventType.Ended)\n      }\n    } else {\n\n      // are we at or beyond the next frame?\n      if (seconds >= nextFrameTime.seconds) {\n\n        const compositionTime = Time.fromSeconds(seconds, this.time.fps)\n        const difference = compositionTime.frame - this.time.frame\n        if (difference > 1) console.debug(this.constructor.name, \"drawWhilePlaying dropped frames\", difference - 1)\n        // go to where the audio context thinks we are\n        this.drawTime(compositionTime)\n      }\n    }\n  }\n\n  drawnSeconds = 0\n\n  drawnTime?: Time\n\n  get duration(): number { return this.endTime.seconds }\n\n  private emitIfFramesChange(method: () => void): void {\n    const origFrames = this.frames\n    method()\n    const { frames } = this\n    if (origFrames !== frames) {\n      Cache.audibleContext.emit(EventType.Duration)\n      if (this.frame > frames) this.seekToTime(Time.fromArgs(frames, this.quantize))\n    }\n  }\n\n  get endTime(): Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  get frame(): number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames(): number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain(): number { return this._gain }\n\n  set gain(value: number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n  handleAction(action: Action): void {\n    Cache.audibleContext.emit(EventType.Action)\n\n    if (action instanceof ChangeAction) {\n      const changeAction = <ChangeAction>action\n      const { property } = changeAction\n      if (property === \"gain\") {\n        if (this.playing && Is.aboveZero(this.gain)) {\n          this.composition.adjustSourceGain(<Audible>changeAction.target)\n        }\n        return\n      }\n    }\n    this.stopLoadAndDraw()\n  }\n\n  private handleDrawInterval(): void {\n    if (this._playing) this.drawWhilePlaying()\n    else this.drawWhileNotPlaying()\n  }\n\n  private seqmentsAtTimes(type: CommandType, start: Time, end?: Time): TimeRangeClips[] {\n    const fullRangeClips = this.clipsAtTimes(start, end)\n    const startTime = start.scale(this.quantize)\n    if (!end) return [{ clips: fullRangeClips, timeRange: TimeRange.fromTime(startTime) }]\n\n    const result: TimeRangeClips[] = []\n\n    const endTime = end.scale(this.quantize)\n    const fullRange = TimeRange.fromTimes(startTime, endTime)\n    const { times } = fullRange\n    let identifiers = '~'\n    let timeRangeClips: TimeRangeClips\n\n    times.forEach(time => {\n      const timeRange = TimeRange.fromTime(time)\n      const clips = this.filterIntersecting(fullRangeClips, timeRange)\n      const ids = clips.map(clip => clip.identifier).join('~')\n      if (identifiers === ids) {\n        timeRangeClips.timeRange = timeRangeClips.timeRange.addFrames(1)\n      } else {\n        identifiers = ids\n        timeRangeClips = { timeRange, clips }\n        result.push(timeRangeClips)\n      }\n    })\n\n\n    return result\n  }\n\n  private inputCommand(type: CommandType, start: Time, end?: Time): InputCommand {\n    const segments = this.seqmentsAtTimes(type, start, end)\n    return segments.map(({clips, timeRange}) => {\n      const inputCommand: InputCommand = { inputs: []}\n\n      return inputCommand\n    })\n  }\n\n  inputCommandPromise(type: CommandType, start: Time, end?: Time): InputCommandPromise {\n    const promise: InputCommandPromise = new Promise(resolve => {\n      const clips = this.clipsAtTimes(start, end)\n      const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n      const promises = loads.filter(Boolean)\n      if (promises.length) Promise.all(promises).then(() => {\n        resolve(this.inputCommand(type, start, end))\n      })\n      else resolve(this.inputCommand(type, start, end))\n    })\n    return promise\n  }\n  get loadPromise(): LoadPromise | undefined {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const clips = this.clipsAtTimes(start, end)\n    const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n    const promises = loads.filter(Boolean)\n    if (promises.length) return Promise.all(promises).then(() => {\n      this.compositeAudibleClips(clips)\n    })\n\n    this.compositeAudibleClips(clips)\n  }\n\n  get loadUrls(): string[] {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const clips = this.clipsAtTimes(start, end)\n    const urls = clips.flatMap(clip => clip.clipUrls(this.quantize, start, end))\n\n    // console.trace(this.constructor.name, \"loadUrls\", this.identifier, start, end, urls)\n    return urls\n  }\n\n  get loadedDefinitions(): DefinitionTimes {\n    const map = <DefinitionTimes>new Map()\n    const [start, end] = this.startAndEnd\n    this.clipsAtTimes(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  maxTracks(type?: TrackType): number {\n    return type ? this[type].length : this.audio.length + this.video.length\n  }\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks().flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused === forcedValue) return\n\n    this._paused = forcedValue\n    if (forcedValue) {\n      this.playing = false\n      this.bufferStop()\n      if (this._bufferTimer) {\n        clearInterval(this._bufferTimer)\n        delete this._bufferTimer\n      }\n      Cache.audibleContext.emit(EventType.Pause)\n    } else {\n      this.composition.startContext()\n      this.bufferStart()\n      const promise = this.loadPromise\n      if (promise) promise.then(() => { this.playing = true })\n      else this.playing = true\n      // console.log(\"Mash emit\", EventType.Play)\n      Cache.audibleContext.emit(EventType.Play)\n    }\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.trace(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      this._playing = value\n      if (value) {\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n\n          this._playing = false\n          return\n        }\n        Cache.audibleContext.emit(EventType.Playing)\n      } else this.composition.stopPlaying()\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n    Cache.audibleContext.emit(EventType.Track)\n  }\n\n  private restartAfterStop(time:Time, paused:boolean, seeking?: boolean): void {\n     if (time === this.time) { // otherwise we must have gotten a seek call\n        if (seeking) {\n          delete this.seekTime\n          Cache.audibleContext.emit(EventType.Seeked)\n        }\n        this.drawTime(time)\n        if (!paused) {\n          this.composition.startContext()\n          this.playing = true\n        }\n      }\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time): LoadPromise | undefined {\n    // console.debug(this.constructor.name, \"seekToTime\", time)\n    if (this.seekTime !== time) {\n      this.seekTime = time\n      Cache.audibleContext.emit(EventType.Seeking)\n      Cache.audibleContext.emit(EventType.Time)\n    }\n    return this.stopLoadAndDraw(true)\n  }\n\n  setDrawInterval():void {\n    this.clearDrawInterval()\n    this.drawInterval = setInterval(() => { this.handleDrawInterval()}, 500 / this.time.fps)\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  get startAndEnd(): Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  private stopLoadAndDraw(seeking? : boolean) : LoadPromise | undefined {\n    const { time, paused, playing } = this\n\n    if (playing) this.playing = false\n    const promise = this.loadPromise\n    if (promise) return promise.then(() => { this.restartAfterStop(time, paused, seeking) })\n    this.restartAfterStop(time, paused, seeking)\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRange(): TimeRange {\n    return TimeRange.fromTime(this.time, this.endTime.scale(this.time.fps).frame)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n    return this[type][index]\n  }\n\n  private trackOptions(object : TrackObject, index : number, type : TrackType) : TrackOptions {\n    const { clips } = object\n    if (!(clips && Is.populatedArray(clips))) return { type, index }\n\n    const objects = clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: index, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    })\n    this.assureClipsHaveFrames(objects)\n    return { type, index, clips: objects }\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  video : Track[] = []\n}\n\nexport { MashClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.mash.default\"\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst MashDefaultId = \"com.moviemasher.mash.default\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MashDefaultId\n  return <MashDefinition> Definitions.fromId(idString)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {\n  new MashDefinitionClass({ id: MashDefaultId })\n}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\n/**\n * @internal\n */\nconst mashInstall = (object: MashDefinitionObject): MashDefinition => {\n  const instance = mashDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  install: mashInstall,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories[DefinitionType.Mash] = MashFactoryImplementation\n\nexport {\n  mashInstall,\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import {\n  Any,\n  LoadPromise,\n  SelectionValue,\n  ScalarValue,\n  SelectionObject,\n  UnknownObject,\n  ContextData,\n  Size\n} from \"../../declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes\n} from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Is } from \"../../Utilities/Is\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { ActionFactory } from \"../../Editing/Action/ActionFactory\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { Actions } from \"../../Editing/Actions/Actions\"\nimport { Factory } from \"../../Factory/Factory\"\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Effect } from \"../Effect/Effect\"\nimport { EffectClass } from \"../Effect/EffectInstance\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { Mash, MashObject, MashOptions } from \"../Mash/Mash\"\nimport { AudibleFile } from \"../Mixin/AudibleFile/AudibleFile\"\nimport { Clip } from \"../Mixin/Clip/Clip\"\nimport { Transformable } from \"../Mixin/Transformable/Transformable\"\nimport { Video } from \"../Video/Video\"\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject } from \"./Masher\"\nimport { Default } from \"../../Setup/Default\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass MasherClass extends InstanceBase implements Masher {\n  [index : string] : unknown\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      mash,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n    if (mash) this.mash = mash\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n    const action = ActionFactory.createFromObject(clone)\n    this.actions.add(action)\n    this.handleAction(this.actions.redo())\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = Factory.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = Factory[definitionType].definition(object)\n\n    const clip = <Clip> definition.instanceFromObject(object)\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value: number) {\n    const number = Number(value)\n    if (this._buffer !== number) {\n      this._buffer = number\n      this.mash.buffer = number\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  change(property : string, value? : SelectionValue) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) {\n        this.changeEffect(property, value, <Effect> this.selectedEffect)\n      }\n      else this.changeClip(property, value, this.selectedClipOrThrow)\n    } else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selectedClipOrThrow\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selectedEffectOrThrow\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string, value?: SelectionValue) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.internal\n\n    const target = this.mash\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n\n    const undoValue = typeof value === \"undefined\" ? this._pristine[property] : target.value(property)\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue,\n      type: ActionType.Change,\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    // console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selectedClipOrThrow\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    const pristineTarget = this._pristine[transformType]\n    if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = pristineTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  get clip(): Clip | undefined {\n    return Is.populatedObject(this.selectedClip) ? <Clip> this.selectedClip : undefined\n  }\n\n  set clip(value: Clip | undefined) { this.selectedClips = value ? [value] : [] }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  get clips(): Clip[] { return this.mash.clips }\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  // call when player removed from DOM\n  destroy() : void { Factory.masher.destroy(this) }\n\n  get duration() : number { return this.mash.duration }\n\n  get effect(): Effect | undefined {\n    return Is.populatedObject(this.selectedEffect) ? <Effect> this.selectedEffect : undefined\n  }\n\n  set effect(value: Effect | undefined) { this.selectedEffects = value ? [value] : [] }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  get eventTarget(): EventTarget { return Cache.audibleContext.context }\n\n  private filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    //  must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // must be abutting each other on main track\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps || this.mash.quantize }\n\n  set fps(value: number) {\n    const number = Number(value)\n    // setting to zero means fallback to mash rate\n    if (this._fps !== number) {\n      this._fps = number\n      Cache.audibleContext.emit(EventType.Fps)\n      this.time = this.time.scale(this.fps)\n    }\n  }\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(Number(value), this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value?: Time): LoadPromise {\n    const { fps } = this\n    const time = value ? value.scaleToFps(fps) : Time.fromArgs(0, fps)\n    const min = time.min(this.endTime)\n    if (value && min.equalsTime(this.time)) return Promise.resolve()\n\n    const promise = this.mash.seekToTime(min)\n    if (promise) return promise\n\n    return Promise.resolve()\n  }\n\n  private handleAction(action : Action) : void {\n    this.mash.handleAction(action)\n    this.selectedClips = action.selectedClips\n    this.selectedEffects = action.selectedEffects\n  }\n\n  get imageData() : ContextData { return Cache.visibleContext.imageData }\n\n  get imageSize() : Size { return Cache.visibleContext.size }\n\n  set imageSize(value : Size) {\n    const { width, height } = value\n    if (!(Is.aboveZero(width) && Is.aboveZero(height))) throw Errors.invalid.size\n\n    Cache.visibleContext.size = value\n    this.loadMashAndDraw()\n  }\n\n  isSelected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n  private loadMashAndDraw(): LoadPromise {\n    const promise = this.mash.loadPromise\n    if (promise) return promise.then(() => {\n      this.mash.compositeVisible()\n    })\n\n    this.mash.compositeVisible()\n    return Promise.resolve()\n  }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value: boolean) {\n    const boolean = !!value\n    this._loop = boolean\n    if (this._mash) this.mash.loop = boolean\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) {\n      // console.trace(\"get mash\")\n      this._mash = Factory.mash.instance(this.mashOptions())\n    }\n    return this._mash\n  }\n\n  set mash(object: Mash) {\n    if (this._mash === object) return\n    console.log(this.constructor.name, \"mash=\", object.identifier)\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    Cache.audibleContext.emit(EventType.Mash)\n    Cache.audibleContext.emit(EventType.Track)\n    Cache.audibleContext.emit(EventType.Duration)\n    Cache.audibleContext.emit(EventType.Action)\n\n    this.goToTime()\n    if (this.autoplay) this.paused = false\n  }\n\n  private mashOptions(mashObject : MashObject = {}) : MashOptions {\n    return {\n      ...mashObject,\n      buffer: this.buffer,\n      gain: this.gain,\n      loop: this.loop,\n    }\n  }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moveClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value: boolean) {\n    const boolean = !!value\n    if (this._muted !== boolean) {\n      this._muted = boolean\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = !!value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * Number(value), this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  private _pristine? : SelectionObject\n\n  private get pristineOrThrow() {\n    if (!this._pristine) throw Errors.internal\n    return this._pristine\n  }\n\n  private _pristineEffect? : SelectionObject\n\n  private get pristineEffectOrThrow() {\n    if (!this._pristineEffect) throw Errors.internal\n    return this._pristineEffect\n  }\n\n  redo() : void { if (this.actions.canRedo) this.handleAction(this.actions.redo()) }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) {\n      this.removeEffects(<Effect[]> objectOrArray)\n      return\n    }\n\n    this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected? : boolean) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  get selectedClipsOrEffects() : Clip[] | Effect[] {\n    return this.selectedEffects.length ? this.selectedEffects : this.selectedClips\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected? : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected? : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n  get selected(): Clip | Effect | Mash {\n    const effect = this.selectedEffect\n    if (Is.populatedObject(effect)) return <Effect> effect\n\n    return this.selectedClipOrMash\n  }\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        // console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  private selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  private get selectedClipOrThrow() : Clip {\n    const clip = this._selectedClips[0]\n    if (!clip) throw Errors.selection\n\n    return clip\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value: Clip[]) {\n    const newSelectedClips = this.filterClipSelection(value)\n    const newPristine = this.selectedClipOrMash.propertyValues\n\n    const changed = this._selectedClips !== newSelectedClips\n    if (changed) {\n      this._selectedClips = newSelectedClips\n      this._pristine = newPristine\n      if (this.selectedEffects.length) {\n        this.selectedEffects = []\n      } else {\n        Cache.audibleContext.emit(EventType.Selection)\n      }\n    }\n  }\n\n  get selectedEffect() : Effect | UnknownObject {\n    if (this._selectedEffects.length !== 1) return {}\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value: Effect | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const effect = <Effect>value\n      const { type } = effect\n      if (type !== DefinitionType.Effect) return\n\n      this.selectedEffects = [effect]\n    }\n    else this.selectedEffects = []\n  }\n\n  get selectedEffectOrThrow() : Effect {\n    const effect = this.selectedEffect\n    if (!Is.populatedObject(effect)) throw Errors.selection\n    return <Effect> effect\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const newSelectedEffects = []\n    const newPristineEffect = {}\n    if (value.length) {\n      const { effects } = this.selectedClipOrMash\n      if (effects) {\n        const array = <Effect[]>effects\n        // make sure all selected effects are in the effects of the clip or mash\n        newSelectedEffects.push(...value.filter(effect => array.includes(effect)))\n        if (newSelectedEffects.length === 1) {\n          Object.assign(newPristineEffect, newSelectedEffects[0].propertyValues)\n        }\n      }\n    }\n    const changed = this._selectedEffects !== newSelectedEffects\n    if (changed) {\n      this._selectedEffects = newSelectedEffects\n      this._pristineEffect = newPristineEffect\n      Cache.audibleContext.emit(EventType.Selection)\n    }\n  }\n\n  get selectionObjects() : SelectionObject[] {\n    const selectedObjects = this.selectedClipsOrEffects\n    const object = selectedObjects.map((object : ClipOrEffect) => object.propertyValues)\n    return object\n  }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<AudibleFile> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) { this.goToTime(value) }\n\n  get timeRange() : TimeRange { return this.mash.timeRange }\n\n  undo() : void { if (this.actions.canUndo) this.handleAction(this.actions.undo()) }\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value: number) {\n    const number = Number(value)\n    if (this._volume !== number) {\n      if (!Is.positive(number)) throw Errors.invalid.volume\n      this._volume = number\n      if (Is.aboveZero(number)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\nexport { MasherClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Default } from \"../../Setup/Default\"\n\nclass MasherDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"autoplay\", type: DataType.Boolean, value: Default.masher.autoplay }))\n    this.properties.push(new Property({ name: \"precision\", type: DataType.Number, value: Default.masher.precision }))\n    this.properties.push(new Property({ name: \"loop\", type: DataType.Boolean, value: Default.masher.loop }))\n    this.properties.push(new Property({ name: \"fps\", type: DataType.Number, value: Default.masher.fps }))\n    this.properties.push(new Property({ name: \"volume\", type: DataType.Number, value: Default.masher.volume }))\n    this.properties.push(new Property({ name: \"buffer\", type: DataType.Number, value: Default.masher.buffer}))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.masher.default\"\n\n  get instance() : Masher {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MasherObject) : Masher {\n    const instance = new MasherClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Masher\n}\n\nexport { MasherDefinitionClass }\n","import { Masher, MasherDefinition, MasherDefinitionObject, MasherObject } from \"./Masher\"\nimport { Interval } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { MasherDefinitionClass } from \"./MasherDefinition\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst MasherIntervalTics = 10 * 1000\nconst MasherDefaultId = \"com.moviemasher.masher.default\"\n\nlet MasherInterval : Interval | undefined\n\nconst MasherFactoryMashers : Masher[] = []\n\nconst addMasher = (masher : Masher) => {\n  if (!MasherFactoryMashers.length) masherStart()\n  MasherFactoryMashers.push(masher)\n}\n\nconst masherDestroy = (masher : Masher) : void => {\n  const index = MasherFactoryMashers.indexOf(masher)\n  if (index < 0) return\n\n  MasherFactoryMashers.splice(index, 1)\n  if (!MasherFactoryMashers.length) masherStop()\n}\n\nconst handleInterval = () => {\n  const urls = MasherFactoryMashers.flatMap(masher => masher.mash.loadUrls)\n  Cache.flush(urls)\n\n  const definitions = MasherFactoryMashers.flatMap(masher => masher.mash.media)\n\n  Definitions.map.forEach(definition => {\n    if (definitions.includes(definition) || definition.retain) return\n\n    Definitions.uninstall(definition.id)\n  })\n}\n\nconst masherStart = () => {\n  if (MasherInterval) return\n\n  MasherInterval = setInterval(() => handleInterval(), MasherIntervalTics)\n}\n\nconst masherStop = () => {\n  if (!MasherInterval) return\n\n  clearInterval(MasherInterval)\n  MasherInterval = undefined\n}\n\nconst masherDefinition = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MasherDefaultId\n\n  return <MasherDefinition> Definitions.fromId(idString)\n}\n\nconst masherDefinitionFromId = (id : string) : MasherDefinition => {\n  return masherDefinition({ id })\n}\n\nconst masherInstance = (object: MasherObject = {}): Masher => {\n  // console.log(\"masherInstance\", object)\n  const definition = masherDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  addMasher(instance)\n  return instance\n}\n\nconst masherFromId = (id : string) : Masher => {\n  return masherInstance({ id })\n}\n\nconst masherInitialize = () : void => {\n  new MasherDefinitionClass({ id: MasherDefaultId })\n}\n\nconst masherDefine = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'masherDefine'\n\n  Definitions.uninstall(id)\n  return masherDefinition(object)\n}\n\nconst MasherFactoryImplementation = {\n  define: masherDefine,\n  install: masherDefine,\n  definition: masherDefinition,\n  definitionFromId: masherDefinitionFromId,\n  destroy: masherDestroy,\n  fromId: masherFromId,\n  initialize: masherInitialize,\n  instance: masherInstance,\n}\n\nFactories[DefinitionType.Masher] = MasherFactoryImplementation\n\nexport {\n  masherDefine as masherInstall,\n  masherDefine,\n  masherDefinition,\n  masherDefinitionFromId,\n  masherDestroy,\n  MasherFactoryImplementation,\n  masherFromId,\n  masherInitialize,\n  masherInstance,\n}\n","import { Size } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { LoadPromise } from \"../..\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceBase)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n\n  clipUrls(quantize: number, start: Time): string[] {\n    const urls = super.clipUrls(quantize, start) // urls from my effects, etc.\n    urls.push(...this.modularUrls(quantize, start)) // urls from my modular properties\n    return urls\n  }\n\n  declare definition: ThemeDefinition\n\n  loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const transformablePromise = super.loadClip(quantize, start, end) // my effects, etc.\n    if (transformablePromise) promises.push(transformablePromise)\n    const modularPromise = this.loadModular(quantize, start, end) // my modular properties\n    if (modularPromise) promises.push(modularPromise)\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n}\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\n\nimport themeColorJson from \"../../DefinitionObjects/theme/color.json\"\nimport themeTextJson from \"../../DefinitionObjects/theme/text.json\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  install: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories[DefinitionType.Theme] = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefine as themeInstall,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceBase)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport {\n  Transition, TransitionDefinition, TransitionDefinitionObject, TransitionObject\n} from \"./Transition\"\n\nimport transitionCrossfadeJson from \"../../DefinitionObjects/transition/crossfade.json\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  install: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories[DefinitionType.Transition] = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefine as transitionInstall,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoClass, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\n// import { Errors } from \"../../Setup/Errors\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nconst VideoClassImplementation: VideoClass = class extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  // private loadedAudio? : LoadedAudio\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoClassImplementation }\n","import { AudibleSource, VisibleSource, Any, JsonObject, LoadPromise, LoadVideoResult } from \"../../declarations\"\nimport { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VideoClassImplementation } from \"./VideoInstance\"\nimport { Video, VideoDefinitionClass, VideoDefinitionObject, VideoObject } from \"./Video\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\n\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nconst VideoDefinitionClassImplementation: VideoDefinitionClass = class extends WithVisible {\n  constructor(...args: Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, fps, source } = <VideoDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n\n    if (source) this.source = source\n    if (fps) this.fps = fps\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  get cachedOrThrow(): LoadVideoResult {\n    const cached = Cache.get(this.absoluteUrl)\n    if (!cached) throw Errors.internal\n\n    return <LoadVideoResult> cached\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  fps = Default.definition.video.fps\n\n  // private framesArray(start: Time, end?: Time): number[] {\n  //   const frames: number[] = []\n  //   const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n  //   if (end) {\n  //     const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n  //     for (let frame = startFrame; frame <= endFrame; frame += 1) {\n  //       frames.push(frame)\n  //     }\n  //   } else frames.push(startFrame)\n  //   return frames\n  // }\n\n  // private get framesMax(): number { return Math.floor(this.fps * this.duration) - 2 }\n\n  get instance(): Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object: VideoObject): Video {\n    return new VideoClassImplementation({ ...this.instanceObject, ...object })\n  }\n\n  framePromise(time: Time, cached: LoadVideoResult): LoadPromise {\n    const { video, sequence } = cached\n    const sourceOrPromise = sequence[time.frame]\n    if (sourceOrPromise instanceof Promise) return sourceOrPromise\n\n    if (sourceOrPromise) return Promise.resolve()\n\n    // console.debug(this.constructor.name, \"framePromise\", time)\n\n    const promise = this.seekPromise(time, video).then(() => {\n      // make sure we don't already have this frame\n      if (sequence[time.frame] && !(sequence[time.frame] instanceof Promise)) {\n        console.debug(this.constructor.name, \"framePromise already captured\", time.toString())\n        return\n      }\n\n      const context = ContextFactory.toSize(video)\n      context.draw(video)\n      sequence[time.frame] = context.canvas\n      console.debug(this.constructor.name, \"framePromise capturing\", time.toString())\n    })\n    sequence[time.frame] = promise\n    return promise\n  }\n\n  needTimes(cached: LoadVideoResult, start: Time, end?: Time): Time[] {\n    const { sequence } = cached\n    const times = end ? TimeRange.fromTimes(start, end).times : [start]\n    return times.filter(time =>\n      !sequence[time.frame] || sequence[time.frame] instanceof Promise\n    )\n  }\n\n  framesPromise(start: Time, end?: Time): LoadPromise {\n    const cached = this.cachedOrThrow\n    const timesNeeded = this.needTimes(cached, start, end)\n    return this.timesPromise(timesNeeded)\n  }\n\n\n  timesPromise(timesNeeded: Time[]): LoadPromise {\n    if (!timesNeeded.length) return Promise.resolve()\n\n    const cached = this.cachedOrThrow\n    // const promises:LoadPromise[] = timesNeeded.map(time => this.framePromise(time, cached))\n\n\n    // return Promise.all(promises).then(() => {})\n    const time = timesNeeded.shift()\n    if (!time) throw Errors.internal\n\n    const first = this.framePromise(time, cached)\n    let framePromise = first\n\n    timesNeeded.forEach(time => {\n      framePromise = framePromise.then(() => this.framePromise(time, cached))\n    })\n    return framePromise\n  }\n\n  loadDefinition(quantize: number, startTime: Time, endTime?: Time): LoadPromise | void {\n    const rate = this.fps || quantize\n    const start = startTime.scale(rate)\n    const end = endTime ? endTime.scale(rate) : endTime\n\n    // console.trace(start)\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) {\n      const cached = this.cachedOrThrow\n      const times = this.needTimes(cached, start, end)\n      if (!times.length) {\n        // console.debug(this.constructor.name, \"loadDefinition cached and no times needed\")\n        return\n      }\n      console.debug(this.constructor.name, \"loadDefinition cached and returning promises\", times.join(', '))\n      return this.timesPromise(times)\n    }\n\n    const promise: LoadPromise = Cache.caching(url) ? Cache.get(url) : LoaderFactory.video().loadUrl(url)\n    if (Cache.caching(url)) console.debug(this.constructor.name, \"loadDefinition caching and returning framesPromise\", start, end)\n    else console.debug(this.constructor.name, \"loadDefinition uncached and returning framesPromise\", start, end)\n\n    return promise.then(() => this.framesPromise(start, end))\n  }\n\n  loadedAudible(): AudibleSource | undefined {\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) return\n\n    const { audio } = cached\n    return Cache.audibleContext.createBufferSource(audio)\n  }\n\n  loadedVisible(quantize: number, startTime: Time): VisibleSource | undefined {\n    const rate = this.fps || quantize\n    const time = startTime.scale(rate)\n\n    console.debug(this.constructor.name, \"loadedVisible\", time.toString(), startTime.toString())\n\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) {\n      console.debug(this.constructor.name, \"loadedVisible no cached\")\n      return\n    }\n\n    const { sequence } = cached\n    const source = sequence[time.frame]\n    if (!source || source instanceof Promise) {\n      console.debug(this.constructor.name, \"loadedVisible source issue\", source)\n      return\n    }\n\n    return source\n  }\n\n  pattern = '%.jpg'\n\n  private seek(definitionTime: Time, video:HTMLVideoElement): void {\n    if (!video) throw Errors.internal\n\n    video.currentTime = definitionTime.seconds\n  }\n\n  private seekNeeded(definitionTime: Time, video:HTMLVideoElement): boolean {\n    const { currentTime } = video\n    const videoTime = Time.fromSeconds(currentTime, definitionTime.fps)\n    return !videoTime.equalsTime(definitionTime)\n  }\n\n  private seekPromise(definitionTime: Time, video:HTMLVideoElement): LoadPromise {\n    const promise:LoadPromise = new Promise(resolve => {\n      if (!this.seekNeeded(definitionTime, video)) return resolve()\n\n      video.onseeked = () => {\n        video.onseeked = null\n        resolve()\n      }\n      this.seek(definitionTime, video)\n    })\n    return promise\n  }\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  unload(times?: Times[]): void {\n    // const zeroTime = Time.fromArgs(0, this.fps)\n    // const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    // const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    // if (times) {\n    //   times.forEach(maybePair => {\n    //     const [start, end] = maybePair\n    //     const frames = this.framesArray(start, end)\n    //     const urls = frames.map(frame => this.urlForFrame(frame))\n    //     const needed = urls.filter(url => deleting.has(url))\n    //     needed.forEach(url => { deleting.delete(url) })\n    //   })\n    // }\n    // deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  // private urlForFrame(frame : number) : string {\n  //   let s = String((frame * this.increment) + this.begin)\n  //   if (this.padding) s = s.padStart(this.padding, '0')\n  //   return (this.url + this.pattern).replaceAll('%', s)\n  // }\n\n  // private urls(start : Time, end? : Time) : string[] {\n  //   return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  // }\n\n}\n\nexport { VideoDefinitionClassImplementation }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClassImplementation } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClassImplementation(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoInstall = (object: VideoDefinitionObject): VideoDefinition => {\n  const instance = videoDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  install: videoInstall,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories[DefinitionType.Video] = VideoFactoryImplementation\n\nexport {\n  videoInstall,\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { VideoStream, VideoStreamDefinition, VideoStreamObject } from \"./VideoStream\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { StreamableMixin } from \"../Mixin/Streamable/StreamableMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithStreamable = StreamableMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithStreamable)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoStreamClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    // const [object] = args\n    // const { speed } = <VideoStreamObject> object\n  }\n\n  get copy() : VideoStream { return <VideoStream> super.copy }\n\n  declare definition : VideoStreamDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    // if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoStreamClass }\n","import { Any, JsonObject } from \"../../../declarations\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { StreamableClass, StreamableDefinition, StreamableObject } from \"./Streamable\"\n\n\nfunction StreamableMixin<T extends AudibleClass>(Base: T): StreamableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { something } = <StreamableObject>object\n\n      if (something) this.something = something\n    }\n\n    declare definition : StreamableDefinition\n\n\n    something?: string\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.something) object.something = this.something\n      return object\n    }\n  }\n}\nexport { StreamableMixin }\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VideoStreamClass } from \"./VideoStreamInstance\"\nimport { VideoStream, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { StreamableDefinitionMixin } from \"../Mixin/Streamable/StreamableDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithVisible = VisibleDefinitionMixin(WithAudible)\nconst WithStreamable = StreamableDefinitionMixin(WithVisible)\nclass VideoStreamDefinitionClass extends WithStreamable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, source } = <VideoStreamDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n    if (source) this.source = source\n\n    // this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  frames(quantize: number): number {\n    return Time.fromSeconds(Default.definition.videostream.duration, quantize, 'floor').frame\n  }\n\n  get instance() : VideoStream { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoStreamObject) : VideoStream {\n    return new VideoStreamClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.video().loadUrl(url)\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  loadedVisible() : HTMLVideoElement | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoStream\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times?: Times[]): void {\n    if (!times && Cache.cached(this.url)) Cache.remove(this.url)\n  }\n\n  url : string\n}\n\nexport { VideoStreamDefinitionClass }\n","import { Any, JsonObject } from \"../../../declarations\"\nimport { StreamableDefinitionClass, StreamableDefinitionObject } from \"./Streamable\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n// import { DataType } from \"../../../Setup/Enums\"\n// import { Property } from \"../../../Setup/Property\"\n\nfunction StreamableDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : StreamableDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { format } = <StreamableDefinitionObject> object\n      if (format) this.format = format\n\n    //  this.properties.push(new Property({ name: \"something\", type: DataType.String, value: '' }))\n    }\n\n    format = 'hls'\n\n    streamable = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.format = true\n      return object\n    }\n  }\n}\n\nexport { StreamableDefinitionMixin }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoStreamDefinitionClass } from \"../VideoStream/VideoStreamDefinition\"\nimport { VideoStream, VideoStreamDefinition, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\n\nconst videoStreamDefinition = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoStreamDefinition> Definitions.fromId(id)\n\n  return new VideoStreamDefinitionClass(object)\n}\n\nconst videoStreamDefinitionFromId = (id : string) : VideoStreamDefinition => {\n  return videoStreamDefinition({ id })\n}\n\nconst videoStreamInstance = (object : VideoStreamObject) : VideoStream => {\n  const definition = videoStreamDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoStreamFromId = (id : string) : VideoStream => {\n  return videoStreamInstance({ id })\n}\n\nconst videoStreamInitialize = (): void => {}\n\nconst videoStreamDefine = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoStreamDefinition(object)\n}\n\n/**\n * @internal\n */\nconst videoStreamInstall = (object: VideoStreamDefinitionObject): VideoStreamDefinition => {\n  const instance = videoStreamDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoStreamFactoryImplementation = {\n  define: videoStreamDefine,\n  install: videoStreamInstall,\n  definition: videoStreamDefinition,\n  definitionFromId: videoStreamDefinitionFromId,\n  fromId: videoStreamFromId,\n  initialize: videoStreamInitialize,\n  instance: videoStreamInstance,\n}\n\nFactories[DefinitionType.VideoStream] = VideoStreamFactoryImplementation\n\nexport {\n  videoStreamInstall,\n  videoStreamDefine,\n  videoStreamDefinition,\n  videoStreamDefinitionFromId,\n  VideoStreamFactoryImplementation,\n  videoStreamFromId,\n  videoStreamInitialize,\n  videoStreamInstance,\n}\n","import { VideoSequence, VideoSequenceDefinition, VideoSequenceObject } from \"./VideoSequence\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoSequenceClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoSequenceObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : VideoSequence { return <VideoSequence> super.copy }\n\n  declare definition : VideoSequenceDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoSequenceClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VideoSequenceClass } from \"./VideoSequenceInstance\"\nimport { VideoSequence, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nclass VideoSequenceDefinitionClass extends WithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const {\n      padding, url, begin, fps, increment, pattern, source\n    } = <VideoSequenceDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n    if (typeof begin !== \"undefined\") this.begin = begin\n    if (fps) this.fps = fps\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n    if (padding) this.padding = padding\n    else {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.padding = String(lastFrame).length\n    }\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.videosequence.begin\n\n  definitionUrls(start: Time, end?: Time): string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  fps = Default.definition.videosequence.fps\n\n  private framesArray(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.videosequence.increment\n\n  get instance() : VideoSequence { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoSequenceObject) : VideoSequence {\n    return new VideoSequenceClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(quantize:number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const clipDefinitionPromise = end ? super.loadDefinition(quantize, start, end) : null\n    if (clipDefinitionPromise) promises.push(clipDefinitionPromise)\n    const urls = this.definitionUrls(start, end)\n    const uncachedUrls = urls.filter(url => !Cache.cached(url))\n    uncachedUrls.forEach(url => {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  loadedVisible(_quantize: number, time : Time) : VisibleSource | undefined {\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.videosequence.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.videosequence.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.videosequence.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.videosequence.fps) object.fps = this.fps\n    if (this.padding !== Default.definition.videosequence.padding) object.padding = this.padding\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoSequence\n\n  unload(times?: Times[]): void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.framesArray(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  private urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.padding) s = s.padStart(this.padding, '0')\n    return urlAbsolute((this.url + this.pattern).replaceAll('%', s))\n  }\n\n  private urls(start : Time, end? : Time) : string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  padding : number\n}\n\nexport { VideoSequenceDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoSequenceDefinitionClass } from \"../VideoSequence/VideoSequenceDefinition\"\nimport { VideoSequence, VideoSequenceDefinition, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\n\nconst videoSequenceDefinition = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoSequenceDefinition> Definitions.fromId(id)\n\n  return new VideoSequenceDefinitionClass(object)\n}\n\nconst videoSequenceDefinitionFromId = (id : string) : VideoSequenceDefinition => {\n  return videoSequenceDefinition({ id })\n}\n\nconst videoSequenceInstance = (object : VideoSequenceObject) : VideoSequence => {\n  const definition = videoSequenceDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoSequenceFromId = (id : string) : VideoSequence => {\n  return videoSequenceInstance({ id })\n}\n\nconst videoSequenceInitialize = () : void => {}\n\nconst videoSequenceDefine = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoSequenceDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoSequenceInstall = (object: VideoSequenceDefinitionObject): VideoSequenceDefinition => {\n  const instance = videoSequenceDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoSequenceFactoryImplementation = {\n  define: videoSequenceDefine,\n  install: videoSequenceInstall,\n  definition: videoSequenceDefinition,\n  definitionFromId: videoSequenceDefinitionFromId,\n  fromId: videoSequenceFromId,\n  initialize: videoSequenceInitialize,\n  instance: videoSequenceInstance,\n}\n\nFactories[DefinitionType.VideoSequence] = VideoSequenceFactoryImplementation\n\nexport {\n  videoSequenceInstall,\n  videoSequenceDefine,\n  videoSequenceDefinition,\n  videoSequenceDefinitionFromId,\n  VideoSequenceFactoryImplementation,\n  videoSequenceFromId,\n  videoSequenceInitialize,\n  videoSequenceInstance,\n}\n","import { Factory } from \"../Factory\"\nimport { DefinitionTypes } from \"../Setup/Enums\"\n\nDefinitionTypes.forEach(type => { Factory[type].initialize() })\n","\nclass Input {\n\n}\n\nclass Output {\n\n}\n\nclass Job {\n  constructor() {\n\n  }\n\n  inputs : Input[] = []\n  outputs : Output[] = []\n}\n\nexport { Job }\n","\nconst Seconds = (seconds : number, fps : number, duration : number) : string => {\n  let time, pad, do_rest, s = ''\n  if (! duration) duration = seconds\n  time = 60 * 60 // an hour\n  pad = 2\n  if (duration >= time) {\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 60 // a minute\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 1 // a second\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00'\n  } else s += '00'\n  if (fps > 1) {\n    if (fps === 10) pad = 1\n    s += '.'\n    if (seconds) {\n      if (pad === 1) seconds = Math.floor(seconds * 10) / 10\n      else seconds = Math.floor(100 * seconds) / 100\n      seconds = Number(String(seconds).substr(2, 2))\n      s += String(seconds).padStart(pad, '0')\n    } else s += '0'.padStart(pad, '0')\n  }\n  return s\n}\n\nexport { Seconds }\n"],"names":["rgbValue","value","Math","min","max","floor","Number","rgbNumeric","rgb","r","g","b","yuvNumeric","y","u","v","colorYuv2rgb","yuv","floats","colorRgb2hex","toString","length","colorYuvBlend","yuvs","match","blend","diff","blendYuv","forEach","yuvObject","numericYuv","du","dv","sqrt","colorRgb2yuv","ints","colorStrip","color","toLowerCase","replaceAll","colorValid","colorStripped","style","Option","styleStripped","startsWith","colorTransparent","Color","valid","yuvBlend","rgb2yuv","yuv2rgb","rgb2hex","transparent","strip","Default","label","masher","buffer","fps","loop","volume","precision","autoplay","mash","quantize","backcolor","gain","output","size","instance","audio","trim","video","speed","definition","frame","duration","image","theme","transition","videosequence","pattern","increment","begin","padding","videostream","$invalidArgument","$invalidProperty","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","action","actions","internal","argument","invalid","canvas","url","source","id","object","track","trackType","name","type","property","factory","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frames","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","wrongClass","Parameter","[object Object]","this","String","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","isPopulatedString","isPopulatedObject","Object","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","method","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","ActionType","TrackType","ClipType","ClipTypes","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","CommandType","CommandTypes","TypeValue","identifier","DefinitionsMap","Map","DefinitionsByType","definitionsByType","list","definitionsList","set","definitionsClear","clear","definitionsFont","Font","definitionsFromId","definitionsInstalled","console","trace","definitionsInstall","push","has","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","delete","definitions","index","indexOf","splice","Definitions","byType","fromId","install","installed","map","uninstall","Type","modular","JSON","stringify","Boolean","Fontsize","Pixel","Integer","round","Rgb","Rgba","Direction4","Direction8","Mode","find","TypesInstance","entries","entry","key","dataType","includes","propertyTypes","propertyType","dataTypesJson","Property","custom","Types","Capitalize","toUpperCase","substr","ElementScrollProps","elementScrollMetrics","element","getComputedStyle","getPropertyValue","slice","scrollLeft","scrollTop","x","width","height","getBoundingClientRect","fromEntries","Element","scrollMetrics","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","join","Evaluator","context","mergeContext","ceil","setInputSize","conditionals","trueConditional","expression","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","bind","inputSize","Set","a","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","scale","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","t","Id","Date","now","random","roundMethod","rounding","roundWithMethod","func","Round","withMethod","pixelRgbaAtIndex","pixels","pixelSafe","pixel","offsetPoint","pt","pixelToPoint","pixelFromPoint","pixelNeighboringRgbas","data","halfSize","depth","pixelNeighboringPixels","p","pixelToIndex","pixelRgba","pixelColor","pixelPerFrame","zoom","widthFrames","pixelFromFrame","perFrame","pixelToFrame","fromFrame","neighboringRgbas","rgbaAtIndex","toFrame","byFrame","byTrack","byLabel","Sort","timeEqualizeRates","time1","time2","gcf","fps1","fps2","greatestCommonDenominator","Time","copy","description","scaleToTime","subtracted","rounded","fromArgs","TimeRange","super","end","endTime","range1","range2","startTime","scaledTime","scaledRange","range","times","from","_","i","start","TrackRange","first","last","count","relative","trackRange","tracks","fill","idx","withEnd","urlAbsolute","URL","document","baseURI","href","Url","absolute","Action","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","selectedClips","done","selectedEffects","redoAction","undoAction","AddTrackAction","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","undoValueNumeric","setValue","redo","FreezeAction","freezeClip","frozenClip","insertClip","trackClips","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","undo","AudibleContext","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","sourceNode","createBufferSource","createGain","currentTime","Promise","resolve","reject","decodeAudioData","audioData","error","destination","dispatchEvent","CustomEvent","fromSeconds","Point0","VisibleContext","context2d","_context2d","alpha","globalAlpha","getContext","clearSize","clearRect","rect","composite","globalCompositeOperation","globalThis","createElement","dataUrl","toDataURL","drawAtPoint","point","drawImage","drawFillToSize","fillOriginal","fillRect","drawFillInRect","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","drawInRectFromRect","inSize","fromSize","text","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactoryInstance","visible","types","Cache","ContextFactory","audible","cachedByKey","urlsByKey","getObject","retainUrls","retainKeys","Loader","fetch","then","response","arrayBuffer","blob","reader","FileReader","onload","onerror","readAsArrayBuffer","decode","cached","promiseOrCached","promise","requestUrl","add","processed","_url","InstanceBase","args","_id","_label","instanceFromObject","toJSON","scaleToFps","_identifier","propertyNames","properties","propertyValues","coerced","coerce","constructor","DefinitionBase","icon","instanceObject","_quantize","_start","_end","propertiesModular","_times","AudibleMixin","Base","z","gainPairs","loadedAudible","muted","dif","ClipMixin","Video","definitionTime","withFrame","endFrame","loadDefinition","definitionUrls","_trim","AudibleFileMixin","trimTime","space","offset","AudioWithAudibleFile","AudioClass","Audio","ClipPropertyObjects","ClipDefinitionMixin","_duration","AudioLoader","arrayBufferPromiseFromUrl","audioBufferPromiseFromArrayBuffer","catch","FontLoader","debug","FontFace","load","face","fonts","reason","ImageLoader","Image","crossOrigin","src","VideoLoader","videoPromiseFromUrl","audioBuffer","sequence","videoFromUrl","ondurationchange","videoWidth","videoHeight","classes","LoaderFactory","loader","AudibleDefinitionMixin","stream","waveform","urlAudible","absoluteUrl","caching","loadUrl","unload","some","maybePair","AudibleFileDefinitionMixin","loops","AudioDefinitionWithAudibleFile","AudioDefinitionClass","audioObject","Factories","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","audioInstall","retain","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","log","evaluatedValue","evaluate","FilterDefinitionClass","Filter","_evaluator","_evaluated","BlendFilter","modes","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","reverse","matrix","drawImageData","ColorFilter","drawFill","ColorChannelMixerFilter","rgbas","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","options","bias","rdiv","channel","parseInt","parse","input","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","outWidth","outHeight","drawInSizeFromSize","SetSarFilter","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","ModularMixin","constructProperties","modularDefinitions","promises","all","flatMap","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","Effect","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","Factory","static","Mash","Masher","Theme","Transition","VideoSequence","VideoStream","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","every","drawFilters","loadClip","loadTransformable","loadModular","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_time","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionWithTransformable","ImageDefinitionClass","urlVisible","definitionPromise","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","imageInstall","ImageFactoryImplementation","TrackClass","isMainVideo","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","sort","Composition","_gain","sourcesByClip","gainNode","timing","startOptions","startedContextAt","startedMashAt","cancelScheduledValues","pair","linearRampToValueAtTime","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","visibleContext","mainClip","mergeContextAtTime","emit","Draw","requestAnimationFrame","compositeVisible","connect","gainSource","adjustSourceGain","clipsToKeep","clipsToRemove","disconnect","playing","Volume","bufferSource","stopPlaying","stop","MashClass","_backcolor","definitionId","definitionType","trackOptions","setDrawInterval","assureClipsHaveFrames","newTrack","clipTrackAtIndex","oldTrack","clipTrack","emitIfFramesChange","removeClips","Track","_composition","_buffer","bufferFrames","_bufferTimer","setInterval","loadPromise","clearInterval","bufferTime","limitedValue","maxFrames","newFrames","drawInterval","intersects","trackOfTypeAtIndex","clipsInTracks","objects","clipsVisible","clipsAudible","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","flat","clipIntersects","filterIntersecting","clipsVideo","clipsVisibleInTimeRange","fromTime","audibleClips","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","_paused","clipsVisibleAtTime","compositeVisibleRequest","paused","clearDrawInterval","timeChange","drawnTime","Loaded","performance","drawnSeconds","streamable","clipUrls","nextFrameTime","seekToTime","Ended","compositionTime","difference","drawTime","origFrames","Duration","changeAction","stopLoadAndDraw","_playing","drawWhilePlaying","drawWhileNotPlaying","fullRangeClips","clipsAtTimes","fullRange","timeRangeClips","identifiers","ids","addFrames","seqmentsAtTimes","inputs","inputCommand","startAndEnd","compositeAudibleClips","loadUrls","loadedDefinitions","definitionTimes","forcedValue","bufferStop","Pause","startContext","bufferStart","Play","startPlaying","Playing","pop","seeking","seekTime","Seeked","Seeking","handleDrawInterval","stalled","restartAfterStop","clipWithTrack","av","MashDefinitionClass","MashDefaultId","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","mashInstall","MashFactoryImplementation","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","MasherClass","_loop","_fps","_volume","clone","createFromObject","handleAction","_actions","frameOrIndex","addEffect","clipType","addClip","trackCount","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","_selectedClips","clipCanBeSplit","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","pristineOrThrow","selectedEffectOrThrow","pristineEffectOrThrow","_pristine","transformType","transformable","transformTarget","pristineTarget","destroy","eventTarget","firstClip","abutting","Fps","goToTime","equalsTime","imageSize","_mash","mashOptions","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","effectOrArray","_muted","per","toFixed","positionStep","repeat","_pristineEffect","removeEffects","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipsOrEffects","selected","selectedClipOrMash","selectedClipObject","newSelectedClips","newPristine","Selection","newSelectedEffects","newPristineEffect","selectionObjects","MasherDefinitionClass","MasherDefaultId","MasherInterval","MasherFactoryMashers","masherDestroy","masherStop","masherStart","urls","flush","handleInterval","masherDefinition","masherDefinitionFromId","masherInstance","masherFromId","masherInitialize","masherDefine","MasherFactoryImplementation","ThemeWithTransformable","ThemeClass","modularUrls","transformablePromise","modularPromise","ThemeDefinitionWithVisible","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromClip","toClip","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","WithTransformable","VideoClassImplementation","divide","WithVisible","VideoDefinitionClassImplementation","cachedOrThrow","sourceOrPromise","seekPromise","timesNeeded","needTimes","timesPromise","shift","framePromise","rate","framesPromise","seekNeeded","onseeked","seek","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","videoInstall","VideoFactoryImplementation","WithAudible","something","VideoStreamClass","WithStreamable","format","StreamableDefinitionMixin","VideoStreamDefinitionClass","videoStreamDefinition","videoStreamDefinitionFromId","videoStreamInstance","videoStreamFromId","videoStreamInitialize","videoStreamDefine","videoStreamInstall","VideoStreamFactoryImplementation","VideoSequenceClass","VideoSequenceDefinitionClass","framesMax","framesArray","urlForFrame","clipDefinitionPromise","zeroTime","allUrls","deleting","s","padStart","videoSequenceDefinition","videoSequenceDefinitionFromId","videoSequenceInstance","videoSequenceFromId","videoSequenceInitialize","videoSequenceDefine","videoSequenceInstall","VideoSequenceFactoryImplementation","pad","do_rest"],"mappings":"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"}