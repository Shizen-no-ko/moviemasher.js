{"version":3,"file":"moviemasher.min.js","sources":["../src/Utilities/Color.ts","../src/Setup/Default.ts","../src/Setup/Errors.ts","../src/Setup/Parameter.ts","../src/Utilities/Is.ts","../src/Setup/Enums.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Utilities/Capitalize.ts","../src/Utilities/Element.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Id.ts","../src/Utilities/Round.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/TrackRange.ts","../src/Utilities/Url.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Loading/Cache.ts","../src/Loading/Loader.ts","../src/Mash/Instance/Instance.ts","../src/Mash/Definition/Definition.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Mixin/AudibleFile/AudibleFileMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Mash/Audio/AudioLoader.ts","../src/Mash/Font/FontLoader.ts","../src/Mash/Image/ImageLoader.ts","../src/Mash/Video/VideoLoader.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Mixin/AudibleFile/AudibleFileDefinitionMixin.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/Factory/Factory.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Masher/MasherInstance.ts","../src/Mash/Masher/MasherDefinition.ts","../src/Mash/Masher/MasherFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Mash/VideoStream/VideoStreamInstance.ts","../src/Mash/Mixin/Streamable/StreamableMixin.ts","../src/Mash/VideoStream/VideoStreamDefinition.ts","../src/Mash/Mixin/Streamable/StreamableDefinitionMixin.ts","../src/Mash/VideoStream/VideoStreamFactory.ts","../src/Mash/VideoSequence/VideoSequenceInstance.ts","../src/Mash/VideoSequence/VideoSequenceDefinition.ts","../src/Mash/VideoSequence/VideoSequenceFactory.ts","../src/Factories/index.ts","../src/Utilities/Seconds.ts"],"sourcesContent":["import { Rgb, RgbObject, Yuv, YuvObject } from \"../declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst colorYuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst colorRgb2hex = (rgb: RgbObject): string => {\n  // unused after 5.0 refactor, but perhaps needed?\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst colorYuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst colorRgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst colorStrip = (color: string): string => color.toLowerCase().replaceAll(/[\\s]/g, '')\n\n\nconst colorValid = (color: string): boolean => {\n  const colorStripped = colorStrip(color)\n  const style = new Option().style\n  style.color = color\n  const styleStripped = colorStrip(style.color)\n  if (!styleStripped) return false\n\n  if (styleStripped.startsWith('rgb')) return true\n\n  return styleStripped === colorStripped\n}\n\nconst colorTransparent = '#00000000'\n\nconst Color = {\n  valid: colorValid,\n  yuvBlend: colorYuvBlend,\n  rgb2yuv: colorRgb2yuv,\n  yuv2rgb: colorYuv2rgb,\n  rgb2hex: colorRgb2hex,\n  transparent: colorTransparent,\n  strip: colorStrip,\n}\nexport {\n  Color,\n  colorStrip,\n  colorValid,\n  colorRgb2hex,\n  colorYuv2rgb,\n  colorRgb2yuv,\n  colorYuvBlend,\n  colorTransparent,\n}\n","import { colorTransparent } from \"../Utilities/Color\"\n\nconst Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 0,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: colorTransparent,\n    gain: 0.75,\n    buffer: 10,\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0, loop: 1 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { fps: 0 },\n    videosequence: { pattern: '%.jpg', fps: 10, increment: 1, begin: 1, padding: 0 },\n    videostream: { duration: 10 },\n  },\n}\n\nexport { Default }\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    canvas: `${$invalidArgument} canvas `,\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    size: `${$invalid} size `,\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { JsonObject, ScalarValue, ValueObject } from \"../declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { ScalarArray, UnknownObject } from \"../declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n  VideoSequence = 'videosequence',\n  VideoStream = 'videostream',\n  // AudioStream = 'audiostream',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Font = 'font',\n  Mash = 'mash',\n  Masher = 'masher',\n  Theme = 'theme',\n  Transition = 'transition',\n  Image = 'image',\n  Video = 'video',\n  Audio = 'audio',\n  VideoStream = 'videostream',\n  VideoSequence = 'videosequence',\n  // AudioStream = 'audiostream',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Duration = 'durationchange',\n  Draw = 'draw',\n  Ended = 'ended',\n  Fps = 'ratechange',\n  Loaded = 'loadeddata',\n  Mash = 'mashchange',\n  Pause = 'pause',\n  Play = 'play',\n  Playing = 'playing',\n  Seeked = 'seeked',\n  Seeking = 'seeking',\n  Selection = 'selection',\n  Time = 'timeupdate',\n  Track = 'track',\n  Volume = 'volumechange',\n  Waiting = 'waiting',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n  Video = 'video',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","import { ScalarValue } from \"../../declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst DefinitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = (): void => {\n  DefinitionsMap.clear()\n  DefinitionsByType.clear()\n}\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(id)\n    throw Errors.unknown.definition + id\n  }\n\n  const definition = DefinitionsMap.get(id)\n  if (!definition) throw Errors.internal + id\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  DefinitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => DefinitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) return\n\n  const definition = definitionsFromId(id)\n  DefinitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal\n\n  definitions.splice(index, 1)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: DefinitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  DefinitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { ScalarRaw, SelectionValue } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { colorValid } from \"../../Utilities/Color\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { isNan } from \"../../Utilities/Is\"\n\n\n\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  coerce(value: SelectionValue): ScalarRaw | undefined {\n    const string = String(value)\n    const number = Number(value)\n\n    if (this.modular && !Definitions.fromId(string)) return\n\n    switch (this.id) {\n      case DataType.Boolean: return !!value\n      case DataType.Number:\n      case DataType.Fontsize:\n      case DataType.Pixel: {\n        if (isNan(number)) return\n\n        return number\n      }\n      case DataType.Integer: {\n        if (isNan(number)) return\n\n        return Math.round(number)\n      }\n      case DataType.Rgb:\n      case DataType.Rgba: {\n        if (!colorValid(string)) return\n\n        break\n      }\n      case DataType.Direction4:\n      case DataType.Direction8:\n      case DataType.Mode: {\n        if (!this.values?.find(object => { object.id === string })) return\n\n        break\n      }\n    }\n    return string\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarRaw } from \"../../declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) throw Errors.type + 'propertyType ' + type\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarRaw } from \"../declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\nexport { Property, PropertyObject }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { ScrollMetrics } from '../declarations'\n\n\nconst ElementScrollProps = [\n  'scrollPaddingleft',\n  'scrollPaddingRight',\n  'scrollPaddingTop',\n  'scrollPaddingBottom',\n]\nconst elementScrollMetrics = (element?: Element | null): ScrollMetrics | undefined => {\n  if (!element) return\n\n  const style: CSSStyleDeclaration = getComputedStyle(element)\n  const entries = ElementScrollProps.map(key => {\n    const value = style.getPropertyValue(key) || '0px'\n    const number = Number(value.slice(0, -2))\n    return [key, isNaN(number) ? 0 : number]\n  })\n  const { scrollLeft, scrollTop } = element\n  const { x, y, width, height } = element.getBoundingClientRect()\n  entries.push(['scrollLeft', scrollLeft])\n  entries.push(['scrollTop', scrollTop])\n  entries.push(['x', x])\n  entries.push(['y', y])\n  entries.push(['width', width])\n  entries.push(['height', height])\n  return Object.fromEntries(entries)\n}\n\nconst Element = {\n  scrollMetrics: elementScrollMetrics,\n}\n\nexport { Element, elementScrollMetrics }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","const Id = () : string => {\n  return `${Date.now().toString(36)}${Math.random().toString(36).substr(2)}`\n}\n\nexport { Id }\n","import { NumberConverter } from \"../declarations\"\n\nconst roundMethod = (rounding = '') : NumberConverter => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number: number, method = ''): number => {\n  const func = roundMethod(method)\n  return func(number)\n}\n\nconst Round = {\n  method: roundMethod,\n  withMethod: roundWithMethod,\n}\n\nexport { Round, roundMethod, roundWithMethod }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../declarations\"\nimport { roundWithMethod } from \"./Round\"\n\nconst pixelFromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst pixelToPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst pixelToIndex = (pixel : number) => pixel * 4\n\nconst pixelRgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst pixelRgba = (pixel : number, data : Pixels) => pixelRgbaAtIndex(pixelToIndex(pixel), data)\n\nconst pixelSafe = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = pixelToPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return pixelFromPoint(pt, width)\n}\n\nconst pixelNeighboringPixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(pixelSafe(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst pixelNeighboringRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  pixelNeighboringPixels(pixel, size).map(p => pixelRgba(p, data))\n)\n\nconst pixelColor = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nconst pixelPerFrame = (frames: number, width: number, zoom: number): number => {\n  if (!(frames && width)) return 0\n\n  const widthFrames = width / frames\n\n  const min = Math.min(1, widthFrames)\n  const max = Math.max(1, widthFrames)\n  if (zoom === 1) return max\n  if (!zoom) return min\n\n  return min + ((max - min) * zoom)\n}\n\nconst pixelFromFrame = (frame: number, perFrame : number, rounding = 'ceil'): number => {\n  if (!(frame && perFrame)) return 0\n\n  const pixels = frame * perFrame\n  return roundWithMethod(pixels, rounding)\n}\n\nconst pixelToFrame = (pixels: number, perFrame : number, rounding = 'round'): number => {\n  if (!(pixels && perFrame)) return 0\n\n  return roundWithMethod(pixels / perFrame, rounding)\n}\n\nconst Pixel = {\n  color: pixelColor,\n  fromFrame: pixelFromFrame,\n  neighboringRgbas: pixelNeighboringRgbas,\n  perFrame: pixelPerFrame,\n  rgbaAtIndex: pixelRgbaAtIndex,\n  toFrame: pixelToFrame,\n}\n\nexport {\n  Pixel,\n  pixelColor,\n  pixelFromFrame,\n  pixelNeighboringRgbas,\n  pixelPerFrame,\n  pixelRgbaAtIndex,\n  pixelToFrame,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { roundWithMethod } from \"./Round\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst timeEqualizeRates = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = (Number(this.frame) / Number(this.fps)) * Number(fps)\n    // console.debug(this.constructor.name, \"scale\", frame, \"=\", this.frame, \"/\", this.fps, \"*\", fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return timeEqualizeRates(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, timeEqualizeRates }\n","import { Is } from \"./Is\"\nimport { Time, timeEqualizeRates } from \"./Time\"\nimport { roundWithMethod } from \"./Round\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = timeEqualizeRates(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> timeEqualizeRates(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  get times(): Time[] {\n    const { frames, frame, fps } = this\n    return Array.from({ length: frames + 1 }, (_, i) => Time.fromArgs(frame + i, fps))\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> timeEqualizeRates(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { TrackType } from \"../Setup/Enums\"\n\nclass TrackRange {\n  constructor(first = 0, last = -1, type? : TrackType) {\n    this.first = first\n    this.last = last\n    this.type = type\n  }\n\n  get count(): number { return 1 + this.last - this.first }\n\n  last = -1\n\n  get relative(): boolean { return this.last < 0 }\n\n  equals(trackRange: TrackRange): boolean {\n    return this.last === trackRange.last && this.first === trackRange.first\n  }\n\n  first = 0\n\n  get tracks(): number[] {\n    if (this.last < 0) return []\n\n    return Array(this.last - this.first + 1).fill(0).map((_, idx) => this.first + idx)\n  }\n\n  toString(): string { return `[${this.type || 'av'}-${this.first}-${this.last}]` }\n\n  type?: TrackType\n\n  withEnd(last: number): TrackRange {\n    return TrackRange.fromArgs(this.first, last, this.type)\n  }\n\n  withMax(max: number): TrackRange { return this.withEnd(max + this.last) }\n\n  static ofType(type: TrackType, last = -1, first = 0): TrackRange {\n    return this.fromArgs(first, last, type)\n  }\n  static fromArgs(first = 0, last = -1, type?: TrackType): TrackRange {\n    return new TrackRange(first, last, type)\n  }\n}\n\nexport { TrackRange }\n","\nconst urlAbsolute = (url: string): string => (new URL(url, document.baseURI)).href\n\nconst Url = { absolute: urlAbsolute }\n\nexport { Url, urlAbsolute }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Mash | Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Mash | Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target.setValue(this.property, this.redoValue)\n  }\n\n  undoAction() : void {\n    this.target.setValue(this.property, this.undoValue)\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.redoValueNumeric)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.undoValueNumeric)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.redoValueNumeric, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.undoValueNumeric, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number, frames?: number[]) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex, frames)\n  }\n\n  redoAction() : void {\n    this.addClips(this.trackIndex, this.insertIndex, this.redoFrames)\n  }\n\n  undoAction() : void {\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex, this.undoFrames)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\nimport { Is } from \"../../Utilities\";\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  add(action : Action) : void {\n    const remove = this.instances.length - (this.index + 1)\n    if (Is.positive(remove)) this.instances.splice(this.index + 1, remove)\n\n    this.instances.push(action)\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { AudibleSource } from \"../declarations\"\nimport { EventType } from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      this.__context = new Klass()\n    }\n    return this.__context\n  }\n\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource(buffer?: AudioBuffer): AudibleSource {\n    // console.trace(this.constructor.name, \"createBufferSource\")\n    const sourceNode = this.context.createBufferSource()\n    if (buffer) sourceNode.buffer = buffer\n    return sourceNode\n  }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  get currentTime() : number { return this.context.currentTime }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  emit(type: EventType): void { this.context.dispatchEvent(new CustomEvent(type)) }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n}\n","import {\n  Context2D,\n  ContextData,\n  VisibleContextElement,\n  VisibleSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle,\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Action } from \"../Editing/Action/Action\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nclass VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    const { context2d } = object\n    // console.trace(\"VisibleContext\", \"constructor\", context2d)\n    if (context2d) this._context2d = context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : VisibleContextElement { return this.context2d.canvas }\n\n  set canvas(value: VisibleContextElement) {\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.invalid.canvas\n    this.context2d = context2d\n  }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  private get context2d() : Context2D {\n    if (!this._context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this._context2d = context\n    }\n    return this._context2d\n  }\n\n  private set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this._context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : VisibleSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : VisibleSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : VisibleSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : VisibleSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : VisibleSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : VisibleSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : VisibleSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : VisibleSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : VisibleSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : VisibleSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private _context2d? : Context2D\n}\n\ninterface EventsDetail {\n  action? : Action\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { VisibleContext, EventsType, EventsDetail}\n","import { Size, Context2D, VisibleContextElement } from \"../declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromCanvas(canvas : VisibleContextElement) : VisibleContext {\n    const context = this.visible()\n    context.canvas = canvas\n    return context\n  }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","\nimport { Any } from \"../declarations\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  audibleContext = ContextFactory.audible()\n\n  cached(url: string): boolean {\n    const object = this.getObject(url)\n    return object && ! (object instanceof Promise)\n  }\n\n  caching(url: string): boolean {\n    const object = this.getObject(url)\n    return object && object instanceof Promise\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  flush(retainUrls: string[]) {\n    const keys = [...this.urlsByKey.keys()]\n    const retainKeys = retainUrls.map(url => this.key(url))\n    const removeKeys = keys.filter(key => !retainKeys.includes(key))\n    removeKeys.forEach(key => {\n      const url = this.urlsByKey.get(key)\n      if (url) this.remove(url)\n    })\n  }\n\n  get(url : string) : Any {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  getObject(url: string): Any {\n     if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    const key = this.key(url)\n    if (!this.cachedByKey.has(key)) return\n\n     return this.cachedByKey.get(key)\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.trace(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n\n  visibleContext = ContextFactory.visible()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any, LoadPromise } from \"../declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader {\n  arrayBufferPromiseFromUrl(url: string): Promise<ArrayBuffer> {\n    return fetch(url).then(response => response.arrayBuffer())\n  }\n\n  arrayBufferPromiseFromBlob(blob: Blob):Promise<ArrayBuffer> {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => { resolve(<ArrayBuffer> reader.result) }\n      reader.onerror = reject\n      reader.readAsArrayBuffer(blob)\n    })\n  }\n\n  audioBufferPromiseFromArrayBuffer(arrayBuffer: ArrayBuffer): Promise<AudioBuffer> {\n    return Cache.audibleContext.decode(arrayBuffer)\n  }\n\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Id } from \"../../Utilities\"\n\ninterface InstanceObject extends UnknownObject {\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceBase {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceBase'\n\n    const { definition, id, label } = <InstanceObject> object\n    if (!definition) throw Errors.invalid.definition.object + 'InstanceBase'\n\n    this.definition = definition\n    if (id && id !== definition.id) this._id = id\n    if (label && label !== definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  protected _id? : string\n\n  get id() : string { return this._id || this.definition.id }\n\n  private _identifier?: string\n\n  get identifier() : string { return this._identifier ||= Id() }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  setValue(key: string, value: SelectionValue): boolean {\n    const property = this.definition.property(key)\n    if (!property) throw Errors.property + key\n\n    const { type } = property\n    const coerced = type.coerce(value)\n    if (typeof coerced === 'undefined') {\n      console.error(this.constructor.name, \"setValue\", key, value)\n      return false\n    }\n\n    this[key] = coerced\n    return true\n  }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + key\n\n    return <SelectionValue> value\n  }\n}\n\ninterface Instance extends InstanceBase {}\n\ntype InstanceClass = Constrained<InstanceBase>\n\nexport { Instance, InstanceClass, InstanceBase, InstanceObject }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Constrained, JsonObject, LoadPromise, SelectionValue, UnknownObject } from \"../../declarations\"\nimport { Instance, InstanceBase, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionBase {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    this.label = label || id\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceBase({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label : string\n\n  loadDefinition(_quantize: number, _start : Time, _end? : Time) : LoadPromise | void { }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [] }\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label !== this.id) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionBase {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\ntype DefinitionClass = Constrained<DefinitionBase>\n\nexport { Definition, DefinitionClass, DefinitionBase, DefinitionObject, DefinitionTimes }\n","import { Is } from \"../../../Utilities/Is\"\nimport { Any, AudibleSource, JsonObject, StartOptions } from \"../../../declarations\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { AudibleClass, AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup/Default\"\nimport { Cache } from \"../../../Loading/Cache\"\nimport { Time } from \"../../../Utilities/Time\"\n\nconst AudibleGainDelimiter = ','\n\nfunction AudibleMixin<T extends ClipClass>(Base: T) : AudibleClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n\n    loadedAudible():AudibleSource | undefined {\n      return this.definition.loadedAudible()\n    }\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n        const range = this.timeRange(quantize)\n\n        let start = seconds + range.seconds\n        let duration = range.lengthSeconds\n\n        const now = Cache.audibleContext.currentTime\n        if (now > start) {\n          const dif = now - start\n          start = now\n          duration -= dif\n        }\n        return { start, duration }\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, JsonObject, LoadPromise } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { InstanceClass } from \"../../Instance\"\nimport { ClipClass, ClipObject, ClipDefinition } from \"./Clip\"\n\n\n\nfunction ClipMixin<T extends InstanceClass>(Base: T): ClipClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    declare definition: ClipDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n\n      const frame = Math.max(Math.min(scaledTime.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    loadClip(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.loadDefinition(quantize, startTime, endTime)\n    }\n\n    clipUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.definitionUrls(startTime, endTime)\n    }\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { Any, JsonObject, StartOptions } from \"../../../declarations\"\nimport { Default } from \"../../../Setup/Default\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { AudibleFileClass, AudibleFileDefinition, AudibleFileObject } from \"./AudibleFile\"\n\nimport { Cache } from \"../../../Loading/Cache\"\n\nfunction AudibleFileMixin<T extends AudibleClass>(Base: T): AudibleFileClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { loop, trim } = <AudibleFileObject>object\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n      if (typeof loop !== \"undefined\" && Is.integer(loop)) this.loop = loop\n    }\n\n    declare definition : AudibleFileDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    loop = Default.instance.audio.loop\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n      const range = this.timeRange(quantize)\n\n      let offset = 0\n      let start = seconds + range.seconds\n      let duration = range.lengthSeconds\n\n      if (this.trim) {\n        range.frame = this.trim\n        offset = range.seconds\n      }\n      const now = Cache.audibleContext.currentTime\n      if (now > start) {\n        const dif = now - start\n        start = now\n        offset += dif\n        duration -= dif\n      }\n      return { start, offset, duration }\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize: number): Time { return Time.fromArgs(this.trim, quantize) }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.loop !== Default.instance.audio.loop) object.loop = this.loop\n      return object\n    }\n  }\n}\nexport { AudibleFileMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceBase)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nconst AudioWithAudibleFile = AudibleFileMixin(AudioWithAudible)\nclass AudioClass extends AudioWithAudibleFile {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, ObjectUnknown } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { DefinitionClass } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\nimport { ClipDefinitionClass } from \"./Clip\"\nimport { Time } from \"../../../Utilities/Time\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\nfunction ClipDefinitionMixin<T extends DefinitionClass>(Base: T) : ClipDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // TODO: determine if this is needed!\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    frames(quantize: number): number {\n      return Time.fromSeconds(this.duration, quantize, 'floor').frame\n    }\n\n    streamable = false\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { LoadAudioPromise } from \"../../declarations\"\nimport { LoadType} from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass AudioLoader extends Loader {\n  async requestUrl(url: string): LoadAudioPromise {\n    const promise: LoadAudioPromise = new Promise((resolve, reject) => {\n      this.arrayBufferPromiseFromUrl(url)\n        .then(arrayBuffer => this.audioBufferPromiseFromArrayBuffer(arrayBuffer))\n        .then(resolve)\n        .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Audio\n}\n\nexport { AudioLoader }\n","import { LoadFontPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url: string): LoadFontPromise {\n    const promise : LoadFontPromise = new Promise((resolve, reject) => {\n      console.debug(this.constructor.name, \"requestUrl\", url)\n      const family = Cache.key(url)\n      this.arrayBufferPromiseFromUrl(url)\n        .then(buffer => {\n          const face = new FontFace(family, buffer)\n          return face.load()\n        }).then(face => {\n          document.fonts.add(face)\n          resolve(face)\n        }).catch(reason => reject(reason))\n    })\n    return promise\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadedVideo, LoadVideoPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass VideoLoader extends Loader {\n  requestUrl(url: string): LoadVideoPromise {\n    const promise: LoadVideoPromise = new Promise((resolve, reject) => {\n      return this.videoPromiseFromUrl(url).then(video => {\n        return this.arrayBufferPromiseFromUrl(url).then(arrayBuffer => {\n          return this.audioBufferPromiseFromArrayBuffer(arrayBuffer).then(audioBuffer => {\n            resolve({ video, audio: audioBuffer, sequence: [] })\n          })\n        })\n      })\n      .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Video\n\n  videoPromiseFromUrl(url: string): Promise<LoadedVideo> {\n    return new Promise<LoadedVideo>((resolve, reject) => {\n      const video = this.videoFromUrl(url)\n\n      video.ondurationchange = () => {\n        video.ondurationchange = null\n        video.width = video.videoWidth\n        video.height = video.videoHeight\n        // console.debug(this.constructor.name, \"videoPromiseFromUrl\", 'ondurationchange', video.width, video.height)\n        resolve(video)\n      }\n      video.onerror = reject\n      video.load()\n    })\n  }\n\n  videoFromUrl(url: string): HTMLVideoElement {\n    const video = document.createElement('video')\n    video.crossOrigin = 'anonymous'\n    video.src = url\n    return video\n  }\n}\n\nexport { VideoLoader }\n","import { Loader } from \"./Loader\"\nimport { AudioLoader } from \"../Mash/Audio/AudioLoader\"\nimport { FontLoader } from \"../Mash/Font/FontLoader\"\nimport { ImageLoader } from \"../Mash/Image/ImageLoader\"\nimport { VideoLoader } from \"../Mash/Video/VideoLoader\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Video: VideoLoader,\n}\n\nclass LoaderClass {\n  audio() { return new classes.Audio() }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  video() { return new classes.Video()}\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { Any, JsonObject, LoadPromise, AudibleSource, LoadedAudio } from \"../../../declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionClass, AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading/Cache\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../../Utilities/Url\"\n\nfunction AudibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : AudibleDefinitionClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { stream, url, audio, source, waveform } = <AudibleDefinitionObject>object\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (stream) this.stream = true\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n    }\n\n    get absoluteUrl(): string { return urlAbsolute(this.urlAudible) }\n\n    audible = true\n\n    loadDefinition(_quantize: number, _start: Time, end?: Time): LoadPromise | void {\n      if (!end) return\n\n      const url = this.absoluteUrl\n      if (Cache.cached(url)) return\n\n      if (Cache.caching(url)) return Cache.get(url)\n\n      return LoaderFactory.audio().loadUrl(url)\n    }\n\n    definitionUrls() : string[] { return [this.absoluteUrl] }\n\n    loadedAudible(): AudibleSource | undefined {\n\n      const cached: LoadPromise | LoadedAudio | undefined = Cache.get(this.absoluteUrl)\n      if (!cached || cached instanceof Promise) return\n\n      console.debug(this.constructor.name, \"loadedAudible\", cached.constructor.name)\n      return Cache.audibleContext.createBufferSource(cached)\n    }\n\n    loops = false\n\n    source? : string\n\n    stream = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.audio = this.urlAudible\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.absoluteUrl)) return\n\n      Cache.remove(this.absoluteUrl)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, JsonObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleFileDefinitionClass, AudibleFileDefinitionObject } from \"./AudibleFile\"\nimport { Property } from \"../../../Setup/Property\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n\nfunction AudibleFileDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : AudibleFileDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration } = <AudibleFileDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n      if (loops) {\n        this.properties.push(new Property({ name: \"loop\", type: DataType.Integer, value: 1 }))\n        this.loops = true\n      }\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    duration : number\n\n    loops = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      if (this.loops) object.loops = true\n      return object\n    }\n  }\n}\n\nexport { AudibleFileDefinitionMixin }\n","import { Any } from \"../../declarations\"\nimport { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nconst AudioDefinitionWithAudibleFile = AudibleFileDefinitionMixin(AudioDefinitionWithAudible)\nclass AudioDefinitionClass extends AudioDefinitionWithAudibleFile {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MasherFactory } from \"../Masher/Masher\"\nimport { VideoStreamFactory } from \"../VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../VideoSequence/VideoSequence\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Masher]?: MasherFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n  [DefinitionType.VideoSequence]?: VideoSequenceFactory\n  [DefinitionType.VideoStream]?: VideoStreamFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject, Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\n/**\n * @internal\n */\nconst audioInstall = (object: AudioDefinitionObject): AudioDefinition => {\n  const instance = audioDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  install: audioInstall,\n  instance: audioInstance,\n}\n\nFactories[DefinitionType.Audio] = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInstall,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    return this.definition.draw(evaluator, this.evaluated(evaluator))\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  retain = true\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n\n  // id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      array.push(Pixel.neighboringRgbas(index * 4, pixels, size).map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  // id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  // id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { pixelNeighboringRgbas } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = pixelNeighboringRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  // id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceBase {\n  declare definition : FontDefinition\n}\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\nclass FontDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n    Definitions.install(this)\n  }\n  get absoluteUrl(): string { return urlAbsolute(this.source) }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    return new FontClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.font().loadUrl(url)\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] {\n    return [urlAbsolute(this.source)]\n  }\n\n  loadedVisible() : Any { return Cache.get(urlAbsolute(this.source)) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport fontDefaultJson from \"../../DefinitionObjects/font/default.json\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  install: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories[DefinitionType.Font] = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefine as fontInstall,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { fontDefinitionFromId } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return fontDefinitionFromId(<string> id).absoluteUrl\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n\n  // id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  // id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  // id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  // id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  install: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories[DefinitionType.Filter] = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefine as filterInstall,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionClass, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, JsonObject, ScalarValue, Size } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { DefinitionClass } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\nfunction ModularDefinitionMixin<T extends DefinitionClass>(Base: T) : ModularDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, LoadPromise } from \"../../../declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularClass, ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { InstanceClass } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n\nfunction ModularMixin<T extends InstanceClass>(Base: T) : ModularClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    loadModular(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const promises: LoadPromise[] = []\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        const promise = definition.loadDefinition(quantize, startTime, endTime)\n        if (promise) promises.push(promise)\n      })\n      return Promise.all(promises).then()\n    }\n\n    modularUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.flatMap(definition =>\n        definition.definitionUrls(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceBase)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\n\nimport effectBlurJson from \"../../DefinitionObjects/effect/blur.json\"\nimport effectChromaKeyJson from \"../../DefinitionObjects/effect/chromakey.json\"\nimport effectEmbossJson from \"../../DefinitionObjects/effect/emboss.json\"\nimport effectGrayscaleJson from \"../../DefinitionObjects/effect/grayscale.json\"\nimport effectSepiaJson from \"../../DefinitionObjects/effect/sepia.json\"\nimport effectSharpenJson from \"../../DefinitionObjects/effect/sharpen.json\"\nimport effectTextJson from \"../../DefinitionObjects/effect/text.json\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  install: effectDefine,\n  instance: effectInstance,\n}\n\nFactories[DefinitionType.Effect] = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectDefine as effectInstall,\n  effectInitialize,\n  effectInstance,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Factories } from \"../Mash/Factories/Factories\"\nimport { Errors } from \"../Setup/Errors\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { MashFactory } from \"../Mash/Mash/Mash\"\nimport { MasherFactory } from \"../Mash/Masher/Masher\"\nimport { VideoStreamFactory } from \"../Mash/VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../Mash/VideoSequence/VideoSequence\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\n\n/**\n * Provides access to factory objects that create all other object definitions and instances.\n *\n * @example Create {@link Masher} instance\n * ```ts\n * const masher : Masher = Factory.masher.instance()\n * ```\n * @sealed\n */\nclass Factory {\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  static get context():typeof ContextFactory { return ContextFactory }\n\n  /**\n   * Object with methods to create effect definitions and instances\n   */\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  /**\n   * Object with methods to create audio definitions and instances\n   */\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  static get [DefinitionType.Masher]() : MasherFactory {\n    const factory = Factories[DefinitionType.Masher]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Masher\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoSequence]() : VideoSequenceFactory {\n    const factory = Factories[DefinitionType.VideoSequence]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoSequence\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoStream]() : VideoStreamFactory {\n    const factory = Factories[DefinitionType.VideoStream]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoStream\n\n    return factory\n  }\n  private constructor() {}\n}\n\nexport { Factory }\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../../Factory/Factory\"\n\n\nconst MergerWithModular = ModularMixin(InstanceBase)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../../DefinitionObjects/merger/blend.json\"\nimport mergerCenterJson from \"../../DefinitionObjects/merger/center.json\"\nimport mergerConstrainedJson from \"../../DefinitionObjects/merger/constrained.json\"\nimport mergerDefaultJson from \"../../DefinitionObjects/merger/default.json\"\nimport mergerOverlayJson from \"../../DefinitionObjects/merger/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  install: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories[DefinitionType.Merger] = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefine as mergerInstall,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../../Factory\"\n\nconst ScalerWithModular = ModularMixin(InstanceBase)\nclass ScalerClass extends ScalerWithModular {\n  declare definition : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = Factory.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler, ScalerDefinition, ScalerDefinitionObject, ScalerObject\n} from \"../Scaler/Scaler\"\n\nimport scalerDefaultJson from \"../../DefinitionObjects/scaler/default.json\"\nimport scalerPanJson from \"../../DefinitionObjects/scaler/pan.json\"\nimport scalerScaleJson from \"../../DefinitionObjects/scaler/scale.json\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  install: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories[DefinitionType.Scaler] = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefine as scalerInstall,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import {\n  Any, JsonObject, LoadPromise, SelectionObject, Size, ValueObject\n} from \"../../../declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { VisibleClass } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableClass, TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\nfunction TransformableMixin<T extends VisibleClass>(Base: T): TransformableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject>object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions(): Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects: Effect[] = []\n\n    loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        super.loadClip(quantize, start, end),\n        this.loadTransformable(quantize, start, end)\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    loadTransformable(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        this.merger.loadModular(quantize, start, end),\n        this.scaler.loadModular(quantize, start, end),\n        ...this.effects.map(effect => effect.loadModular(quantize, start, end))\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    mergeContextAtTime(mashTime: Time, quantize: number, context: VisibleContext): void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger: Merger\n\n    get propertyValues(): SelectionObject {\n      const merger = <ValueObject>this.merger.propertyValues\n      const scaler = <ValueObject>this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler: Scaler\n\n    toJSON(): JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { VisibleSource, Size } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { VisibleClass, VisibleDefinition } from \"./Visible\"\n\nfunction VisibleMixin<T extends ClipClass>(Base: T) : VisibleClass & T {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      // console.debug(this.constructor.name, \"contextAtTimeToSize\", definitionTime.toString(), mashTime.toString())\n      const image = this.loadedVisible(quantize, definitionTime)\n      if (!image) {\n        console.error(this.constructor.name, \"contextAtTimeToSize not loaded\", this.id)\n        return\n      }\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    declare definition: VisibleDefinition\n\n    loadedVisible(quantize: number, definitionTime:Time):VisibleSource | undefined {\n      return this.definition.loadedVisible(quantize, definitionTime)\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceBase)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { VisibleSource } from \"../../../declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { VisibleDefinitionClass } from \"./Visible\"\n\nfunction VisibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : VisibleDefinitionClass & T {\n  return class extends Base {\n    loadedVisible(): VisibleSource | undefined { return }\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\nconst ImageDefinitionWithTransformable = VisibleDefinitionMixin(ImageDefinitionWithVisible)\n\nclass ImageDefinitionClass extends ImageDefinitionWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.urlVisible) }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  loadDefinition(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const definitionPromise = super.loadDefinition(quantize, start, end)\n    if (definitionPromise) promises.push(definitionPromise)\n    const url = this.absoluteUrl\n    if (!Cache.cached(url)) {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    }\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] { return [this.absoluteUrl] }\n\n  loadedVisible(): VisibleSource | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst imageInstall = (object: ImageDefinitionObject): ImageDefinition => {\n  const instance = imageDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  install: imageInstall,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories[DefinitionType.Image] = ImageFactoryImplementation\n\nexport {\n  imageInstall,\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame } from \"../../Utilities\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\n\ninterface TrackOptions {\n  clips? : Clip[]\n  type? : TrackType\n  index? : number\n}\n\nclass TrackClass {\n  constructor(object : TrackOptions) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips)\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject, TrackOptions}\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType, EventType } from \"../../Setup/Enums\"\nimport { pixelColor } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { AudibleFile } from \"../../Mash/Mixin/AudibleFile/AudibleFile\"\nimport { StartOptions } from \"../../declarations\"\nimport { AudibleSource } from \"../..\"\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudibleSource\n}\n\ninterface CompositionObject {\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    const { backcolor, buffer, gain, quantize } = object\n    if (backcolor) this.backcolor = backcolor\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) {\n      // console.log(this.constructor.name, \"adjustSourceGain no source\", clip.id)\n      return\n    }\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = clip.startOptions(this.startedContextAt - this.startedMashAt, this.quantize)\n    const { start, duration } = timing\n\n    console.log(this.constructor.name, \"adjustSourceGain\", clip.label, timing, this.startedContextAt - this.startedMashAt, this.quantize)\n\n\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n\n  compositeAudible(clips: Audible[]): boolean {\n    // console.log(this.constructor.name, \"compositeAudible\", clips.length)\n    if (!this.createSources(clips)) {\n      // if (clips.length) console.log(this.constructor.name, \"compositeAudible didn't createSources\")\n      return false\n    }\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, Cache.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    })\n    Cache.audibleContext.emit(EventType.Draw)\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n\n  private createSources(clips: Audible[]): boolean {\n    // console.log(\"Composition.createSources\", clips.length)\n\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const sourceNode = clip.loadedAudible()\n      if (!sourceNode) {\n        console.debug(this.constructor.name, \"createSources loadedAudible undefined\", clip.id)\n        return false\n      }\n\n      const timing = clip.startOptions(this.startedContextAt - this.startedMashAt, this.quantize)\n      const { start, duration, offset } = timing\n      console.log(this.constructor.name, \"createSources\", clip.label, timing, this.startedContextAt - this.startedMashAt, this.quantize)\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        sourceNode.loop = clip.definition.loops\n        const gainNode = Cache.audibleContext.createGain()\n        sourceNode.connect(gainNode)\n        gainNode.connect(Cache.audibleContext.destination)\n        sourceNode.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource: sourceNode, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep: Audible[] = []): void {\n    const sourceClips = [...this.sourcesByClip.keys()]\n    const clipsToRemove = sourceClips.filter(clip => !clipsToKeep.includes(clip))\n    clipsToRemove.forEach(clip => {\n      const source = this.sourcesByClip.get(clip)\n      if (!source) return\n\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(Cache.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n    })\n    clipsToRemove.forEach(clip => this.sourcesByClip.delete(clip))\n  }\n\n  private drawBackground() : void {\n    Cache.visibleContext.clear()\n    if (!this.backcolor) return\n\n    Cache.visibleContext.drawFill(pixelColor(this.backcolor))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain === value) return\n\n    this._gain = value\n\n    if (this.playing) {\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n    Cache.audibleContext.emit(EventType.Volume)\n  }\n\n\n  playing = false\n\n  quantize = Default.mash.quantize\n\n  get seconds() : number {\n    const ellapsed = Cache.audibleContext.currentTime - this.startedContextAt\n    return ellapsed + this.startedMashAt\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext(): void {\n    // console.log(this.constructor.name, \"startContext\")\n    if (this.bufferSource) throw Errors.internal + 'bufferSource startContext'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const buffer = Cache.audibleContext.createBuffer(1)\n    this.bufferSource = Cache.audibleContext.createBufferSource(buffer)\n    this.bufferSource.loop = true\n    this.bufferSource.connect(Cache.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource startPlaying'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.startedMashAt = seconds\n\n    this.startedContextAt = Cache.audibleContext.currentTime\n    console.log(this.constructor.name, \"startPlaying startedContextAt\", this.startedContextAt)\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.startedMashAt, this.startedContextAt)\n    return true\n  }\n\n  // position of masher (in seconds) when startPlaying called\n  private startedMashAt = 0\n\n  // currentTime of context (in seconds) was created when startPlaying called\n  private startedContextAt = 0\n\n  stopPlaying(): void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.startedMashAt = 0\n    this.startedContextAt = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(Cache.audibleContext.destination)\n    delete this.bufferSource\n  }\n}\n\nexport { Composition }\n","import { DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Interval, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass, TrackObject, TrackOptions } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Factory } from \"../../Factory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceBase } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass MashClass extends InstanceBase implements Mash {\n  constructor(...args: Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      buffer,\n      gain,\n    } = <MashOptions>object\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type + 'Mash.constructor media'\n\n      const definitionType = <DefinitionType>type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return Factory[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Audio))\n    ))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Video))\n    ))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    this.setDrawInterval()\n    // console.debug(this.constructor.name, \"constructor\", this.identifier, this)\n  }\n\n  addClipsToTrack(clips: Clip[], trackIndex = 0, insertIndex = 0, frames? : number[]): void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    this.assureClipsHaveFrames(clips)\n    const [clip] = clips\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      if (frames) clips.forEach((clip, index) => { clip.frame = frames[index] })\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType: TrackType): Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    Cache.audibleContext.emit(EventType.Track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips: Clip[]): void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition>clip.definition\n      clip.frames = definition.frames(this.quantize)\n    })\n  }\n\n  audio: Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor(): string { return this._backcolor }\n\n  set backcolor(value: string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.mash.buffer\n\n  get buffer(): number { return this._buffer }\n\n  set buffer(value: number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames(): number { return this.buffer * this.quantize }\n\n  private bufferStart() {\n    if (this._bufferTimer) return\n\n    this._bufferTimer = setInterval(() => {\n      // console.debug(this.constructor.name, \"bufferTimer calling load\")\n      this.load()\n    }, Math.round((this.buffer * 1000) / 2))\n  }\n\n  private bufferStop() {\n    if (!this._bufferTimer) return\n\n    clearInterval(this._bufferTimer)\n    delete this._bufferTimer\n  }\n\n  private get bufferTime(): Time { return Time.fromSeconds(this.buffer) }\n\n  private _bufferTimer?: Interval\n\n  changeClipFrames(clip: Clip, value: number): void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip: Audible, value: number, frames: number): void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clearDrawInterval():void {\n    if (this.drawInterval) {\n      clearInterval(this.drawInterval)\n      this.drawInterval = undefined\n    }\n  }\n\n  clipIntersects(clip: Clip, range: TimeRange): boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip: Clip): Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip: Clip, index = 0): Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  get clips(): Clip[] { return this.clipsInTracks() }\n\n  private clipsAtTimes(start: Time, end?: Time): Clip[] {\n    const objects: Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  private clipsAudible(start: Time, end?: Time): Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsInTracks(tracks?: Track[]): Clip[] {\n    const clipTracks = tracks || this.tracks\n    return clipTracks.map(track => track.clips).flat()\n  }\n\n  private filterIntersecting(clips: Clip[], timeRange: TimeRange): Clip[] {\n    const range = timeRange.scale(this.quantize)\n    return clips.filter(clip => this.clipIntersects(clip, range))\n\n  }\n  private get clipsAudibleInTracks(): Audible[] {\n    return <Audible[]> this.clipsInTracks().filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange: TimeRange): Audible[] {\n    return <Audible[]> this.filterIntersecting(this.clipsAudibleInTracks, timeRange)\n  }\n\n  private get clipsVideo(): Visible[] { return <Visible[]>this.video.flatMap(track => track.clips) }\n\n  private clipsVisible(start: Time, end?: Time): Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time: Time): Visible[] {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  clipsVisibleSlice(frame: number, frames: number): Visible[] {\n    const range = TimeRange.fromArgs(frame, this.quantize, frames)\n    return this.clipsVisibleInTimeRange(range)\n  }\n\n  private clipsVisibleInTimeRange(timeRange: TimeRange): Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  private compositeAudible(clips? : Audible[]): boolean {\n    const audibleClips = clips || this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(audibleClips)\n  }\n\n  private _composition?: Composition\n\n  get composition(): Composition {\n    if (!this._composition) {\n      const options = {\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible(): void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest(clips?: Visible[]): void {\n    const { time, composition } = this\n    composition.compositeVisibleRequest(time, clips || this.clipsVisibleAtTime(time))\n  }\n\n  declare definition: MashDefinition\n\n  destroy(): void {\n    this.paused = true\n    this.clearDrawInterval()\n    delete this._composition\n  }\n\n  private drawInterval?: Interval\n\n  private drawTime(time: Time): void {\n    const timeChange = time !== this.time\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n    Cache.audibleContext.emit(timeChange ? EventType.Time : EventType.Loaded)\n  }\n\n  private drawWhileNotPlaying() {\n    const now = performance.now()\n    const ellapsed = now - this.drawnSeconds\n    if (ellapsed < 1.0 / this.quantize) return\n\n    this.drawnSeconds = now\n    const { time } = this\n    const clips = this.clipsVisible(time)\n    const streamableClips = clips.filter(clip => clip.definition.streamable)\n    if (!streamableClips.length) return\n\n    const loading = clips.some(clip => clip.clipUrls(this.quantize, time).some(url =>\n      !Cache.cached(url)\n    ))\n    if (loading) return\n\n    this.compositeVisibleRequest()\n  }\n\n  private drawWhilePlaying() {\n    // what time does the audio context think it is?\n    const { seconds } = this.composition\n\n    // what time would masher consider to be in next frame?\n    const nextFrameTime = this.time.withFrame(this.time.frame + 1)\n\n    // are we beyond the end of mash?\n    if (seconds >= this.endTime.seconds) {\n\n      // should we loop back to beginning?\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else {\n        this.paused = true\n        Cache.audibleContext.emit(EventType.Ended)\n      }\n    } else {\n\n      // are we at or beyond the next frame?\n      if (seconds >= nextFrameTime.seconds) {\n\n        const compositionTime = Time.fromSeconds(seconds, this.time.fps)\n        const difference = compositionTime.frame - this.time.frame\n        if (difference > 1) console.debug(this.constructor.name, \"drawWhilePlaying dropped frames\", difference - 1)\n        // go to where the audio context thinks we are\n        this.drawTime(compositionTime)\n      }\n    }\n  }\n\n  drawnSeconds = 0\n\n  drawnTime?: Time\n\n  get duration(): number { return this.endTime.seconds }\n\n  private emitIfFramesChange(method: () => void): void {\n    const origFrames = this.frames\n    method()\n    const { frames } = this\n    if (origFrames !== frames) {\n      Cache.audibleContext.emit(EventType.Duration)\n      if (this.frame > frames) this.seekToTime(Time.fromArgs(frames, this.quantize))\n    }\n  }\n\n  get endTime(): Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  get frame(): number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames(): number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain(): number { return this._gain }\n\n  set gain(value: number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n  handleAction(action: Action): void {\n    Cache.audibleContext.emit(EventType.Action)\n\n    if (action instanceof ChangeAction) {\n      const changeAction = <ChangeAction>action\n      const { property } = changeAction\n      if (property === \"gain\") {\n        if (this.playing && Is.aboveZero(this.gain)) {\n          this.composition.adjustSourceGain(<Audible>changeAction.target)\n        }\n        return\n      }\n    }\n    this.stopLoadAndDraw()\n  }\n\n  private handleDrawInterval(): void {\n    if (this._playing) this.drawWhilePlaying()\n    else this.drawWhileNotPlaying()\n  }\n\n  load(): LoadPromise {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const clips = this.clipsAtTimes(start, end)\n    const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n    const promises = loads.filter(Boolean)\n    if (!promises.length) promises.push(Promise.resolve())\n\n    return Promise.all(promises).then(() => {\n      if (!this._paused) {\n        const audibleClips = clips.filter(clip => clip.audible && !clip.muted)\n        if (audibleClips.length) this.compositeAudible(<Audible[]> audibleClips)\n      }\n    })\n  }\n\n  get loadUrls(): string[] {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const clips = this.clipsAtTimes(start, end)\n    const urls = clips.flatMap(clip => clip.clipUrls(this.quantize, start, end))\n\n    // console.trace(this.constructor.name, \"loadUrls\", this.identifier, start, end, urls)\n    return urls\n  }\n\n  get loadedDefinitions(): DefinitionTimes {\n    const map = <DefinitionTimes>new Map()\n    const [start, end] = this.startAndEnd\n    this.clipsAtTimes(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  maxTracks(type?: TrackType): number {\n    return type ? this[type].length : this.audio.length + this.video.length\n  }\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks().flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused === forcedValue) return\n\n    this._paused = forcedValue\n    if (forcedValue) {\n      this.playing = false\n      this.bufferStop()\n      if (this._bufferTimer) {\n        clearInterval(this._bufferTimer)\n        delete this._bufferTimer\n      }\n      Cache.audibleContext.emit(EventType.Pause)\n    } else {\n      this.composition.startContext()\n      this.bufferStart()\n\n      this.load().then(() => {\n        console.debug(this.constructor.name, \"paused enabling playing\")\n        this.playing = true\n      })\n      // console.log(\"Mash emit\", EventType.Play)\n      Cache.audibleContext.emit(EventType.Play)\n    }\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.trace(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      this._playing = value\n      if (value) {\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n\n          this._playing = false\n          return\n        }\n        Cache.audibleContext.emit(EventType.Playing)\n      } else this.composition.stopPlaying()\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n    Cache.audibleContext.emit(EventType.Track)\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time): LoadPromise {\n    // console.debug(this.constructor.name, \"seekToTime\", time)\n    if (this.seekTime !== time) {\n      this.seekTime = time\n      Cache.audibleContext.emit(EventType.Seeking)\n      Cache.audibleContext.emit(EventType.Time)\n    }\n    return this.stopLoadAndDraw(true)\n  }\n\n  setDrawInterval():void {\n    this.clearDrawInterval()\n    this.drawInterval = setInterval(() => { this.handleDrawInterval()}, 500 / this.time.fps)\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  get startAndEnd(): Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  private stopLoadAndDraw(seeking? : boolean) : LoadPromise {\n    const { time, paused, playing } = this\n\n    if (playing) this.playing = false\n    return this.load().then(() => {\n      if (time === this.time) { // otherwise we must have gotten a seek call\n        if (seeking) {\n          delete this.seekTime\n          Cache.audibleContext.emit(EventType.Seeked)\n        }\n        this.drawTime(time)\n        if (!paused) {\n          this.composition.startContext()\n          this.playing = true\n        }\n      }\n    })\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRange(): TimeRange {\n    return TimeRange.fromTime(this.time, this.endTime.scale(this.time.fps).frame)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n    return this[type][index]\n  }\n\n  private trackOptions(object : TrackObject, index : number, type : TrackType) : TrackOptions {\n    const { clips } = object\n    if (!(clips && Is.populatedArray(clips))) return { type, index }\n\n    const objects = clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: index, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    })\n    this.assureClipsHaveFrames(objects)\n    return { type, index, clips: objects }\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  video : Track[] = []\n}\n\nexport { MashClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.mash.default\"\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst MashDefaultId = \"com.moviemasher.mash.default\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MashDefaultId\n  return <MashDefinition> Definitions.fromId(idString)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {\n  new MashDefinitionClass({ id: MashDefaultId })\n}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\n/**\n * @internal\n */\nconst mashInstall = (object: MashDefinitionObject): MashDefinition => {\n  const instance = mashDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  install: mashInstall,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories[DefinitionType.Mash] = MashFactoryImplementation\n\nexport {\n  mashInstall,\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import {\n  Any,\n  LoadPromise,\n  SelectionValue,\n  ScalarValue,\n  SelectionObject,\n  UnknownObject,\n  ContextData,\n  Size\n} from \"../../declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes\n} from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Is } from \"../../Utilities/Is\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { Time } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { ActionFactory } from \"../../Editing/Action/ActionFactory\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { Actions } from \"../../Editing/Actions/Actions\"\nimport { Factory } from \"../../Factory/Factory\"\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Effect } from \"../Effect/Effect\"\nimport { EffectClass } from \"../Effect/EffectInstance\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { Mash, MashObject, MashOptions } from \"../Mash/Mash\"\nimport { AudibleFile } from \"../Mixin/AudibleFile/AudibleFile\"\nimport { Clip } from \"../Mixin/Clip/Clip\"\nimport { Transformable } from \"../Mixin/Transformable/Transformable\"\nimport { Video } from \"../Video/Video\"\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject } from \"./Masher\"\nimport { Default } from \"../../Setup/Default\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass MasherClass extends InstanceBase implements Masher {\n  [index : string] : unknown\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      mash,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n    if (mash) this.mash = mash\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n    const action = ActionFactory.createFromObject(clone)\n    this.actions.add(action)\n    this.handleAction(this.actions.redo())\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = Factory.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = Factory[definitionType].definition(object)\n\n    const clip = <Clip> definition.instanceFromObject(object)\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value: number) {\n    const number = Number(value)\n    if (this._buffer !== number) {\n      this._buffer = number\n      this.mash.buffer = number\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  change(property : string, value? : SelectionValue) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) {\n        this.changeEffect(property, value, <Effect> this.selectedEffect)\n      }\n      else this.changeClip(property, value, this.selectedClipOrThrow)\n    } else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selectedClipOrThrow\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selectedEffectOrThrow\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string, value?: SelectionValue) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.internal\n\n    const target = this.mash\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n\n    const undoValue = typeof value === \"undefined\" ? this._pristine[property] : target.value(property)\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue,\n      type: ActionType.Change,\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    // console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selectedClipOrThrow\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    const pristineTarget = this._pristine[transformType]\n    if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = pristineTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  get clip(): Clip | undefined {\n    return Is.populatedObject(this.selectedClip) ? <Clip> this.selectedClip : undefined\n  }\n\n  set clip(value: Clip | undefined) { this.selectedClips = value ? [value] : [] }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  get clips(): Clip[] { return this.mash.clips }\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  // call when player removed from DOM\n  destroy() : void { Factory.masher.destroy(this) }\n\n  draw() : void { this.mash.compositeVisible() }\n\n  get duration() : number { return this.mash.duration }\n\n  get effect(): Effect | undefined {\n    return Is.populatedObject(this.selectedEffect) ? <Effect> this.selectedEffect : undefined\n  }\n\n  set effect(value: Effect | undefined) { this.selectedEffects = value ? [value] : [] }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  get eventTarget(): EventTarget { return Cache.audibleContext.context }\n\n  private filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    //  must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // must be abutting each other on main track\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps || this.mash.quantize }\n\n  set fps(value: number) {\n    const number = Number(value)\n    // setting to zero means fallback to mash rate\n    if (this._fps !== number) {\n      this._fps = number\n      Cache.audibleContext.emit(EventType.Fps)\n      this.time = this.time.scale(this.fps)\n    }\n  }\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(Number(value), this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value?: Time): LoadPromise {\n    const { fps } = this\n    const time = value ? value.scaleToFps(fps) : Time.fromArgs(0, fps)\n    const min = time.min(this.endTime)\n    if (value && min.equalsTime(this.time)) return Promise.resolve()\n\n    return this.mash.seekToTime(min)\n  }\n\n  private handleAction(action : Action) : void {\n    this.mash.handleAction(action)\n    this.selectedClips = action.selectedClips\n    this.selectedEffects = action.selectedEffects\n  }\n\n  get imageData() : ContextData { return Cache.visibleContext.imageData }\n\n  get imageSize() : Size { return Cache.visibleContext.size }\n\n  set imageSize(value : Size) {\n    const { width, height } = value\n    if (!(Is.aboveZero(width) && Is.aboveZero(height))) throw Errors.invalid.size\n\n    Cache.visibleContext.size = value\n    this.loadMashAndDraw().then()\n  }\n\n  isSelected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n  private loadMash() : LoadPromise { return this.mash.load() }\n\n  private loadMashAndDraw() : LoadPromise { return this.loadMash().then(() => { this.draw() }) }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value: boolean) {\n    const boolean = !!value\n    this._loop = boolean\n    if (this._mash) this.mash.loop = boolean\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) {\n      // console.trace(\"get mash\")\n      this._mash = Factory.mash.instance(this.mashOptions())\n    }\n    return this._mash\n  }\n\n  set mash(object: Mash) {\n    if (this._mash === object) return\n    console.log(this.constructor.name, \"mash=\", object.identifier)\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    Cache.audibleContext.emit(EventType.Mash)\n    Cache.audibleContext.emit(EventType.Track)\n    Cache.audibleContext.emit(EventType.Duration)\n    Cache.audibleContext.emit(EventType.Action)\n\n    this.goToTime()\n    if (this.autoplay) this.paused = false\n  }\n\n  private mashOptions(mashObject : MashObject = {}) : MashOptions {\n    return {\n      ...mashObject,\n      buffer: this.buffer,\n      gain: this.gain,\n      loop: this.loop,\n    }\n  }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moveClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value: boolean) {\n    const boolean = !!value\n    if (this._muted !== boolean) {\n      this._muted = boolean\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = !!value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * Number(value), this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  private _pristine? : SelectionObject\n\n  private get pristineOrThrow() {\n    if (!this._pristine) throw Errors.internal\n    return this._pristine\n  }\n\n  private _pristineEffect? : SelectionObject\n\n  private get pristineEffectOrThrow() {\n    if (!this._pristineEffect) throw Errors.internal\n    return this._pristineEffect\n  }\n\n  redo() : void { if (this.actions.canRedo) this.handleAction(this.actions.redo()) }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) {\n      this.removeEffects(<Effect[]> objectOrArray)\n      return\n    }\n\n    this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected? : boolean) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  get selectedClipsOrEffects() : Clip[] | Effect[] {\n    return this.selectedEffects.length ? this.selectedEffects : this.selectedClips\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected? : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected? : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n  get selected(): Clip | Effect | Mash {\n    const effect = this.selectedEffect\n    if (Is.populatedObject(effect)) return <Effect> effect\n\n    return this.selectedClipOrMash\n  }\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        // console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  private selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  private get selectedClipOrThrow() : Clip {\n    const clip = this._selectedClips[0]\n    if (!clip) throw Errors.selection\n\n    return clip\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value: Clip[]) {\n    const newSelectedClips = this.filterClipSelection(value)\n    const newPristine = this.selectedClipOrMash.propertyValues\n\n    const changed = this._selectedClips !== newSelectedClips\n    if (changed) {\n      this._selectedClips = newSelectedClips\n      this._pristine = newPristine\n      if (this.selectedEffects.length) {\n        this.selectedEffects = []\n      } else {\n        Cache.audibleContext.emit(EventType.Selection)\n      }\n    }\n  }\n\n  get selectedEffect() : Effect | UnknownObject {\n    if (this._selectedEffects.length !== 1) return {}\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value: Effect | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const effect = <Effect>value\n      const { type } = effect\n      if (type !== DefinitionType.Effect) return\n\n      this.selectedEffects = [effect]\n    }\n    else this.selectedEffects = []\n  }\n\n  get selectedEffectOrThrow() : Effect {\n    const effect = this.selectedEffect\n    if (!Is.populatedObject(effect)) throw Errors.selection\n    return <Effect> effect\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const newSelectedEffects = []\n    const newPristineEffect = {}\n    if (value.length) {\n      const { effects } = this.selectedClipOrMash\n      if (effects) {\n        const array = <Effect[]>effects\n        // make sure all selected effects are in the effects of the clip or mash\n        newSelectedEffects.push(...value.filter(effect => array.includes(effect)))\n        if (newSelectedEffects.length === 1) {\n          Object.assign(newPristineEffect, newSelectedEffects[0].propertyValues)\n        }\n      }\n    }\n    const changed = this._selectedEffects !== newSelectedEffects\n    if (changed) {\n      this._selectedEffects = newSelectedEffects\n      this._pristineEffect = newPristineEffect\n      Cache.audibleContext.emit(EventType.Selection)\n    }\n  }\n\n  get selectionObjects() : SelectionObject[] {\n    const selectedObjects = this.selectedClipsOrEffects\n    const object = selectedObjects.map((object : ClipOrEffect) => object.propertyValues)\n    return object\n  }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<AudibleFile> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) { this.goToTime(value) }\n\n  get timeRange() : TimeRange { return this.mash.timeRange }\n\n  undo() : void { if (this.actions.canUndo) this.handleAction(this.actions.undo()) }\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value: number) {\n    const number = Number(value)\n    if (this._volume !== number) {\n      if (!Is.positive(number)) throw Errors.invalid.volume\n      this._volume = number\n      if (Is.aboveZero(number)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\nexport { MasherClass }\n","import { DefinitionBase } from \"../Definition/Definition\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\nimport { Any } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Default } from \"../../Setup/Default\"\n\nclass MasherDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"autoplay\", type: DataType.Boolean, value: Default.masher.autoplay }))\n    this.properties.push(new Property({ name: \"precision\", type: DataType.Number, value: Default.masher.precision }))\n    this.properties.push(new Property({ name: \"loop\", type: DataType.Boolean, value: Default.masher.loop }))\n    this.properties.push(new Property({ name: \"fps\", type: DataType.Number, value: Default.masher.fps }))\n    this.properties.push(new Property({ name: \"volume\", type: DataType.Number, value: Default.masher.volume }))\n    this.properties.push(new Property({ name: \"buffer\", type: DataType.Number, value: Default.masher.buffer}))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.masher.default\"\n\n  get instance() : Masher {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MasherObject) : Masher {\n    const instance = new MasherClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Masher\n}\n\nexport { MasherDefinitionClass }\n","import { Masher, MasherDefinition, MasherDefinitionObject, MasherObject } from \"./Masher\"\nimport { Interval } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { MasherDefinitionClass } from \"./MasherDefinition\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nconst MasherIntervalTics = 10 * 1000\nconst MasherDefaultId = \"com.moviemasher.masher.default\"\n\nlet MasherInterval : Interval | undefined\n\nconst MasherFactoryMashers : Masher[] = []\n\nconst addMasher = (masher : Masher) => {\n  if (!MasherFactoryMashers.length) masherStart()\n  MasherFactoryMashers.push(masher)\n}\n\nconst masherDestroy = (masher : Masher) : void => {\n  const index = MasherFactoryMashers.indexOf(masher)\n  if (index < 0) return\n\n  MasherFactoryMashers.splice(index, 1)\n  if (!MasherFactoryMashers.length) masherStop()\n}\n\nconst handleInterval = () => {\n  const urls = MasherFactoryMashers.flatMap(masher => masher.mash.loadUrls)\n  Cache.flush(urls)\n\n  const definitions = MasherFactoryMashers.flatMap(masher => masher.mash.media)\n\n  Definitions.map.forEach(definition => {\n    if (definitions.includes(definition) || definition.retain) return\n\n    Definitions.uninstall(definition.id)\n  })\n}\n\nconst masherStart = () => {\n  if (MasherInterval) return\n\n  MasherInterval = setInterval(() => handleInterval(), MasherIntervalTics)\n}\n\nconst masherStop = () => {\n  if (!MasherInterval) return\n\n  clearInterval(MasherInterval)\n  MasherInterval = undefined\n}\n\nconst masherDefinition = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MasherDefaultId\n\n  return <MasherDefinition> Definitions.fromId(idString)\n}\n\nconst masherDefinitionFromId = (id : string) : MasherDefinition => {\n  return masherDefinition({ id })\n}\n\nconst masherInstance = (object: MasherObject = {}): Masher => {\n  // console.log(\"masherInstance\", object)\n  const definition = masherDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  addMasher(instance)\n  return instance\n}\n\nconst masherFromId = (id : string) : Masher => {\n  return masherInstance({ id })\n}\n\nconst masherInitialize = () : void => {\n  new MasherDefinitionClass({ id: MasherDefaultId })\n}\n\nconst masherDefine = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'masherDefine'\n\n  Definitions.uninstall(id)\n  return masherDefinition(object)\n}\n\nconst MasherFactoryImplementation = {\n  define: masherDefine,\n  install: masherDefine,\n  definition: masherDefinition,\n  definitionFromId: masherDefinitionFromId,\n  destroy: masherDestroy,\n  fromId: masherFromId,\n  initialize: masherInitialize,\n  instance: masherInstance,\n}\n\nFactories[DefinitionType.Masher] = MasherFactoryImplementation\n\nexport {\n  masherDefine as masherInstall,\n  masherDefine,\n  masherDefinition,\n  masherDefinitionFromId,\n  masherDestroy,\n  MasherFactoryImplementation,\n  masherFromId,\n  masherInitialize,\n  masherInstance,\n}\n","import { Size } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { LoadPromise } from \"../..\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceBase)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n\n  clipUrls(quantize: number, start: Time): string[] {\n    const urls = super.clipUrls(quantize, start) // urls from my effects, etc.\n    urls.push(...this.modularUrls(quantize, start)) // urls from my modular properties\n    return urls\n  }\n\n  declare definition: ThemeDefinition\n\n  loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const transformablePromise = super.loadClip(quantize, start, end) // my effects, etc.\n    if (transformablePromise) promises.push(transformablePromise)\n    const modularPromise = this.loadModular(quantize, start, end) // my modular properties\n    if (modularPromise) promises.push(modularPromise)\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n}\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\n\nimport themeColorJson from \"../../DefinitionObjects/theme/color.json\"\nimport themeTextJson from \"../../DefinitionObjects/theme/text.json\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  install: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories[DefinitionType.Theme] = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefine as themeInstall,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceBase)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport {\n  Transition, TransitionDefinition, TransitionDefinitionObject, TransitionObject\n} from \"./Transition\"\n\nimport transitionCrossfadeJson from \"../../DefinitionObjects/transition/crossfade.json\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  install: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories[DefinitionType.Transition] = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefine as transitionInstall,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoClass, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\n// import { Errors } from \"../../Setup/Errors\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nconst VideoClassImplementation: VideoClass = class extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  // private loadedAudio? : LoadedAudio\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoClassImplementation }\n","import { AudibleSource, VisibleSource, Any, JsonObject, LoadPromise, LoadVideoResult } from \"../../declarations\"\nimport { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VideoClassImplementation } from \"./VideoInstance\"\nimport { Video, VideoDefinitionClass, VideoDefinitionObject, VideoObject } from \"./Video\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\n\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nconst VideoDefinitionClassImplementation: VideoDefinitionClass = class extends WithVisible {\n  constructor(...args: Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, fps, source } = <VideoDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n\n    if (source) this.source = source\n    if (fps) this.fps = fps\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  get cachedOrThrow(): LoadVideoResult {\n    const cached = Cache.get(this.absoluteUrl)\n    if (!cached) throw Errors.internal\n\n    return <LoadVideoResult> cached\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  fps = Default.definition.video.fps\n\n  // private framesArray(start: Time, end?: Time): number[] {\n  //   const frames: number[] = []\n  //   const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n  //   if (end) {\n  //     const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n  //     for (let frame = startFrame; frame <= endFrame; frame += 1) {\n  //       frames.push(frame)\n  //     }\n  //   } else frames.push(startFrame)\n  //   return frames\n  // }\n\n  // private get framesMax(): number { return Math.floor(this.fps * this.duration) - 2 }\n\n  get instance(): Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object: VideoObject): Video {\n    return new VideoClassImplementation({ ...this.instanceObject, ...object })\n  }\n\n  framePromise(time: Time, cached: LoadVideoResult): LoadPromise {\n    const { video, sequence } = cached\n    const sourceOrPromise = sequence[time.frame]\n    if (sourceOrPromise instanceof Promise) return sourceOrPromise\n\n    if (sourceOrPromise) return Promise.resolve()\n\n    // console.debug(this.constructor.name, \"framePromise\", time)\n\n    const promise = this.seekPromise(time, video).then(() => {\n      // make sure we don't already have this frame\n      if (sequence[time.frame] && !(sequence[time.frame] instanceof Promise)) {\n        console.debug(this.constructor.name, \"framePromise already captured\", time.toString())\n        return\n      }\n\n      const context = ContextFactory.toSize(video)\n      context.draw(video)\n      sequence[time.frame] = context.canvas\n      console.debug(this.constructor.name, \"framePromise capturing\", time.toString())\n    })\n    sequence[time.frame] = promise\n    return promise\n  }\n\n  needTimes(cached: LoadVideoResult, start: Time, end?: Time): Time[] {\n    const { sequence } = cached\n    const times = end ? TimeRange.fromTimes(start, end).times : [start]\n    return times.filter(time =>\n      !sequence[time.frame] || sequence[time.frame] instanceof Promise\n    )\n  }\n\n  framesPromise(start: Time, end?: Time): LoadPromise {\n    const cached = this.cachedOrThrow\n    const timesNeeded = this.needTimes(cached, start, end)\n    return this.timesPromise(timesNeeded)\n  }\n\n\n  timesPromise(timesNeeded: Time[]): LoadPromise {\n    if (!timesNeeded.length) return Promise.resolve()\n\n    const cached = this.cachedOrThrow\n    // const promises:LoadPromise[] = timesNeeded.map(time => this.framePromise(time, cached))\n\n\n    // return Promise.all(promises).then(() => {})\n    const time = timesNeeded.shift()\n    if (!time) throw Errors.internal\n\n    const first = this.framePromise(time, cached)\n    let framePromise = first\n\n    timesNeeded.forEach(time => {\n      framePromise = framePromise.then(() => this.framePromise(time, cached))\n    })\n    return framePromise\n  }\n\n  loadDefinition(quantize: number, startTime: Time, endTime?: Time): LoadPromise | void {\n    const rate = this.fps || quantize\n    const start = startTime.scale(rate)\n    const end = endTime ? endTime.scale(rate) : endTime\n\n    // console.trace(start)\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) {\n      const cached = this.cachedOrThrow\n      const times = this.needTimes(cached, start, end)\n      if (!times.length) {\n        // console.debug(this.constructor.name, \"loadDefinition cached and no times needed\")\n        return\n      }\n      console.debug(this.constructor.name, \"loadDefinition cached and returning promises\", times.join(', '))\n      return this.timesPromise(times)\n    }\n\n    const promise: LoadPromise = Cache.caching(url) ? Cache.get(url) : LoaderFactory.video().loadUrl(url)\n    if (Cache.caching(url)) console.debug(this.constructor.name, \"loadDefinition caching and returning framesPromise\", start, end)\n    else console.debug(this.constructor.name, \"loadDefinition uncached and returning framesPromise\", start, end)\n\n    return promise.then(() => this.framesPromise(start, end))\n  }\n\n  loadedAudible(): AudibleSource | undefined {\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) return\n\n    const { audio } = cached\n    return Cache.audibleContext.createBufferSource(audio)\n  }\n\n  loadedVisible(quantize: number, startTime: Time): VisibleSource | undefined {\n    const rate = this.fps || quantize\n    const time = startTime.scale(rate)\n\n    console.debug(this.constructor.name, \"loadedVisible\", time.toString(), startTime.toString())\n\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) {\n      console.debug(this.constructor.name, \"loadedVisible no cached\")\n      return\n    }\n\n    const { sequence } = cached\n    const source = sequence[time.frame]\n    if (!source || source instanceof Promise) {\n      console.debug(this.constructor.name, \"loadedVisible source issue\", source)\n      return\n    }\n\n    return source\n  }\n\n  pattern = '%.jpg'\n\n  private seek(definitionTime: Time, video:HTMLVideoElement): void {\n    if (!video) throw Errors.internal\n\n    video.currentTime = definitionTime.seconds\n  }\n\n  private seekNeeded(definitionTime: Time, video:HTMLVideoElement): boolean {\n    const { currentTime } = video\n    const videoTime = Time.fromSeconds(currentTime, definitionTime.fps)\n    return !videoTime.equalsTime(definitionTime)\n  }\n\n  private seekPromise(definitionTime: Time, video:HTMLVideoElement): LoadPromise {\n    const promise:LoadPromise = new Promise(resolve => {\n      if (!this.seekNeeded(definitionTime, video)) return resolve()\n\n      video.onseeked = () => {\n        video.onseeked = null\n        resolve()\n      }\n      this.seek(definitionTime, video)\n    })\n    return promise\n  }\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  unload(times?: Times[]): void {\n    // const zeroTime = Time.fromArgs(0, this.fps)\n    // const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    // const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    // if (times) {\n    //   times.forEach(maybePair => {\n    //     const [start, end] = maybePair\n    //     const frames = this.framesArray(start, end)\n    //     const urls = frames.map(frame => this.urlForFrame(frame))\n    //     const needed = urls.filter(url => deleting.has(url))\n    //     needed.forEach(url => { deleting.delete(url) })\n    //   })\n    // }\n    // deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  // private urlForFrame(frame : number) : string {\n  //   let s = String((frame * this.increment) + this.begin)\n  //   if (this.padding) s = s.padStart(this.padding, '0')\n  //   return (this.url + this.pattern).replaceAll('%', s)\n  // }\n\n  // private urls(start : Time, end? : Time) : string[] {\n  //   return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  // }\n\n}\n\nexport { VideoDefinitionClassImplementation }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClassImplementation } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClassImplementation(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoInstall = (object: VideoDefinitionObject): VideoDefinition => {\n  const instance = videoDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  install: videoInstall,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories[DefinitionType.Video] = VideoFactoryImplementation\n\nexport {\n  videoInstall,\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { VideoStream, VideoStreamDefinition, VideoStreamObject } from \"./VideoStream\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { StreamableMixin } from \"../Mixin/Streamable/StreamableMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithStreamable = StreamableMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithStreamable)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoStreamClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    // const [object] = args\n    // const { speed } = <VideoStreamObject> object\n  }\n\n  get copy() : VideoStream { return <VideoStream> super.copy }\n\n  declare definition : VideoStreamDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    // if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoStreamClass }\n","import { Any, JsonObject } from \"../../../declarations\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { StreamableClass, StreamableDefinition, StreamableObject } from \"./Streamable\"\n\n\nfunction StreamableMixin<T extends AudibleClass>(Base: T): StreamableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { something } = <StreamableObject>object\n\n      if (something) this.something = something\n    }\n\n    declare definition : StreamableDefinition\n\n\n    something?: string\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.something) object.something = this.something\n      return object\n    }\n  }\n}\nexport { StreamableMixin }\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VideoStreamClass } from \"./VideoStreamInstance\"\nimport { VideoStream, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { StreamableDefinitionMixin } from \"../Mixin/Streamable/StreamableDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithVisible = VisibleDefinitionMixin(WithAudible)\nconst WithStreamable = StreamableDefinitionMixin(WithVisible)\nclass VideoStreamDefinitionClass extends WithStreamable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, source } = <VideoStreamDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n    if (source) this.source = source\n\n    // this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  frames(quantize: number): number {\n    return Time.fromSeconds(Default.definition.videostream.duration, quantize, 'floor').frame\n  }\n\n  get instance() : VideoStream { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoStreamObject) : VideoStream {\n    return new VideoStreamClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.video().loadUrl(url)\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  loadedVisible() : HTMLVideoElement | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoStream\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times?: Times[]): void {\n    if (!times && Cache.cached(this.url)) Cache.remove(this.url)\n  }\n\n  url : string\n}\n\nexport { VideoStreamDefinitionClass }\n","import { Any, JsonObject } from \"../../../declarations\"\nimport { StreamableDefinitionClass, StreamableDefinitionObject } from \"./Streamable\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n// import { DataType } from \"../../../Setup/Enums\"\n// import { Property } from \"../../../Setup/Property\"\n\nfunction StreamableDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : StreamableDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { format } = <StreamableDefinitionObject> object\n      if (format) this.format = format\n\n    //  this.properties.push(new Property({ name: \"something\", type: DataType.String, value: '' }))\n    }\n\n    format = 'hls'\n\n    streamable = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.format = true\n      return object\n    }\n  }\n}\n\nexport { StreamableDefinitionMixin }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoStreamDefinitionClass } from \"../VideoStream/VideoStreamDefinition\"\nimport { VideoStream, VideoStreamDefinition, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\n\nconst videoStreamDefinition = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoStreamDefinition> Definitions.fromId(id)\n\n  return new VideoStreamDefinitionClass(object)\n}\n\nconst videoStreamDefinitionFromId = (id : string) : VideoStreamDefinition => {\n  return videoStreamDefinition({ id })\n}\n\nconst videoStreamInstance = (object : VideoStreamObject) : VideoStream => {\n  const definition = videoStreamDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoStreamFromId = (id : string) : VideoStream => {\n  return videoStreamInstance({ id })\n}\n\nconst videoStreamInitialize = (): void => {}\n\nconst videoStreamDefine = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoStreamDefinition(object)\n}\n\n/**\n * @internal\n */\nconst videoStreamInstall = (object: VideoStreamDefinitionObject): VideoStreamDefinition => {\n  const instance = videoStreamDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoStreamFactoryImplementation = {\n  define: videoStreamDefine,\n  install: videoStreamInstall,\n  definition: videoStreamDefinition,\n  definitionFromId: videoStreamDefinitionFromId,\n  fromId: videoStreamFromId,\n  initialize: videoStreamInitialize,\n  instance: videoStreamInstance,\n}\n\nFactories[DefinitionType.VideoStream] = VideoStreamFactoryImplementation\n\nexport {\n  videoStreamInstall,\n  videoStreamDefine,\n  videoStreamDefinition,\n  videoStreamDefinitionFromId,\n  VideoStreamFactoryImplementation,\n  videoStreamFromId,\n  videoStreamInitialize,\n  videoStreamInstance,\n}\n","import { VideoSequence, VideoSequenceDefinition, VideoSequenceObject } from \"./VideoSequence\"\nimport { InstanceBase } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoSequenceClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoSequenceObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : VideoSequence { return <VideoSequence> super.copy }\n\n  declare definition : VideoSequenceDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoSequenceClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../Definition/Definition\"\nimport { VideoSequenceClass } from \"./VideoSequenceInstance\"\nimport { VideoSequence, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { AudibleFileDefinitionMixin } from \"../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nclass VideoSequenceDefinitionClass extends WithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const {\n      padding, url, begin, fps, increment, pattern, source\n    } = <VideoSequenceDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n    if (typeof begin !== \"undefined\") this.begin = begin\n    if (fps) this.fps = fps\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n    if (padding) this.padding = padding\n    else {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.padding = String(lastFrame).length\n    }\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.videosequence.begin\n\n  definitionUrls(start: Time, end?: Time): string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  fps = Default.definition.videosequence.fps\n\n  private framesArray(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.videosequence.increment\n\n  get instance() : VideoSequence { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoSequenceObject) : VideoSequence {\n    return new VideoSequenceClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(quantize:number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const clipDefinitionPromise = end ? super.loadDefinition(quantize, start, end) : null\n    if (clipDefinitionPromise) promises.push(clipDefinitionPromise)\n    const urls = this.definitionUrls(start, end)\n    const uncachedUrls = urls.filter(url => !Cache.cached(url))\n    uncachedUrls.forEach(url => {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  loadedVisible(_quantize: number, time : Time) : VisibleSource | undefined {\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.videosequence.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.videosequence.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.videosequence.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.videosequence.fps) object.fps = this.fps\n    if (this.padding !== Default.definition.videosequence.padding) object.padding = this.padding\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoSequence\n\n  unload(times?: Times[]): void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.framesArray(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  private urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.padding) s = s.padStart(this.padding, '0')\n    return urlAbsolute((this.url + this.pattern).replaceAll('%', s))\n  }\n\n  private urls(start : Time, end? : Time) : string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  padding : number\n}\n\nexport { VideoSequenceDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoSequenceDefinitionClass } from \"../VideoSequence/VideoSequenceDefinition\"\nimport { VideoSequence, VideoSequenceDefinition, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\n\nconst videoSequenceDefinition = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoSequenceDefinition> Definitions.fromId(id)\n\n  return new VideoSequenceDefinitionClass(object)\n}\n\nconst videoSequenceDefinitionFromId = (id : string) : VideoSequenceDefinition => {\n  return videoSequenceDefinition({ id })\n}\n\nconst videoSequenceInstance = (object : VideoSequenceObject) : VideoSequence => {\n  const definition = videoSequenceDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoSequenceFromId = (id : string) : VideoSequence => {\n  return videoSequenceInstance({ id })\n}\n\nconst videoSequenceInitialize = () : void => {}\n\nconst videoSequenceDefine = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoSequenceDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoSequenceInstall = (object: VideoSequenceDefinitionObject): VideoSequenceDefinition => {\n  const instance = videoSequenceDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoSequenceFactoryImplementation = {\n  define: videoSequenceDefine,\n  install: videoSequenceInstall,\n  definition: videoSequenceDefinition,\n  definitionFromId: videoSequenceDefinitionFromId,\n  fromId: videoSequenceFromId,\n  initialize: videoSequenceInitialize,\n  instance: videoSequenceInstance,\n}\n\nFactories[DefinitionType.VideoSequence] = VideoSequenceFactoryImplementation\n\nexport {\n  videoSequenceInstall,\n  videoSequenceDefine,\n  videoSequenceDefinition,\n  videoSequenceDefinitionFromId,\n  VideoSequenceFactoryImplementation,\n  videoSequenceFromId,\n  videoSequenceInitialize,\n  videoSequenceInstance,\n}\n","import { Factory } from \"../Factory\"\nimport { DefinitionTypes } from \"../Setup/Enums\"\n\nDefinitionTypes.forEach(type => { Factory[type].initialize() })\n","\nconst Seconds = (seconds : number, fps : number, duration : number) : string => {\n  let time, pad, do_rest, s = ''\n  if (! duration) duration = seconds\n  time = 60 * 60 // an hour\n  pad = 2\n  if (duration >= time) {\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 60 // a minute\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 1 // a second\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00'\n  } else s += '00'\n  if (fps > 1) {\n    if (fps === 10) pad = 1\n    s += '.'\n    if (seconds) {\n      if (pad === 1) seconds = Math.floor(seconds * 10) / 10\n      else seconds = Math.floor(100 * seconds) / 100\n      seconds = Number(String(seconds).substr(2, 2))\n      s += String(seconds).padStart(pad, '0')\n    } else s += '0'.padStart(pad, '0')\n  }\n  return s\n}\n\nexport { Seconds }\n"],"names":["rgbValue","value","Math","min","max","floor","Number","rgbNumeric","rgb","r","g","b","yuvNumeric","y","u","v","colorYuv2rgb","yuv","floats","colorRgb2hex","toString","length","colorYuvBlend","yuvs","match","blend","diff","blendYuv","forEach","yuvObject","numericYuv","du","dv","sqrt","colorRgb2yuv","ints","colorStrip","color","toLowerCase","replaceAll","colorValid","colorStripped","style","Option","styleStripped","startsWith","colorTransparent","Color","valid","yuvBlend","rgb2yuv","yuv2rgb","rgb2hex","transparent","strip","Default","label","masher","buffer","fps","loop","volume","precision","autoplay","mash","quantize","backcolor","gain","instance","audio","trim","video","speed","definition","frame","duration","image","theme","transition","videosequence","pattern","increment","begin","padding","videostream","$invalidArgument","$invalidProperty","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","action","actions","internal","argument","invalid","canvas","url","source","id","object","size","track","trackType","name","type","property","factory","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frames","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","wrongClass","Parameter","[object Object]","this","String","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","isPopulatedString","isPopulatedObject","Object","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","method","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","ActionType","TrackType","ClipType","ClipTypes","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","TypeValue","identifier","DefinitionsMap","Map","DefinitionsByType","definitionsByType","list","definitionsList","set","definitionsClear","clear","definitionsFont","Font","definitionsFromId","definitionsInstalled","console","trace","definitionsInstall","push","has","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","delete","definitions","index","indexOf","splice","Definitions","byType","fromId","install","installed","map","uninstall","Type","modular","JSON","stringify","Boolean","Fontsize","Pixel","Integer","round","Rgb","Rgba","Direction4","Direction8","Mode","find","TypesInstance","entries","entry","key","dataType","includes","propertyTypes","propertyType","dataTypesJson","Property","custom","Types","Capitalize","toUpperCase","substr","ElementScrollProps","elementScrollMetrics","element","getComputedStyle","getPropertyValue","slice","scrollLeft","scrollTop","x","width","height","getBoundingClientRect","fromEntries","Element","scrollMetrics","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","join","Evaluator","context","mergeContext","ceil","setInputSize","conditionals","trueConditional","expression","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","bind","inputSize","Set","a","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","scale","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","t","Id","Date","now","random","roundMethod","rounding","roundWithMethod","func","Round","withMethod","pixelRgbaAtIndex","pixels","pixelSafe","pixel","offsetPoint","pt","pixelToPoint","pixelFromPoint","pixelNeighboringRgbas","data","halfSize","depth","pixelNeighboringPixels","p","pixelToIndex","pixelRgba","pixelColor","pixelPerFrame","zoom","widthFrames","pixelFromFrame","perFrame","pixelToFrame","fromFrame","neighboringRgbas","rgbaAtIndex","toFrame","byFrame","byTrack","byLabel","Sort","timeEqualizeRates","time1","time2","gcf","fps1","fps2","greatestCommonDenominator","Time","copy","description","scaleToTime","subtracted","rounded","fromArgs","TimeRange","super","end","endTime","range1","range2","startTime","scaledTime","scaledRange","range","times","from","_","i","start","TrackRange","first","last","count","relative","trackRange","tracks","fill","idx","withEnd","urlAbsolute","URL","document","baseURI","href","Url","absolute","Action","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","selectedClips","done","selectedEffects","redoAction","undoAction","AddTrackAction","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","undoValueNumeric","setValue","redo","FreezeAction","freezeClip","frozenClip","insertClip","trackClips","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","undo","AudibleContext","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","sourceNode","createBufferSource","createGain","currentTime","Promise","resolve","reject","decodeAudioData","audioData","error","destination","dispatchEvent","CustomEvent","fromSeconds","Point0","VisibleContext","context2d","_context2d","alpha","globalAlpha","getContext","clearSize","clearRect","rect","composite","globalCompositeOperation","globalThis","createElement","dataUrl","toDataURL","drawAtPoint","point","drawImage","drawFillToSize","fillOriginal","fillRect","drawFillInRect","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","drawInRectFromRect","inSize","fromSize","text","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactoryInstance","visible","types","Cache","ContextFactory","audible","cachedByKey","urlsByKey","getObject","retainUrls","retainKeys","Loader","fetch","then","response","arrayBuffer","blob","reader","FileReader","onload","onerror","readAsArrayBuffer","decode","cached","promiseOrCached","promise","requestUrl","add","processed","_url","InstanceBase","args","_id","_label","instanceFromObject","toJSON","scaleToFps","_identifier","propertyNames","properties","propertyValues","coerced","coerce","constructor","DefinitionBase","icon","instanceObject","_quantize","_start","_end","propertiesModular","_times","AudibleMixin","Base","z","gainPairs","loadedAudible","muted","dif","ClipMixin","Video","definitionTime","withFrame","endFrame","loadDefinition","definitionUrls","_trim","AudibleFileMixin","trimTime","space","offset","AudioWithAudibleFile","AudioClass","Audio","ClipPropertyObjects","ClipDefinitionMixin","_duration","AudioLoader","arrayBufferPromiseFromUrl","audioBufferPromiseFromArrayBuffer","catch","FontLoader","debug","FontFace","load","face","fonts","reason","ImageLoader","Image","crossOrigin","src","VideoLoader","videoPromiseFromUrl","audioBuffer","sequence","videoFromUrl","ondurationchange","videoWidth","videoHeight","classes","LoaderFactory","loader","AudibleDefinitionMixin","stream","waveform","urlAudible","absoluteUrl","caching","loadUrl","unload","some","maybePair","AudibleFileDefinitionMixin","loops","AudioDefinitionWithAudibleFile","AudioDefinitionClass","audioObject","Factories","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","audioInstall","retain","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","FilterDefinitionClass","Filter","_evaluator","_evaluated","BlendFilter","modes","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","reverse","matrix","drawImageData","ColorFilter","drawFill","ColorChannelMixerFilter","rgbas","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","options","bias","rdiv","channel","parseInt","parse","input","output","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","outWidth","outHeight","drawInSizeFromSize","SetSarFilter","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","ModularMixin","constructProperties","modularDefinitions","promises","all","flatMap","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","Effect","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","Factory","static","Mash","Masher","Theme","Transition","VideoSequence","VideoStream","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","every","drawFilters","loadClip","loadTransformable","loadModular","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_time","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionWithTransformable","ImageDefinitionClass","urlVisible","definitionPromise","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","imageInstall","ImageFactoryImplementation","TrackClass","isMainVideo","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","sort","Composition","_gain","sourcesByClip","gainNode","timing","startOptions","startedContextAt","startedMashAt","log","cancelScheduledValues","pair","linearRampToValueAtTime","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","visibleContext","mainClip","mergeContextAtTime","emit","Draw","requestAnimationFrame","compositeVisible","connect","gainSource","adjustSourceGain","clipsToKeep","clipsToRemove","disconnect","playing","Volume","bufferSource","stopPlaying","stop","MashClass","_backcolor","definitionId","definitionType","trackOptions","setDrawInterval","assureClipsHaveFrames","newTrack","clipTrackAtIndex","oldTrack","clipTrack","emitIfFramesChange","removeClips","Track","_composition","_buffer","bufferFrames","_bufferTimer","setInterval","clearInterval","bufferTime","limitedValue","maxFrames","newFrames","drawInterval","intersects","trackOfTypeAtIndex","clipsInTracks","objects","clipsVisible","clipsAudible","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","flat","clipIntersects","filterIntersecting","clipsVideo","clipsVisibleInTimeRange","fromTime","audibleClips","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","paused","clearDrawInterval","timeChange","drawnTime","Loaded","performance","drawnSeconds","streamable","clipUrls","nextFrameTime","seekToTime","Ended","compositionTime","difference","drawTime","origFrames","Duration","changeAction","stopLoadAndDraw","_playing","drawWhilePlaying","drawWhileNotPlaying","startAndEnd","clipsAtTimes","_paused","loadUrls","loadedDefinitions","definitionTimes","forcedValue","bufferStop","Pause","startContext","bufferStart","Play","startPlaying","Playing","pop","seekTime","Seeking","handleDrawInterval","stalled","seeking","Seeked","clipWithTrack","av","MashDefinitionClass","MashDefaultId","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","mashInstall","MashFactoryImplementation","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","MasherClass","_loop","_fps","_volume","clone","createFromObject","handleAction","_actions","frameOrIndex","addEffect","clipType","addClip","trackCount","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","_selectedClips","clipCanBeSplit","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","pristineOrThrow","selectedEffectOrThrow","pristineEffectOrThrow","_pristine","transformType","transformable","transformTarget","pristineTarget","destroy","eventTarget","firstClip","abutting","Fps","goToTime","equalsTime","imageSize","loadMash","_mash","mashOptions","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","effectOrArray","_muted","per","toFixed","positionStep","repeat","_pristineEffect","removeEffects","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipsOrEffects","selected","selectedClipOrMash","selectedClipObject","newSelectedClips","newPristine","Selection","newSelectedEffects","newPristineEffect","selectionObjects","MasherDefinitionClass","MasherDefaultId","MasherInterval","MasherFactoryMashers","masherDestroy","masherStop","masherStart","urls","flush","handleInterval","masherDefinition","masherDefinitionFromId","masherInstance","masherFromId","masherInitialize","masherDefine","MasherFactoryImplementation","ThemeWithTransformable","ThemeClass","modularUrls","transformablePromise","modularPromise","ThemeDefinitionWithVisible","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromClip","toClip","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","WithTransformable","VideoClassImplementation","divide","WithVisible","VideoDefinitionClassImplementation","cachedOrThrow","sourceOrPromise","seekPromise","timesNeeded","needTimes","timesPromise","shift","framePromise","rate","framesPromise","seekNeeded","onseeked","seek","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","videoInstall","VideoFactoryImplementation","WithAudible","something","VideoStreamClass","WithStreamable","format","StreamableDefinitionMixin","VideoStreamDefinitionClass","videoStreamDefinition","videoStreamDefinitionFromId","videoStreamInstance","videoStreamFromId","videoStreamInitialize","videoStreamDefine","videoStreamInstall","VideoStreamFactoryImplementation","VideoSequenceClass","VideoSequenceDefinitionClass","framesMax","framesArray","urlForFrame","clipDefinitionPromise","zeroTime","allUrls","deleting","s","padStart","videoSequenceDefinition","videoSequenceDefinitionFromId","videoSequenceInstance","videoSequenceFromId","videoSequenceInitialize","videoSequenceDefine","videoSequenceInstall","VideoSequenceFactoryImplementation","pad","do_rest"],"mappings":"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"}