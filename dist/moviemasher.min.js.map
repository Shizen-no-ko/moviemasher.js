{"version":3,"file":"moviemasher.min.js","sources":["../src/Setup/Enums.ts","../src/Setup/Errors.ts","../src/Editing/Action/Action.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipsAction.ts","../src/Editing/Action/RemoveClipsAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/MoveEffectsAction.ts","../src/Editing/Actions/Actions.ts","../src/Editing/Events/Events.ts","../src/Utilities/Is.ts","../src/Loading/Cache.ts","../src/Utilities/Time.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Loading/Processor.ts","../src/Loading/AudioProcessor.ts","../src/Loading/FontProcessor.ts","../src/Loading/ModuleProcessor.ts","../src/Loading/Loader.ts","../src/Utilities/Capitalize.ts","../src/Loading/ProcessorFactory.ts","../src/Loading/AudioLoader.ts","../src/Loading/FontLoader.ts","../src/Loading/ImageLoader.ts","../src/Loading/ModuleLoader.ts","../src/Mash/Instance/Instance.ts","../src/Mash/TypeValue/TypeValue.ts","../src/Mash/Type/Type.ts","../src/Mash/Types/Types.ts","../src/Setup/Property.ts","../src/Utilities/Color.ts","../src/Utilities/Id.ts","../src/Utilities/Pixel.ts","../src/Utilities/Sort.ts","../src/Utilities/Evaluator.ts","../src/Utilities/TimeRange.ts","../src/Mash/Definition/Definition.ts","../src/Setup/Default.ts","../src/Setup/Parameter.ts","../src/Mash/Mixin/Audible/AudibleMixin.ts","../src/Mash/Mixin/Clip/ClipMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mash/Mixin/Clip/ClipDefinitionMixin.ts","../src/Loading/LoaderFactory.ts","../src/Mash/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mash/Definitions/Definitions.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Factories/Factories.ts","../src/Mash/Audio/AudioFactory.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mash/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mash/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/MovieMasher/MovieMasher.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mash/Mixin/Transformable/TransformableMixin.ts","../src/Mash/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mash/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Mash/Track/Track.ts","../src/Playing/Composition/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashDefinition.ts","../src/Mash/Mash/MashFactory.ts","../src/Editing/Action/ActionFactory.ts","../src/Mash/Masher/MasherInstance.ts","../src/Mash/Masher/MasherDefinition.ts","../src/Mash/Masher/MasherFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Factories/index.ts"],"sourcesContent":["\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipsToTrack = 'addClipsToTrack',\n  MoveClips = 'moveClips',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffects = 'moveEffects',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClips = 'removeClips',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Video = 'video',\n}\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Mash = 'mash',\n  Masher = 'masher',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Add = 'add',\n  Duration = 'duration',\n  Redo = 'redo',\n  Truncate = 'truncate',\n  Undo = 'undo',\n}\n\nenum MashType {\n  Mash = DefinitionType.Mash,\n}\nconst MashTypes = Object.values(MashType)\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Hex = 'hex',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  Scalar = 'scalar',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler'\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MashType,\n  MashTypes,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  TrackType,\n  TransformType,\n  TransformTypes,\n}\n","const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $deprecated = \"deprecated in 4.1\"\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  deprecation: {\n    property_types: `property_types ${$deprecated} - please get MovieMasher.Property.types instead`,\n    addModulesOfType: `addModulesOfType ${$deprecated} for unsupported type `,\n    configure: {\n      get: `configure ${$deprecated} - please get MovieMasher.defaults instead`,\n      set: `configure ${$deprecated} - please supply mash.quantize and media.duration instead`,\n    },\n    canvas_context: {\n      get: `canvas_context ${$deprecated} - please get visibleContext instead`,\n      set: `canvas_context ${$deprecated} - please set visibleContext instead`,\n    }\n  },\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { Mash } from \"../../Mash\"\nimport { Actions } from \"../Actions\"\nimport { Events } from \"../Events\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { EventType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoSelectedClips : Clip[]\n  redoSelectedEffects : Effect[]\n  type : string\n  undoSelectedClips : Clip[]\n  undoSelectedEffects : Effect[]\n  redoAction() : void\n  undoAction() : void\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const {\n      actions,\n      mash,\n      redoSelectedClips,\n      redoSelectedEffects,\n      type,\n      undoSelectedClips,\n      undoSelectedEffects,\n    } = object\n    this.actions = actions\n    this.type = type\n    this.mash = mash\n    this.undoSelectedClips = undoSelectedClips\n    this.redoSelectedClips = redoSelectedClips\n    this.undoSelectedEffects = undoSelectedEffects\n    this.redoSelectedEffects = redoSelectedEffects\n  }\n\n  actions : Actions\n\n  mash : Mash\n\n  undoSelectedClips : Clip[]\n\n  redoSelectedClips : Clip[]\n\n  undoSelectedEffects : Effect[]\n\n  redoSelectedEffects : Effect[]\n\n  done =  false\n\n  get events() : Events | undefined { return this.mash.events }\n\n  get selectedClips() : Clip[] {\n    if (this.done) return this.redoSelectedClips\n\n    return this.undoSelectedClips\n  }\n\n  get selectedEffects() : Effect[] {\n    if (this.done) return this.redoSelectedEffects\n\n    return this.undoSelectedEffects\n  }\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n    if (!this.events) return\n\n    this.events.emit(EventType.Action, { action: this })\n  }\n\n  redoAction() : void {\n    throw Errors.internal + 'redoAction'\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n    if (!this.events) return\n\n    this.events.emit(EventType.Action, { action: this })\n  }\n\n  undoAction() : void {\n    throw Errors.internal + 'undoAction'\n  }\n}\n\nexport { Action, ActionObject }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","\nimport { Effect } from \"../../Mash/Effect/Effect\"\nimport { Mash } from \"../../Mash/Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../Setup/declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Mash | Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Mash | Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target[this.property] = this.redoValue\n  }\n\n  undoAction() : void {\n    this.target[this.property] = this.undoValue\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.redoValue)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, <number> this.undoValue)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.redoValue, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, <number> this.undoValue, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash[this.trackType][this.trackIndex] }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipsToTrack([this.clip], this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipsFromTrack([this.clip])\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  insertIndex : number\n  redoFrames? : number[]\n  trackIndex : number\n  undoFrames? : number[]\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipsAction extends Action {\n  constructor(object : MoveClipsActionObject) {\n    super(object)\n    const {\n      clips,\n      insertIndex,\n      redoFrames,\n      trackIndex,\n      undoFrames,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clips = clips\n    this.insertIndex = insertIndex\n    this.redoFrames = redoFrames\n    this.trackIndex = trackIndex\n    this.undoFrames = undoFrames\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clips : Clip[]\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrames? : number[]\n\n  redoFrames? : number[]\n\n  addClips(trackIndex : number, insertIndex : number) : void {\n    this.mash.addClipsToTrack(this.clips, trackIndex, insertIndex)\n  }\n\n  setFrames(frames : number[]) : void {\n    this.clips.forEach((clip, index) => { clip.frame = frames[index] })\n  }\n\n  redoAction() : void {\n    if (this.redoFrames) this.setFrames(this.redoFrames)\n    this.addClips(this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    if (this.undoFrames) this.setFrames(this.undoFrames)\n    this.addClips(this.undoTrackIndex, this.undoInsertIndex)\n  }\n}\nexport { MoveClipsAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipsActionObject extends ActionObject {\n  clips : Clip[]\n  index : number\n  track : Track\n}\nclass RemoveClipsAction extends Action {\n  constructor(object : RemoveClipsActionObject) {\n    super(object)\n    const { clips, index, track } = object\n    this.clips = clips\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clips : Clip[]\n\n  index : number\n\n  get trackIndex() : number { return this.track.index }\n\n  redoAction() : void {\n    this.mash.removeClipsFromTrack(this.clips)\n  }\n\n  undoAction() : void {\n    this.mash.addClipsToTrack(this.clips, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipsAction }\n","import { Clip } from \"../../Mash/Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectsActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectsAction extends Action {\n  constructor(object : MoveEffectsActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectsAction }\n","import { Mash } from \"../../Mash\"\nimport { Action } from \"../Action\"\n\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  do(action : Action) : Action[] {\n    const remove = this.instances.length - (this.index + 1)\n    const removed = remove ? this.instances.splice(this.index + 1, remove) : []\n\n    this.instances.push(action)\n    this.redo()\n    return removed\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","import { EventsTarget, EventsCallback, UnknownObject } from \"../../Setup/declarations\"\nimport { Action } from \"../Action\"\n\n\nclass Events {\n  constructor(object : { target? : EventsTarget } = {}) {\n    // console.log(\"Events constructor\")\n    const { target } = object\n    if (target) this.target = target\n  }\n\n  methods : Set<EventsCallback> = new Set()\n\n  get target() : EventsTarget | undefined { return this.__target }\n\n  set target(value : EventsTarget | undefined) {\n    if (this.__target !== value) {\n      const methods = new Set(this.methods)\n      methods.forEach(this.removeListener, this)\n      this.__target = value\n      methods.forEach(this.addListener, this)\n    }\n  }\n\n  addListener(method : EventsCallback) : void {\n    if (this.methods.add(method)) {\n      if (!this.target) return\n\n      this.target.addEventListener(Events.type, method)\n    }\n  }\n\n  emit(type : string, info : UnknownObject = {}) : void {\n    const detail = { type, ...info }\n    const event = { detail }\n    if (!this.target) return\n\n    this.target.dispatchEvent(new CustomEvent(Events.type, event))\n  }\n\n  removeListener(method : EventsCallback) : void {\n    if (this.methods.delete(method)) {\n      if (!this.target) return\n\n      this.target.removeEventListener(Events.type, method)\n    }\n  }\n\n  static get type() : string { return \"masher\" }\n\n  __target? : EventsTarget\n}\ninterface EventsDetail {\n  action? : Action\n  type : string\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { Events, EventsType, EventsDetail}\n","import { ScalarArray, UnknownObject } from \"../Setup/declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","import { Any } from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  cached(url : string) : boolean {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return this.cachedByKey.has(this.key(url))\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  get(url : string) : Any | undefined {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.log(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst scaleTimes = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nconst roundingMethod = (rounding = '') => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number : number, method = '') : number => (\n  roundingMethod(method)(number)\n)\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = scaleTimes(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = Number(this.frame / this.fps) * Number(fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return scaleTimes(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = scaleTimes(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, scaleTimes, roundWithMethod }\n","import { Any } from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Time } from \"../Utilities/Time\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\nexport class AudibleContext {\n  __context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this.__context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      // console.log(\"AudibleContext context\", Klass.name)\n      this.__context = new Klass()\n    }\n    return this.__context\n  }\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    // console.log(this.constructor.name, \"createBuffer\", length)\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource() : AudioBufferSourceNode { return this.context.createBufferSource() }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  get time() : Time { return Time.fromSeconds(this.currentTime) }\n\n  get currentTime() : number { return this.context.currentTime }\n}\n","import {\n  Context2D,\n  ContextData,\n  ContextElement,\n  DrawingSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle\n} from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\n\nconst blah = \"\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nexport class VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    // console.trace(\"VisibleContext\", \"constructor\")\n    if (object.context2d) this.__context2d = object.context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : ContextElement { return this.context2d.canvas }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  get context2d() : Context2D {\n    if (!this.__context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this.__context2d = context\n    }\n    return this.__context2d\n  }\n\n  set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this.__context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : DrawingSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : DrawingSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : DrawingSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : DrawingSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : DrawingSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : DrawingSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : DrawingSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : DrawingSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : DrawingSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : DrawingSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private __context2d? : Context2D\n}\n","import { Size, Context2D } from \"../Setup/declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactory {\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactoryInstance = new ContextFactory()\n\nexport { ContextFactoryInstance as ContextFactory }\n","import { Any } from \"../Setup/declarations\"\n\nclass Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { Processor }\n","import { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { Processor } from \"./Processor\"\n\nclass AudioProcessor extends Processor {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  process(_url : string, buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return this.audibleContext.decode(buffer)\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioProcessor }\n","import { LoadFontPromise } from \"../Setup/declarations\"\nimport { Cache } from \"./Cache\"\nimport { Processor } from \"./Processor\"\n\nclass FontProcessor extends Processor {\n  process(url : string, buffer : ArrayBuffer) : LoadFontPromise {\n    const family = Cache.key(url)\n    const face = new FontFace(family, buffer)\n    const promise = face.load().then(() => {\n      document.fonts.add(face)\n      return { family }\n    })\n    return promise\n  }\n}\n\nexport { FontProcessor }\n","import { Any } from \"../Setup/declarations\"\nimport { Processor } from \"./Processor\"\n\nclass ModuleProcessor extends Processor {\n  process(_url : string, _buffer : ArrayBuffer) : Promise<Any> {\n    return Promise.resolve()\n  }\n}\n\nexport { ModuleProcessor }\n","import { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader  {\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { AudioProcessor } from \"../Loading/AudioProcessor\"\nimport { FontProcessor } from \"../Loading/FontProcessor\"\nimport { ModuleProcessor } from \"../Loading/ModuleProcessor\"\nimport { AudibleContext } from \"../Playing\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\nimport { Processor } from \"./Processor\"\n\ntype ProcessorClassType = typeof Processor\n\nconst classes : {[index : string] : ProcessorClassType } = {\n  Audio: AudioProcessor,\n  Font: FontProcessor,\n  Module: ModuleProcessor,\n}\n\nclass ProcessorClass {\n  audio(object : { audibleContext : AudibleContext}) {\n    return new (<typeof AudioProcessor> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  install(type : string, loader : ProcessorClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst ProcessorFactory = new ProcessorClass()\nexport { ProcessorFactory }\n","import { ProcessorFactory } from \"./ProcessorFactory\"\nimport { AudibleContext, ContextFactory } from \"../Playing\"\nimport { Loader } from \"./Loader\"\n\nimport { Any, LoadPromise, UnknownObject } from \"../Setup/declarations\"\nimport { LoadType} from \"../Setup/Enums\"\n\nclass AudioLoader extends Loader {\n  constructor(object? : UnknownObject | undefined) {\n    super()\n    if (object && object.audibleContext) {\n      this._audibleContext = <AudibleContext> object.audibleContext\n    }\n    else this._audibleContext = ContextFactory.audible()\n  }\n\n  type = LoadType.Audio\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  async requestUrl(url : string) : Promise<AudioBuffer> {\n    return fetch(url).then(response => {\n      return response.arrayBuffer()\n    }).then(loaded => {\n      const options = { audibleContext: this.audibleContext }\n      const processor = ProcessorFactory.audio(options)\n      return processor.process(url, loaded)\n    })\n  }\n\n  _audibleContext : AudibleContext\n}\n\nexport { AudioLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { ProcessorFactory } from \"./ProcessorFactory\"\nimport { Loader } from \"./Loader\"\nimport { LoadFontPromise } from \"../Setup/declarations\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url : string) : LoadFontPromise {\n    return fetch(url)\n      .then(response => response.arrayBuffer())\n      .then(buffer => ProcessorFactory.font().process(url, buffer))\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../Setup/declarations\"\nimport { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadType } from \"../Setup/Enums\"\nimport { Loader } from \"./Loader\"\nimport { Any } from \"../Setup/declarations\"\n\nclass ModuleLoader extends Loader {\n  type = LoadType.Module\n\n  async requestUrl(url : string) : Promise<Any> { return import(url) }\n}\n\nexport { ModuleLoader }\n","import { Any, JsonObject, LoadPromise, SelectionObject, SelectionValue } from \"../../Setup/declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definition } from \"../Definition/Definition\"\nimport { Time } from \"../../Utilities/Time\"\n\ninterface InstanceObject {\n  [index: string]: unknown\n  definition? : Definition\n  id? : string\n  label? : string\n}\n\nclass InstanceClass {\n  [index: string]: unknown\n\n  constructor(...args : Any[]) {\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceClass'\n\n    const { definition, id, label } = <InstanceObject> object\n    if (!definition) throw Errors.invalid.definition.object + 'InstanceClass'\n\n    this.definition = definition\n    if (id && id !== definition.id) this._id = id\n    if (label && label !== definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  protected _id? : string\n\n  get id() : string { return this._id || this.definition.id }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  load(quantize : number, start : Time, end? : Time) : LoadPromise {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.load(startTime, endTime)\n  }\n\n  loaded(quantize : number, start : Time, end? : Time) : boolean {\n    const startTime = this.definitionTime(quantize, start)\n    const endTime = end ? this.definitionTime(quantize, end) : end\n    return this.definition.loaded(startTime, endTime)\n  }\n\n  get propertyNames() : string[] {\n    return this.definition.properties.map(property => property.name)\n  }\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.definition.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  get type() : DefinitionType { return this.definition.type }\n\n  toJSON() : JsonObject { return this.propertyValues }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + \"value \" + this.propertyNames.includes(key) + \" \" + this[key]\n\n    return <SelectionValue> value\n  }\n}\n\ninterface Instance extends InstanceClass {\n\n}\n\nexport { Instance, InstanceClass, InstanceObject }\n","import { ScalarValue } from \"../../Setup/declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","\nimport { ScalarRaw } from \"../../Setup/declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { TypeValue, TypeValueObject } from \"../TypeValue/TypeValue\"\nimport { Errors } from \"../../Setup/Errors\"\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","\nimport { Is } from \"../../Utilities/Is\";\nimport dataTypesJson from \"../../Setup/dataTypes.json\"\nimport { ScalarRaw } from \"../../Setup/declarations\"\nimport { DataType, DataTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Type, TypeObject } from \"../Type/Type\";\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) {\n      console.trace('propertyType ' + type)\n      throw Errors.type + 'propertyType ' + type\n    }\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(Is.populatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!Is.object(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst TypesInstance = new TypesClass(dataTypesJson)\n\nexport { TypesInstance as Types }\n","import { JsonObject, ScalarRaw } from \"./declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"../Mash/Type/Type\"\nimport { Types } from \"../Mash/Types/Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\nexport { Property, PropertyObject }\n","import { Rgb, RgbObject, Yuv, YuvObject } from \"../Setup/declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst yuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst rgb2hex = (rgb : RgbObject) : string => {\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst yuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst rgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst Color = {\n  yuvBlend,\n  rgb2yuv,\n  yuv2rgb,\n  rgb2hex, // unused after 4.1 refactor, but perhaps needed?\n}\n\nexport { Color }\n","const Id = () : string => {\n  return `${Date.now().toString(36)}${Math.random().toString(36).substr(2)}`\n}\n\nexport { Id }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../Setup/declarations\"\n\nconst fromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst toPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst toIndex = (pixel : number) => pixel * 4\n\nconst rgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst rgba = (pixel : number, data : Pixels) => rgbaAtIndex(toIndex(pixel), data)\n\nconst safePixel = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = toPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return fromPoint(pt, width)\n}\n\nconst safePixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(safePixel(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst surroundingRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  safePixels(pixel, size).map(p => rgba(p, data))\n)\n\nconst color = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nexport const Pixel = {\n  color,\n  rgbaAtIndex,\n  surroundingRgbas,\n}\n","import { WithFrame, WithLabel, WithTrack } from \"../Setup/declarations\"\n\nconst byFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst byTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst byLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = { byFrame, byLabel, byTrack }\n\nexport { Sort, byFrame, byLabel, byTrack }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../Setup/declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, context : VisibleContext, size : Size, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_duration }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","import { Is } from \"./Is\"\nimport { Time, scaleTimes, roundWithMethod } from \"./Time\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> scaleTimes(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> scaleTimes(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = scaleTimes(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> scaleTimes(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> scaleTimes(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, JsonObject, LoadPromise, SelectionValue, UnknownObject } from \"../../Setup/declarations\"\nimport { Instance, InstanceClass, InstanceObject } from \"../Instance/Instance\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Default } from \"../../Setup\"\nimport { Is } from \"../../Utilities\"\n\ninterface DefinitionObject {\n  [index: string]: unknown\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionClass {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    if (label) this.label = label\n    if (icon) this.icon = icon\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => {\n      object[property.name] = property.value\n    })\n    return object\n  }\n\n  label? : string\n\n  load(_start : Time, _end? : Time) : LoadPromise { return Promise.resolve() }\n\n  loaded(_start : Time, _end? : Time) : boolean { return true }\n\n  loadedAudible(_time?: Time) : Any {}\n\n  loadedVisible(_time?: Time) : Any {}\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionClass {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\nexport { Definition, DefinitionClass, DefinitionObject, DefinitionTimes }\n","const Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 30,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: \"#00000000\",\n    gain: 0.75,\n    buffer: 10,\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { pattern: '%.jpg', fps: 30, increment: 1, begin: 1  },\n  },\n}\n\nexport { Default }\n","import { JsonObject, ScalarValue, ValueObject } from \"./declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Any, Constrained, JsonObject } from \"../../../Setup/declarations\"\nimport { Clip } from \"../Clip/Clip\"\nimport { AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../../Setup\"\n\nconst AudibleGainDelimiter = ','\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain, trim } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n      // cnsole.log(\"AudibleMixin gain\", typeof gain, gain, this.gain)\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize : number) : Time { return Time.fromArgs(this.trim, quantize) }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, Constrained, JsonObject, LoadPromise } from \"../../../Setup/declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Instance } from \"../../Instance\"\nimport { ClipObject } from \"./Clip\"\n\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n      const frame = Math.max(Math.min(time.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.id = this.id\n      return object\n    }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceClass)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nclass AudioClass extends AudioWithAudible {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../../Setup/Property\"\nimport { Any, Constrained, ObjectUnknown } from \"../../../Setup/declarations\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Default } from \"../../../Setup/Default\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ClipDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { Loader } from \".\"\nimport { AudioLoader } from \"../Loading/AudioLoader\"\nimport { FontLoader } from \"../Loading/FontLoader\"\nimport { ImageLoader } from \"../Loading/ImageLoader\"\nimport { ModuleLoader } from \"../Loading/ModuleLoader\"\nimport { UnknownObject } from \"../Setup/declarations\"\nimport { Capitalize } from \"../Utilities\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Module: ModuleLoader,\n}\n\nclass LoaderClass {\n  audio(object? : UnknownObject | undefined) : AudioLoader {\n    return new (<typeof AudioLoader> classes.Audio)(object)\n  }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  module() { return new classes.Module() }\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { DataType } from \"../../../Setup/Enums\"\nimport { Any, Constrained, JsonObject, LoadPromise } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinition } from \"../Clip/Clip\"\nimport { Property } from \"../../../Setup/Property\"\nimport { Time, Times } from \"../../../Utilities/Time\"\nimport { Cache } from \"../../../Loading\"\nimport { LoaderFactory } from \"../../../Loading/LoaderFactory\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction AudibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration, url, audio, source, waveform } = <AudibleDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (loops) this.loops = !!loops\n      if (source) this.source = source\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    audible = true\n\n    load(start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(start, end)]\n      if (end) {\n        if (Cache.cached(this.urlAudible)) {\n          const cached = Cache.get(this.urlAudible)\n          if (cached instanceof Promise) promises.push(cached)\n        } else promises.push(LoaderFactory.audio().loadUrl(this.urlAudible))\n      }\n      return Promise.all(promises).then()\n    }\n    loaded(start : Time, end? : Time) : boolean {\n      return super.loaded(start, end) && Cache.cached(this.urlAudible)\n    }\n\n    loadedAudible(_time?: Time) : AudioBuffer | undefined {\n      return Cache.get(this.urlAudible)\n    }\n\n    loops = false\n\n    source? : string\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      object.audio = this.urlAudible\n      if (this.loops) object.loops = true\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.urlAudible)) return\n\n      Cache.remove(this.urlAudible)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definition } from \"../Definition/Definition\"\n\ntype DefinitionsList = Definition[]\nconst definitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = () : void => { definitionsMap.clear() }\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(id)\n    throw Errors.unknown.definition + 'definitionsFromId ' + id\n  }\n\n  const definition = definitionsMap.get(id)\n  if (!definition) throw Errors.internal\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  // console.log(\"definitionsInstall\", type, id)\n  definitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => definitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) {\n    console.log(\"definitionsUninstall\", id)\n    return\n  }\n  const definition = definitionsFromId(id)\n\n  definitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal + 'definitionsUninstall'\n\n  definitions.splice(index, 1)\n  // console.log(\"uninstalled\", id)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: definitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  definitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../Setup/declarations\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nclass AudioDefinitionClass extends AudioDefinitionWithAudible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { AudioFactory } from \"../Audio/Audio\"\nimport { EffectFactory } from \"../Effect/Effect\"\nimport { FilterFactory } from \"../Filter/Filter\"\nimport { FontFactory } from \"../Font/Font\"\nimport { ImageFactory } from \"../Image/Image\"\nimport { MashFactory } from \"../Mash/Mash\"\nimport { MergerFactory } from \"../Merger/Merger\"\nimport { ScalerFactory } from \"../Scaler/Scaler\"\nimport { ThemeFactory } from \"../Theme/Theme\"\nimport { TransitionFactory } from \"../Transition/Transition\"\nimport { VideoFactory } from \"../Video/Video\"\nimport { MasherFactory } from \"../Masher/Masher\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Mash]?: MashFactory\n  [DefinitionType.Masher]?: MasherFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject } from \"./Audio\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  instance: audioInstance,\n}\n\nFactories.audio = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInitialize,\n  audioInstance,\n}\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, JsonObject, ValueObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    return this.definition.draw(evaluator, this.evaluated(evaluator))\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, ValueObject } from \"../../Setup/declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType, Errors } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Types } from \"../../Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'BlendFilter mergeContext'\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n\n  // id = 'blend'\n}\n\nexport { BlendFilter }\n","import { Evaluator, Color, Pixel } from \"../../../Utilities\"\nimport { Pixels, ValueObject, Yuv } from \"../../../Setup/declarations\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      const surroundingRgbas = Pixel.surroundingRgbas(index * 4, pixels, size)\n      array.push(surroundingRgbas.map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : { color : string }) : VisibleContext {\n    const { context } = evaluator\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(Pixel.color(color))\n    return context\n  }\n\n  // id = 'color'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n\n  // id = 'colorchannelmixer'\n\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { Pixel } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = Pixel.surroundingRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { EvaluatedRect } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.setInputSize(evaluator.context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Evaluator, isPopulatedString, Pixel } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(Pixel.color(color), { x, y, width, height })\n    return context\n  }\n\n  // id = 'drawbox'\n\n}\n\nexport { DrawBoxFilter }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceClass {\n  declare definition : FontDefinition\n}\n\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\n\n\nclass FontDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source } = <FontDefinitionObject> object\n    if (!source) throw Errors.invalid.definition.source + JSON.stringify(object)\n\n    this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    const instance = new FontClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.source)) {\n      const cached = Cache.get(this.source)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.font().loadUrl(this.source))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.source)\n  }\n\n  loadedVisible(_time?: Time) : Any { return Cache.get(this.source) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import fontDefaultJson from \"./DefinitionObjects/default.json\"\nimport { Definitions } from \"../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories.font = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { ScalarValue, TextStyle, ValueObject } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { FontFactoryImplementation } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id\n\n  return FontFactoryImplementation.definitionFromId(<string> id).source\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  // id = 'drawtext'\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n\n  // id = 'fade'\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing\"\nimport { EvaluatedPoint } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (typeof mergeContext === \"undefined\") throw Errors.internal + 'OverlayFilter mergeContext'\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  // id = 'overlay'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, Size } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { ContextFactory, VisibleContext } from \"../../../Playing\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n  } //evaluator.inputSize\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  // id = 'scale'\n\n  scopeSet(evaluator : Evaluator) : void {\n    const { width, height } = evaluator.context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../Setup/declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    return evaluator.context\n  }\n\n  // id = 'setsar'\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n  console.trace(\"WTF\")\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories.filter = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../../Setup/Property\"\nimport { Any, Constrained, JsonObject, ScalarValue, Size } from \"../../../Setup/declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { TimeRange } from \"../../../Utilities/TimeRange\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { Filter } from \"../../Filter/Filter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Filter\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularDefinitionMixin<TBase extends Constrained<Definition>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n        //console.log(\"ModularDefinition\", this.id, \"properties\", this.properties.map(p => `${p.name} => ${p.value}`))\n      }\n\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n      // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, contextFiltered, size, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, context, size, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, Constrained, LoadPromise } from \"../../../Setup/declarations\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions\"\nimport { Instance } from \"../../Instance\"\nimport { Time } from \"../../../Utilities/Time\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction ModularMixin<TBase extends Constrained<Instance>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        promises.push(definition.load(startTime, endTime))\n      })\n      return Promise.all(promises).then()\n    }\n\n    loaded(quantize : number, start : Time, end? : Time) : boolean {\n      if (!super.load(quantize, start, end)) return false\n\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.every(definition =>\n        definition.loaded(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../Setup/declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceClass)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.id = this.id\n    return object\n  }\n}\n\nexport { EffectClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any, DefinitionType } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../Definitions\"\n\nimport effectBlurJson from \"./DefinitionObjects/blur.json\"\nimport effectChromaKeyJson from \"./DefinitionObjects/chromakey.json\"\nimport effectEmbossJson from \"./DefinitionObjects/emboss.json\"\nimport effectGrayscaleJson from \"./DefinitionObjects/grayscale.json\"\nimport effectSepiaJson from \"./DefinitionObjects/sepia.json\"\nimport effectSharpenJson from \"./DefinitionObjects/sharpen.json\"\nimport effectTextJson from \"./DefinitionObjects/text.json\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  instance: effectInstance,\n}\n\nFactories.effect = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectInitialize,\n  effectInstance,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Factories } from \"../Mash/Factories/Factories\"\nimport { Errors } from \"../Setup/Errors\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { MashFactory } from \"../Mash/Mash/Mash\"\nimport { MasherFactory } from \"../Mash/Masher/Masher\"\n\nclass MovieMasher {\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Mash]() : MashFactory {\n    const factory = Factories[DefinitionType.Mash]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Mash\n\n    return factory\n  }\n\n  static get [DefinitionType.Masher]() : MasherFactory {\n    const factory = Factories[DefinitionType.Masher]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Masher\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  private constructor() {}\n}\n\n\n\nexport { MovieMasher }\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\"\n\n\nconst MergerWithModular = ModularMixin(InstanceClass)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.merger.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../Setup/declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nimport { Definitions } from \"../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../Definitions\"\nimport mergerBlendJson from \"../Merger/DefinitionObjects/blend.json\"\nimport mergerCenterJson from \"../Merger/DefinitionObjects/center.json\"\nimport mergerConstrainedJson from \"../Merger/DefinitionObjects/constrained.json\"\nimport mergerDefaultJson from \"../Merger/DefinitionObjects/default.json\"\nimport mergerOverlayJson from \"../Merger/DefinitionObjects/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object : MergerObject) : Merger => {\n  const definition = mergerDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mergerFromId = (id : string) : Merger => {\n  return mergerInstance({ id })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories.merger = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { MovieMasher } from \"../../MovieMasher\"\n\nconst ScalerWithModular = ModularMixin(InstanceClass)\nclass ScalerClass extends ScalerWithModular {\n  declare definition : ScalerDefinition\n\n  get id() : string { return this.definition.id }\n\n  set id(value : string) {\n    this.definition = MovieMasher.scaler.definitionFromId(value)\n    this.constructProperties()\n  }\n}\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Any } from \"../../Setup/declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\nimport { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler,\n  ScalerDefinition,\n  ScalerDefinitionObject,\n  ScalerObject\n} from \"../Scaler/Scaler\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport scalerDefaultJson from \"../Scaler/DefinitionObjects/default.json\"\nimport scalerPanJson from \"../Scaler/DefinitionObjects/pan.json\"\nimport scalerScaleJson from \"../Scaler/DefinitionObjects/scale.json\"\nimport { Is } from \"../../Utilities/Is\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object : ScalerObject) : Scaler => {\n  return scalerDefinition(object).instanceFromObject(object)\n}\n\nconst scalerFromId = (id : string) : Scaler => {\n  return scalerInstance({ id })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories.scaler = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import { Any, Constrained, JsonObject, LoadPromise, SelectionObject, Size, ValueObject } from \"../../../Setup/declarations\"\nimport { Merger } from \"../../Merger/Merger\"\nimport { Effect } from \"../../Effect/Effect\"\nimport { Scaler } from \"../../Scaler/Scaler\"\nimport { Visible } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Definition } from \"../../Definition/Definition\"\nimport { TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Merger/MergerFactory\"\nimport { Time } from \"../../../Utilities/Time\"\nimport { Is } from \"../../../Utilities/Is\"\nimport { effectInstance } from \"../../Effect\"\nimport { scalerInstance } from \"../../Scaler\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction TransformableMixin<TBase extends Constrained<Visible>>(Base: TBase) {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n\n      const { merger, effects, scaler } = <TransformableObject> object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions() : Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects : Effect[] = []\n\n\n    load(quantize : number, start : Time, end? : Time) : LoadPromise {\n      const promises = [super.load(quantize, start, end)]\n      promises.push(this.merger.load(quantize, start, end))\n      promises.push(this.scaler.load(quantize, start, end))\n      this.effects.forEach(effect => {\n        promises.push(effect.load(quantize, start, end))\n      })\n      return Promise.all(promises).then()\n    }\n\n    mergeContextAtTime(mashTime : Time, quantize: number, context : VisibleContext) : void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger : Merger\n\n    get propertyValues() : SelectionObject {\n      const merger = <ValueObject> this.merger.propertyValues\n      const scaler = <ValueObject> this.scaler.propertyValues\n      const combined = { merger, scaler, ...super.propertyValues }\n      // console.log(this.constructor.name, \"get propertyValues\", combined)\n      return combined\n    }\n\n    scaledContextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler : Scaler\n\n    toJSON() : JsonObject {\n      const object = super.toJSON() // gets merger and scaler from propertyValues\n      if (this.effects.length) object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { Cache } from \"../../../Loading\"\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Any, Constrained, Size } from \"../../../Setup/declarations\"\nimport { TrackType } from \"../../../Setup/Enums\"\nimport { Time  } from \"../../../Utilities/Time\"\nimport { Clip } from \"../Clip/Clip\"\nimport { VisibleDefinition } from \"./Visible\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleMixin<TBase extends Constrained<Clip>>(Base: TBase) {\n  return class extends Base {\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      const visibleDefinition = <VisibleDefinition> this.definition\n      const image = visibleDefinition.loadedVisible(definitionTime)\n      if (!image) return\n\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceClass)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { TrackType } from \"../../../Setup/Enums\"\nimport { Constrained } from \"../../../Setup/declarations\"\nimport { ClipDefinition } from \"../Clip/Clip\"\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction VisibleDefinitionMixin<TBase extends Constrained<ClipDefinition>>(Base: TBase) {\n  return class extends Base {\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType, LoadType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\n\nclass ImageDefinitionClass  extends ImageDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    if (source) this.source = source\n\n    Definitions.install(this)\n  }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    if (Cache.cached(this.urlVisible)) {\n      const cached = Cache.get(this.urlVisible)\n      if (cached instanceof Promise) promises.push(cached)\n    } else promises.push(LoaderFactory.image().loadUrl(this.urlVisible))\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    return super.loaded(start, end) && Cache.cached(this.urlVisible)\n  }\n\n  loadedVisible(_time? : Time) : DrawingSource | undefined { return Cache.get(this.urlVisible) }\n\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories.image = ImageFactoryImplementation\n\nexport {\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { JsonObject } from \"../../Setup/declarations\"\nimport { TrackType, DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { byFrame } from \"../../Utilities\"\nimport { Clip, ClipObject } from \"../Mixin/Clip/Clip\"\n\ninterface TrackObject {\n  clips? : ClipObject[]\n  type? : TrackType\n  index? : number\n}\n\ninterface TrackOptions {\n  clips? : Clip[]\n  type? : TrackType\n  index? : number\n}\n\nclass TrackClass {\n  constructor(object : TrackOptions) {\n    const { clips, index, type } = object\n    if (index) this.index = index\n    if (type) this.type = type\n    if (clips) this.clips.push(...clips)\n  }\n\n  clips : Clip[] = []\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  index = 0\n\n  get isMainVideo() : boolean { return !this.index && this.type === TrackType.Video }\n\n  type = TrackType.Video\n\n  addClips(clips : Clip[], insertIndex = 0) : void {\n    // console.log(\"addClips\", clips.length, insertIndex, this.index)\n    let clipIndex = insertIndex || 0\n    if (!this.isMainVideo) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((clip, index) => {\n      const moving = clips.includes(clip)\n      if (moving) movingClips.push(clip)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, ...clips)\n    this.sortClips(spliceClips)\n\n    // set the track of clips we aren't moving\n    const newClips = clips.filter(clip => !movingClips.includes(clip))\n    newClips.forEach(clip => { clip.track = this.index })\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  frameForClipsNearFrame(clips : Clip[], frame = 0) : number {\n    if (this.isMainVideo) return frame\n\n    const others = this.clips.filter(clip => !clips.includes(clip) && clip.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = Math.min(...clips.map(clip => clip.frame))\n    const endFrame = Math.max(...clips.map(clip => clip.endFrame))\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  removeClips(clips : Clip[]) : void {\n    const spliceClips = this.clips.filter(clip => !clips.includes(clip))\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClips\", this.type, this.index, this.clips)\n      throw Errors.internal + 'removeClips'\n    }\n    clips.forEach(clip => { clip.track = -1 })\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.isMainVideo) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(byFrame)\n  }\n\n  toJSON() : JsonObject {\n    return { type: this.type, index: this.index, clips: this.clips }\n  }\n}\n\ninterface Track extends TrackClass {}\n\nexport { Track, TrackClass, TrackObject, TrackOptions}\n","import { Errors} from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Pixel } from \"../../Utilities/Pixel\"\nimport { byTrack } from \"../../Utilities/Sort\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleContext, VisibleContext } from \"../../Playing\"\nimport { ContextFactory } from \"../ContextFactory\"\nimport { Audible } from \"../../Mash/Mixin/Audible/Audible\"\nimport { Visible } from \"../../Mash/Mixin/Visible/Visible\"\nimport { Transition } from \"../../Mash/Transition/Transition\"\n\ninterface ClipTiming {\n  start : number\n  duration : number\n  offset : number\n}\n\ninterface Source {\n  gainNode: GainNode\n  gainSource: AudioBufferSourceNode\n}\n\ninterface CompositionObject {\n  audibleContext? : AudibleContext\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor? : string\n  visibleContext? : VisibleContext\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    const {\n      audibleContext,\n      backcolor,\n      buffer,\n      gain,\n      quantize,\n      visibleContext\n    } = object\n\n    if (backcolor) this.backcolor = backcolor\n\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n\n    if (audibleContext) this._audibleContext = audibleContext\n    else this._audibleContext = ContextFactory.audible()\n\n    if (visibleContext) this._visibleContext = visibleContext\n    else this._visibleContext = ContextFactory.visible()\n\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = this.sourcesByClip.get(clip)\n    if (!source) return\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = this.clipTiming(clip)\n    const { start, duration } = timing\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  private _audibleContext : AudibleContext\n\n  get audibleContext() : AudibleContext { return this._audibleContext }\n\n  set audibleContext(value : AudibleContext) { this._audibleContext = value }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n  private clipTiming(clip : Audible) : ClipTiming {\n    const range = clip.timeRange(this.quantize)\n    const zeroSeconds = this.contextSeconds - this.mashSeconds\n    let offset = 0\n    let start = zeroSeconds + range.seconds\n    let duration = range.lengthSeconds\n\n    if (clip.trim) {\n      range.frame = clip.trim\n      offset = range.seconds\n    }\n    const now = this.audibleContext.currentTime\n    if (now > start) {\n      const dif = now - start\n      start = now\n      offset += dif\n      duration -= dif\n    }\n    return { duration, offset, start }\n  }\n\n  compositeAudible(clips : Audible[]) : boolean {\n    if (!this.createSources(clips)) return false\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time : Time, clips : Visible[]) : void {\n    // console.log(this.constructor.name, \"compositeVisible\", time, clips.length)\n    const main = clips.filter(clip => clip.track === 0)\n    this.drawBackground() // clear and fill with mash background color if defined\n    if (main.length > 1) {\n      const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n      if (!transitionClip) throw Errors.mainTrackOverlap\n\n      const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n      const transition = <Transition> transitionClip\n\n      transition.mergeClipsIntoContextAtTime(\n        transitioned, this.visibleContext, time, this.quantize, this.backcolor\n      )\n    } else {\n      const [mainClip] = main\n      if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    }\n    const tracked = clips.filter(clip => !main.includes(clip)).sort(byTrack)\n    tracked.forEach(clip => {\n      clip.mergeContextAtTime(time, this.quantize, this.visibleContext)\n    })\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    if (Is.populatedArray(clips)) {\n      // console.log(this.constructor.name, \"compositeVisibleRequest calling requestAnimationFrame\", time, clips.length)\n      requestAnimationFrame(() => this.compositeVisible(time, clips))\n      return\n    }\n    this.drawBackground()\n  }\n\n  private contextSeconds = 0\n\n  private createSources(clips : Audible[]) : boolean {\n    const filtered = clips.filter(clip => !this.sourcesByClip.has(clip))\n    return filtered.every(clip => {\n      const { definition } = clip\n      const buffer = definition.loadedAudible()\n      if (!buffer) return false\n\n      const timing = this.clipTiming(clip)\n      const { start, duration, offset } = timing\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        const gainSource = this.audibleContext.createBufferSource()\n        gainSource.buffer = buffer\n        gainSource.loop = clip.definition.loops\n        const gainNode = this.audibleContext.createGain()\n        gainSource.connect(gainNode)\n        gainNode.connect(this.audibleContext.destination)\n        gainSource.start(start, offset, duration)\n\n        this.sourcesByClip.set(clip, { gainSource, gainNode })\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep : Audible[] = []) : void {\n    this.sourcesByClip.forEach((source, clip) => {\n      if (clipsToKeep.includes(clip)) return\n\n      const { gainSource, gainNode } = source\n      gainNode.disconnect(this.audibleContext.destination)\n      gainSource.disconnect(gainNode)\n      this.sourcesByClip.delete(clip)\n    })\n  }\n\n  private drawBackground() : void {\n    this.visibleContext.clear()\n    if (!this.backcolor) return\n\n    this.visibleContext.drawFill(Pixel.color(this.backcolor))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain !== value) {\n      this._gain = value\n      if (!this.playing) return\n\n      [...this.sourcesByClip.keys()].forEach(clip => this.adjustSourceGain(clip))\n    }\n  }\n\n  private mashSeconds = 0\n\n  playing = false\n\n  quantize = Default.mash.quantize\n\n  get seconds() : number {\n    if (!this.audibleContext) throw Errors.internal + 'audibleContext'\n\n    const ellapsed = this.audibleContext.currentTime - this.contextSeconds\n    return ellapsed + this.mashSeconds\n  }\n\n  private sourcesByClip = new Map<Audible, Source>()\n\n  startContext() : void {\n    if (this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n    this.bufferSource = this.audibleContext.createBufferSource()\n    this.bufferSource.loop = true\n    this.bufferSource.buffer = this.audibleContext.createBuffer(this.buffer)\n    this.bufferSource.connect(this.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    // console.log(this.constructor.name, \"startPlaying\")\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.mashSeconds = seconds\n\n    this.contextSeconds = this.audibleContext.currentTime\n\n    if (!this.createSources(clips)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.mashSeconds, this.contextSeconds)\n    return true\n  }\n\n  stopPlaying() : void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.mashSeconds = 0\n    this.contextSeconds = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(this.audibleContext.destination)\n    delete this.bufferSource\n  }\n\n  private _visibleContext : VisibleContext\n\n  get visibleContext() : VisibleContext { return this._visibleContext }\n\n  set visibleContext(value : VisibleContext) { this._visibleContext = value }\n\n}\n\nexport { Composition }\n","import { DefinitionType, DefinitionTypes, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Any, Interval, JsonObject, LoadPromise } from \"../../Setup/declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackClass, TrackObject, TrackOptions } from \"../Track\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Events, EventsType } from \"../../Editing/Events\"\nimport { Clip, ClipDefinition } from \"../Mixin/Clip/Clip\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { MovieMasher } from \"../../MovieMasher\"\nimport { AudibleContext } from \"../../Playing/AudibleContext\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { Composition } from \"../../Playing/Composition/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { InstanceClass } from \"../Instance\"\nimport { Mash, MashDefinition, MashOptions } from \"./Mash\"\nimport { Id } from \"../../Utilities/Id\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashClass extends InstanceClass implements Mash {\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n\n    const object = args[0] || {}\n    const {\n      audio,\n      backcolor,\n      events,\n      label,\n      loop,\n      media,\n      quantize,\n      video,\n      audibleContext,\n      buffer,\n      gain,\n      visibleContext,\n    } = <MashOptions> object\n\n    this._events = events\n\n    if (typeof loop === \"boolean\") this.loop = loop\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n\n    if (media) media.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && Is.populatedString(type))) throw Errors.type + 'Mash.constructor media'\n\n      const definitionType = <DefinitionType> type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && Is.populatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n\n      return MovieMasher[definitionType].definition(definition)\n    })\n\n    if (audio) this.audio.push(...audio.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Audio))\n    ))\n    else this.audio.push(new TrackClass({ type: TrackType.Audio }))\n    if (video) this.video.push(...video.map((track, index) =>\n      new TrackClass(this.trackOptions(track, index, TrackType.Video))\n    ))\n    else this.video.push(new TrackClass({ type: TrackType.Video }))\n\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n\n    if (audibleContext) this._audibleContext = audibleContext\n    if (visibleContext) this._visibleContext = visibleContext\n  }\n\n  addClipsToTrack(clips : Clip[], trackIndex = 0, insertIndex = 0) : void {\n    // console.log(this.constructor.name, \"addClipsToTrack\", trackIndex, insertIndex)\n    this.assureClipsHaveFrames(clips)\n    const [clip] = clips\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        // console.log(\"addClipsToTrack\", newTrack.index, oldTrack.index)\n        oldTrack.removeClips(clips)\n      }\n      newTrack.addClips(clips, insertIndex)\n    })\n  }\n\n  addTrack(trackType : TrackType) : Track {\n    const array = this[trackType]\n    // console.log(\"addTrack\", trackType, array.length)\n    const options = { type: trackType, index: array.length }\n    const track = new TrackClass(options)\n    array.push(track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips : Clip[]) :void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition> clip.definition\n      const duration = definition.duration\n      clip.frames = Time.fromSeconds(duration, this.quantize, 'floor').frame\n    })\n  }\n\n  private _audibleContext? : AudibleContext\n\n  get audibleContext() : AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._composition) this.composition.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value : AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._composition) this.composition.audibleContext = value\n    }\n  }\n\n  audio : Track[] = []\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor() : string { return this._backcolor }\n\n  set backcolor(value : string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n  private _buffer = Default.mash.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames() : number { return this.buffer * this.quantize }\n\n  private get bufferTime() : Time { return Time.fromSeconds(this.buffer) }\n\n  private __bufferTimer? : Interval\n\n  changeClipFrames(clip : Clip, value : number) : void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip : Audible, value : number, frames : number) : void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clipIntersects(clip : Clip, range : TimeRange) : boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip : Clip) : Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip : Clip, index = 0) : Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  private clips(start : Time, end? : Time) : Clip[] {\n    const objects : Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  get clipsInTracks() : Clip[] { return this.tracks.map(track => track.clips).flat() }\n\n  private clipsAudible(start : Time, end? : Time) : Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private get clipsAudibleInTracks() : Audible[] {\n    return <Audible[]> this.clipsInTracks.filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange : TimeRange) : Audible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsAudibleInTracks.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  private get clipsVideo() : Visible[] { return <Visible[]> this.video.flatMap(track => track.clips) }\n\n  private clipsVisible(start : Time, end? : Time) : Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time : Time) : Visible[]  {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  private clipsVisibleInTimeRange(timeRange : TimeRange) : Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  compositeAudible() : boolean {\n    const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n    return this.composition.compositeAudible(clips)\n  }\n\n  private _composition? : Composition\n\n  get composition() : Composition {\n    if (!this._composition) {\n      const options = {\n        audibleContext: this.audibleContext,\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n        visibleContext: this.visibleContext,\n        events: this.events,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible() : void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest() : void {\n    const { time } = this\n    this.composition.compositeVisibleRequest(time, this.clipsVisibleAtTime(time))\n  }\n\n  declare definition : MashDefinition\n\n  destroy() : void {\n    delete this._events\n    delete this._visibleContext\n    delete this._audibleContext\n    delete this._composition\n  }\n\n  private _drawAtInterval? : Interval\n\n  private drawAtInterval() : void {\n    // console.log(this.constructor.name, \"drawAtInterval playing: \", this._playing)\n    if (!this._playing) return\n    const time = this.time.withFrame(this.time.frame + 1)\n    const seconds = this.playing ? this.composition.seconds : time.seconds\n    if (seconds < this.endTime.seconds) {\n      if (seconds >= time.seconds) this.drawTime(time)\n    } else {\n      // console.log(this.constructor.name, \"drawAtInterval finished at\", seconds, this.endTime.seconds)\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else this.paused = true\n    }\n  }\n\n  drawnTime? : Time\n\n  private drawTime(time : Time) : void {\n    delete this.seekTime\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n  }\n\n  get duration() : number { return Time.fromArgs(this.frames, this.quantize).seconds }\n\n  private emitDuration() : void {\n    const info = {\n      value: Time.fromArgs(this.frames, this.quantize).seconds\n    }\n    // console.log(\"emitDuration\", info)\n    this.events?.emit(EventType.Duration, info)\n  }\n\n  private emitIfFramesChange(method : () => void) : void {\n    // console.log(\"emitIfFramesChange\", this.events)\n    const frames = this.events ? this.frames : null\n    method()\n    if (this.events && frames !== this.frames) this.emitDuration()\n  }\n\n  get endTime() : Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  private _events? : Events\n\n  get events() : Events {\n    if (!this._events) this.events = new Events()\n    if (!this._events) throw Errors.internal\n\n    return this._events\n  }\n\n  set events(value : Events) {\n    if (this._events !== value) {\n      if (!value) throw Errors.argument + 'events'\n\n      if (this._events) this._events.removeListener(this.handleEvent.bind(this))\n      this._events = value\n      this._events.addListener(this.handleEvent.bind(this))\n    }\n  }\n\n  get frame() : number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames() : number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      this.composition.gain = value\n    }\n  }\n\n  handleEvent(event : Event) : void {\n    if (event.type !== Events.type) return\n\n    const { detail } = <EventsType> event\n    if (!detail) throw Errors.internal\n\n    const { type, action } = detail\n    if (!type) return\n\n    switch (type) {\n      case EventType.Duration: {\n        // make sure our time is still valid\n        if (this.frame > this.frames) {\n          this.seekToTime(Time.fromArgs(this.frames, this.quantize))\n        }\n        return\n      }\n      case EventType.Action: {\n        if (action && action instanceof ChangeAction) {\n          const changeAction = <ChangeAction> action\n          const { property } = changeAction\n          if (property === \"gain\") {\n            if (this.playing && Is.aboveZero(this.gain)) {\n              this.composition.adjustSourceGain(<Audible> changeAction.target)\n            }\n            return\n          }\n\n          // if (changeAction.target.definition.propertiesModular.find(p => p.name === property)) {\n          //   this.loadAndComposite()\n          //   return\n          // }\n        }\n        break\n      }\n      default: break\n    }\n\n    // console.log(this.constructor.name, \"handleEvent\", event.type)\n\n    this.stopLoadAndDraw()\n  }\n\n  get startAndEnd() : Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  load() : LoadPromise {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const promises = this.clips(start, end).map(clip =>\n      clip.load(this.quantize, start, end)\n    )\n    return Promise.all(promises).then()\n  }\n\n  loadAndComposite() : void {this.load().then(() => { this.compositeVisibleRequest() }) }\n\n  get loadedDefinitions() : DefinitionTimes {\n    const map = <DefinitionTimes> new Map()\n    const [start, end] = this.startAndEnd\n    this.clips(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  get media() : Definition[] {\n    return [...new Set(this.clipsInTracks.flatMap(clip => clip.definitions))]\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused !== forcedValue) {\n      this._paused = forcedValue\n      if (forcedValue) {\n        this.playing = false\n        if (this.__bufferTimer) {\n          clearInterval(this.__bufferTimer)\n          delete this.__bufferTimer\n        }\n      } else {\n        this.composition.startContext()\n        if (!this.__bufferTimer) {\n          this.__bufferTimer = setInterval(() => { this.load() }, Math.round(this.buffer / 2))\n        }\n        this.load().then(() => { this.playing = true })\n      }\n    }\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.log(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      if (value) {\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n          return\n        }\n        this._drawAtInterval = setInterval(() => { this.drawAtInterval()}, 500 / this.time.fps)\n      } else {\n        this.composition.stopPlaying()\n        if (this._drawAtInterval) {\n          clearInterval(this._drawAtInterval)\n          delete this._drawAtInterval\n        }\n      }\n      this._playing = value\n    }\n  }\n\n  removeClipsFromTrack(clips : Clip[]) : void {\n    const [clip] = clips\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClips(clips) })\n  }\n\n  removeTrack(trackType : TrackType) : void {\n    const array = this[trackType]\n    this.emitIfFramesChange(() => { array.pop() })\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time) : LoadPromise {\n    if (this.seekTime !== time) this.seekTime = time\n    return this.stopLoadAndDraw()\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  private stopLoadAndDraw() : LoadPromise {\n    const { time } = this\n    // console.log(this.constructor.name, \"stopLoadAndDraw\", time)\n\n    const paused = this.paused\n    if (this.playing) this.playing = false\n    return this.load().then(() => {\n      if (time !== this.time) {\n        // we must have gotten a seek call\n        // console.log(this.constructor.name, \"stopLoadAndDraw\", time, \"!==\", this.time)\n        return\n      }\n\n      this.drawTime(time)\n      if (!paused) {\n        this.composition.startContext()\n        this.playing = true\n      }\n    })\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor || \"\",\n      id: this.id,\n      media: this.media,\n      audio: this.audio,\n      video: this.video,\n    }\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n\n    // console.log(\"trackOfTypeAtIndex\", type, index)\n    return this[type][index]\n  }\n\n  private trackOptions(object : TrackObject, index : number, type : TrackType) : TrackOptions {\n    const { clips } = object\n    if (!(clips && Is.populatedArray(clips))) return { type, index }\n\n    const objects = clips.map(clip => {\n      const { id } = clip\n      if (!id) throw Errors.id\n\n      const definition = Definitions.fromId(id)\n      const clipWithTrack = { track: index, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    })\n    this.assureClipsHaveFrames(objects)\n    return { type, index, clips: objects }\n  }\n\n  get tracks() : Track[] { return Object.values(TrackType).map(av => this[av]).flat() }\n\n  video : Track[] = []\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      this._visibleContext = ContextFactory.visible()\n\n      if (this._composition) this.composition.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._composition) this.composition.visibleContext = value\n    }\n  }\n}\n\nexport { MashClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\nimport { Any } from \"../../Setup/declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\nclass MashDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"backcolor\", type: DataType.Rgba, value: \"#00000000\" }))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.mash.default\"\n\n  get instance() : Mash {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MashObject) : Mash {\n    const instance = new MashClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n  type = DefinitionType.Mash\n}\n\nexport { MashDefinitionClass }\n","import { Mash, MashDefinition, MashDefinitionObject, MashOptions } from \"./Mash\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { MashDefinitionClass } from \"./MashDefinition\"\n\nconst MashDefaultId = \"com.moviemasher.mash.default\"\n\nconst mashDefinition = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MashDefaultId\n  return <MashDefinition> Definitions.fromId(idString)\n}\n\nconst mashDefinitionFromId = (id : string) : MashDefinition => {\n  return mashDefinition({ id })\n}\n\nconst mashInstance = (object : MashOptions) : Mash => {\n  const definition = mashDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst mashFromId = (id : string) : Mash => {\n  return mashInstance({ id })\n}\n\nconst mashInitialize = () : void => {\n  new MashDefinitionClass({ id: MashDefaultId })\n}\n\nconst mashDefine = (object : MashDefinitionObject) : MashDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return mashDefinition(object)\n}\n\nconst MashFactoryImplementation = {\n  define: mashDefine,\n  definition: mashDefinition,\n  definitionFromId: mashDefinitionFromId,\n  fromId: mashFromId,\n  initialize: mashInitialize,\n  instance: mashInstance,\n}\n\nFactories.mash = MashFactoryImplementation\n\nexport {\n  mashDefine,\n  mashDefinition,\n  mashDefinitionFromId,\n  MashFactoryImplementation,\n  mashFromId,\n  mashInitialize,\n  mashInstance,\n}\n","import {\n  AddTrackAction,\n  MoveClipsAction,\n  AddClipToTrackAction,\n  AddEffectAction,\n  ChangeAction,\n  ChangeFramesAction,\n  ChangeTrimAction,\n  SplitAction,\n  FreezeAction,\n  MoveEffectsAction,\n  RemoveClipsAction,\n  Action,\n  ActionObject,\n} from \"../Action\"\nimport { Capitalize } from \"../../Utilities\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { UnknownObject } from \"../../Setup/declarations\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipsToTrack: AddClipToTrackAction,\n  MoveClips: MoveClipsAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffects: MoveEffectsAction,\n  RemoveClips: RemoveClipsAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import { ActionFactory } from \"../../Editing/Action/ActionFactory\";\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\";\nimport { Actions } from \"../../Editing/Actions/Actions\";\nimport { Events, EventsType } from \"../../Editing/Events/Events\";\nimport { MovieMasher } from \"../../MovieMasher/MovieMasher\";\nimport { AudibleContext } from \"../../Playing/AudibleContext\";\nimport { ContextFactory } from \"../../Playing/ContextFactory\";\nimport { VisibleContext } from \"../../Playing/VisibleContext\";\nimport { Any, Context2D, ContextElement, LoadPromise, SelectionValue, ScalarValue, SelectionObject, UnknownObject } from \"../../Setup/declarations\";\nimport { Default } from \"../../Setup/Default\";\nimport { ActionType, ClipType, ClipTypes, DefinitionType, EventType, MoveType, TrackType, TransformType, TransformTypes } from \"../../Setup/Enums\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Id } from \"../../Utilities\";\nimport { Is } from \"../../Utilities/Is\";\nimport { byFrame } from \"../../Utilities/Sort\";\nimport { Time } from \"../../Utilities/Time\";\nimport { TimeRange } from \"../../Utilities/TimeRange\";\nimport { Definition, DefinitionObject, DefinitionTimes } from \"../Definition/Definition\";\nimport { Definitions } from \"../Definitions\";\nimport { Effect } from \"../Effect/Effect\";\nimport { EffectClass } from \"../Effect/EffectInstance\";\nimport { InstanceClass } from \"../Instance/Instance\";\nimport { Mash, MashObject, MashOptions } from \"../Mash/Mash\";\nimport { Audible } from \"../Mixin/Audible/Audible\";\nimport { Clip } from \"../Mixin/Clip/Clip\";\nimport { Transformable } from \"../Mixin/Transformable/Transformable\";\nimport { Video } from \"../Video/Video\";\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject } from \"./Masher\"\n\nclass MasherClass extends InstanceClass implements Masher {\n  [index : string] : unknown\n  constructor(...args : Any[]) {\n    super(...args)\n    this._id ||= Id()\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      audibleContext,\n      visibleContext,\n      mash,\n      canvas,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n\n    if (typeof audibleContext !== \"undefined\") this._audibleContext = audibleContext\n    if (typeof visibleContext !== \"undefined\") this._visibleContext = visibleContext\n\n    if (canvas) {\n      const context = canvas.getContext(\"2d\")\n      if (context) this._context2D = context\n    }\n\n    this.events.addListener(this.handleMasher.bind(this))\n\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n\n    this.mash = mash || MovieMasher.mash.instance(this.mashOptions())\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelectedClips = object.undoSelectedClips || this.selectedClips\n    const undoSelectedEffects = object.undoSelectedEffects  || this.selectedEffects\n    const redoSelectedClips = object.redoSelectedClips  || this.selectedClips\n    const redoSelectedEffects = object.redoSelectedEffects  || this.selectedEffects\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelectedClips,\n      undoSelectedEffects,\n      redoSelectedClips,\n      redoSelectedEffects,\n    }\n    this.actions.do(ActionFactory.createFromObject(clone))\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = MovieMasher.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = MovieMasher[definitionType].definition(object)\n\n    const clip = <Clip> definition.instance\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const clips = [clip]\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipsToTrack,\n      redoSelectedClips: clips,\n      trackType,\n    }\n    const track = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const trackCount = this.mash[trackType].length\n    if (track.isMainVideo) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipsNearFrame(clips, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    const redoSelectedEffects = [effect]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelectedEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  private _audibleContext? : AudibleContext\n\n  get audibleContext() : AudibleContext {\n    if (!this._audibleContext) {\n      this._audibleContext = ContextFactory.audible()\n      if (this._mash) this.mash.audibleContext = this._audibleContext\n    }\n    return this._audibleContext\n  }\n\n  set audibleContext(value : AudibleContext) {\n    if (this._audibleContext !== value) {\n      this._audibleContext = value\n      if (this._mash) this.mash.audibleContext = value\n    }\n  }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value : number) {\n    if (this._buffer !== value) {\n      this._buffer = value\n      this.mash.buffer = value\n    }\n  }\n\n  can(method : string) : boolean {\n    const z = this._selectedClips.length\n    switch (method) {\n      case 'save': return this.actions.canSave\n      case 'undo': return this.actions.canUndo\n      case 'redo': return this.actions.canRedo\n      case 'copy': return z > 0\n      case 'cut':\n      case 'remove': return !!z // TODO: check removing won't create transition problem\n      case 'split': return z === 1 && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      case 'freeze': return (\n        z === 1\n        && DefinitionType.Video === this.selectedClipOrThrow.type\n        && this.clipCanBeSplit(this.selectedClipOrThrow, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  get canvas() : ContextElement { return this.visibleContext.canvas }\n\n  set canvas(value : ContextElement) {\n    // console.log(this.constructor.name, \"set canvas\")\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.internal + 'context2d'\n\n    this.events.target = value\n    this.context2d = context2d\n  }\n\n  change(property : string, value? : SelectionValue) : void {\n    if (Is.populatedObject(this.selectedClip)) {\n      if (Is.populatedObject(this.selectedEffect)) this.changeEffect(property, value, this.selectedEffect)\n      else this.changeClip(property, value, this.selectedClipOrThrow)\n    } else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selectedClipOrThrow\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selectedEffectOrThrow\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      return\n    }\n    const undoValue = typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeMash(property : string, value?: SelectionValue) : void {\n    if (!this.mash.propertyNames.includes(property)) throw Errors.unknownMash\n    if (!this._pristine) throw Errors.internal\n\n    const target = this.mash\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      return changeAction.updateAction(redoValue)\n    }\n\n    const undoValue = typeof value === \"undefined\" ? this._pristine[property] : target.value(property)\n    const options = {\n      target,\n      property,\n      redoValue,\n      undoValue,\n      type: ActionType.Change,\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selectedClipOrThrow\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    const pristineTarget = this._pristine[transformType]\n    if (typeof pristineTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = pristineTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(pristineTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  private _context2D? : Context2D\n\n  get context2d() : Context2D {\n    return this.visibleContext.context2d\n  }\n\n  set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\")\n    if (this._context2D !== value) {\n      this._context2D = value\n      if (this._visibleContext) {\n        this.visibleContext.context2d = value\n        this.mash.compositeVisible()\n      }\n    }\n  }\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get definitions() : Definition[] { return this.mash.media }\n\n  // call when player removed from DOM\n  destroy() : void { MovieMasher.masher.destroy(this) }\n\n  draw() : void { this.mash.compositeVisible() }\n\n  get duration() : number { return this.mash.duration }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  private _events? : Events\n\n  private get events() : Events {\n    if (!this._events) {\n      this._events = new Events({ target: this.canvas })\n    }\n    return this._events\n  }\n\n  private filterClipSelection(value : Clip | Clip[]) : Clip[] {\n    const clips : Clip[] = Array.isArray(value) ? value : [value]\n\n    const [firstClip] = clips\n    if (!firstClip) return []\n\n    const { trackType, track } = firstClip\n\n    // selected clips must all be on same track\n    const trackClips = clips.filter(clip => (\n      clip.track === track && clip.trackType === trackType\n    )).sort(byFrame)\n\n    if (track || trackType === TrackType.Audio) return trackClips\n\n    // selected clips on main track must be abutting each other\n    let abutting = true\n    return trackClips.filter((clip : Clip, index : number) => {\n      if (!abutting) return false\n\n      if (index === trackClips.length - 1) return true\n\n      abutting = clip.frame + clip.frames === trackClips[index + 1].frame\n      return true\n    })\n  }\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps }\n\n  set fps(value : number) {\n    if (!Is.aboveZero(value)) throw Errors.fps\n\n    if (this._fps !== value) {\n      this._fps = value\n      this.time = this.time.scale(value)\n    }\n  }\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(value, this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const clip = this.selectedClipOrThrow\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelectedClips: [frozenClip],\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value : Time) : LoadPromise {\n    // console.log(this.constructor.name, \"goToTime\", value)\n    return this.mash.seekToTime(value.scaleToFps(this.fps))\n  }\n\n  private handleMasher(event : Event) : Any {\n    // console.log(\"handleMasher\", event.type)\n    if (event.type !== Events.type) return\n\n    const { detail } = <EventsType> event\n    // console.log(\"handleMasher\", detail.type)\n\n    if (detail.type === EventType.Action) {\n      const { action } = detail\n      if (!action) throw Errors.internal + 'action'\n\n      this.selectedClips = action.selectedClips\n      this.selectedEffects = action.selectedEffects\n    }\n  }\n\n  private loadMash() : LoadPromise { return this.mash.load() }\n\n  private loadMashAndDraw() : LoadPromise { return this.loadMash().then(() => { this.draw() }) }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value : boolean) {\n    this._loop = value\n    if (this._mash) this.mash.loop = value\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (!this._mash) throw Errors.internal\n    return this._mash\n  }\n\n  set mash(object : Mash) {\n    if (this._mash === object) return\n\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    this._mash.events = this.events\n    this._mash.visibleContext = this.visibleContext\n    this._mash.audibleContext = this.audibleContext\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    this.goToTime(Time.fromArgs(0, this.fps))\n    if (this.autoplay) this.paused = false\n  }\n\n  private mashOptions(mashObject : MashObject = {}) : MashOptions {\n    return {\n      ...mashObject,\n      audibleContext: this.audibleContext,\n      buffer: this.buffer,\n      events: this.events,\n      gain: this.gain,\n      loop: this.loop,\n      visibleContext: this.visibleContext,\n    }\n  }\n\n  move(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument + 'move'\n\n    if (moveType === MoveType.Effect) {\n      this.moveEffects(<Effect | Effect[]> objectOrArray, frameOrIndex)\n      return\n    }\n\n    this.moveClips(<Clip | Clip[]>objectOrArray, frameOrIndex, trackIndex)\n  }\n\n  moveClips(clipOrArray : Clip | Clip[], frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClips\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClips frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moviClips trackIndex'\n\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument + 'moviClips clips'\n\n    const [firstClip] = clips\n    const { trackType, track: undoTrackIndex } = firstClip\n    const options : Any = {\n      clips,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClips\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(firstClip)\n\n    if (redoTrack.isMainVideo) options.insertIndex = frameOrIndex\n    if (undoTrack.isMainVideo) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += clips.length\n    }\n\n    if (!(redoTrack.isMainVideo && undoTrack.isMainVideo)) {\n      const frames = clips.map(clip => clip.frame)\n      const insertFrame = redoTrack.frameForClipsNearFrame(clips, frameOrIndex)\n      const offset = insertFrame - firstClip.frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrames = frames\n      options.redoFrames = frames.map(frame => frame + offset)\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffects(effectOrArray : Effect | Effect[], index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const moveEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(moveEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((effect, i) => {\n      if (i === index) redoEffects.push(...moveEffects)\n      if (moveEffects.includes(effect)) return\n\n      redoEffects.push(effect)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffects\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value : boolean) {\n    if (this._muted !== value) {\n      this._muted = value\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  private _paused = true\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * value, this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  private _pristine? : SelectionObject\n\n  private get pristineOrThrow() {\n    if (!this._pristine) throw Errors.internal\n    return this._pristine\n  }\n\n  private _pristineEffect? : SelectionObject\n\n  private get pristineEffectOrThrow() {\n    if (!this._pristineEffect) throw Errors.internal\n    return this._pristineEffect\n  }\n\n  redo() : void { if (this.actions.canRedo) this.actions.redo() }\n\n  remove(objectOrArray : ClipOrEffect | ClipOrEffect[], moveType : MoveType) : void {\n    if (!Is.object(objectOrArray)) throw Errors.argument\n\n    if (moveType === MoveType.Effect) {\n      this.removeEffects(<Effect[]> objectOrArray)\n      return\n    }\n\n    this.removeClips(<Clip[]> objectOrArray)\n  }\n\n  removeClips(clipOrArray : Clip | Clip[]) : void {\n    const clips = this.filterClipSelection(clipOrArray)\n    if (!Is.populatedArray(clips)) throw Errors.argument\n\n    const [firstClip] = clips\n    const track = this.mash.clipTrack(firstClip)\n    const options = {\n      redoSelectedClips: [],\n      clips,\n      track,\n      index: track.clips.indexOf(firstClip),\n      type: ActionType.RemoveClips\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffects(effectOrArray : Effect | Effect[]) : void {\n    const array = Array.isArray(effectOrArray) ? effectOrArray : [effectOrArray]\n    const removeEffects = array.filter(effect => effect instanceof EffectClass)\n    if (!Is.populatedArray(removeEffects)) throw Errors.argument\n\n    const { effects } = <Transformable> this.selectedClipOrThrow\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(effect => !removeEffects.includes(effect))\n\n    const options = {\n      redoSelectedEffects: [],\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffects\n    }\n    this.actionCreate(options)\n  }\n\n  save() : void { this.actions.save() }\n\n  select(object : ClipOrEffect | undefined, toggleSelected = false) : void {\n    if (!object) {\n      this.selectedClips = []\n      return\n    }\n\n    if (object instanceof EffectClass) {\n      this.selectEffect(object, toggleSelected)\n      return\n    }\n\n    const { type } = object\n\n    if (type === DefinitionType.Mash) {\n      this.selectMash()\n      return\n    }\n\n    this.selectClip(<Clip> object, toggleSelected)\n  }\n\n  selectClip(clip : Clip | undefined, toggleSelected : boolean) : void {\n    const array : Clip[] = []\n    if (clip) {\n      if (toggleSelected) {\n        array.push(...this.selectedClips)\n        const index = this.selectedClips.indexOf(clip)\n        if (index > -1) array.splice(index, 1)\n        else array.push(clip)\n      } else if (this.selectedClips.includes(clip)) array.push(...this.selectedClips)\n      else array.push(clip)\n    }\n    this.selectedClips = array\n  }\n\n  selectEffect(effect : Effect | undefined, toggleSelected : boolean) : void {\n    const array : Effect[] = []\n    if (effect) {\n      if (toggleSelected) {\n        array.push(...this.selectedEffects)\n        const index = this.selectedEffects.indexOf(effect)\n        if (index > -1) array.splice(index, 1)\n        else array.push(effect)\n      } else array.push(effect)\n    }\n    this.selectedEffects = array\n  }\n\n  selectMash() : void {\n    this.selectedClips = []\n  }\n\n  selected(object : ClipOrEffect) : boolean {\n    if (object instanceof EffectClass) return this.selectedEffects.includes(object)\n\n    return this.selectedClips.includes(<Clip> object)\n  }\n\n\n  get selectedClip() : Clip | UnknownObject {\n    if (this._selectedClips.length === 1) return this.selectedClipOrThrow\n\n    return this.selectedClipObject\n  }\n\n  set selectedClip(value : Clip | UnknownObject) {\n    if (value && Is.populatedObject(value)) {\n      const clip = <Clip> value\n      const { type } = clip\n      const clipType = <ClipType> String(type)\n\n      if (!ClipTypes.includes(clipType)) {\n        console.warn(this.constructor.name, \"set selectedClip invalid type\", value)\n        return\n      }\n      this.selectedClips = [clip]\n    } else this.selectedClips = []\n  }\n\n  private selectedClipObject = {}\n\n  get selectedClipOrMash() : Clip | Mash {\n    const value = this.selectedClip\n    if (Is.populatedObject(value)) return this.selectedClipOrThrow\n\n    return this.mash\n  }\n\n  private get selectedClipOrThrow() : Clip {\n    const clip = this._selectedClips[0]\n    if (!clip) throw Errors.selection\n\n    return clip\n  }\n\n  private _selectedClips : Clip[] = []\n\n  get selectedClips() : Clip[] { return this._selectedClips }\n\n  set selectedClips(value : Clip[]) {\n    this._selectedClips = this.filterClipSelection(value)\n    this._pristine = this.selectedClipOrMash.propertyValues\n    this.selectedEffects = []\n  }\n\n  get selectedEffect() : Effect | undefined {\n    if (this._selectedEffects.length !== 1) return\n\n    return this._selectedEffects[0]\n  }\n\n  set selectedEffect(value : Effect | undefined) {\n    if (value) this.selectedEffects = [value]\n    else this.selectedEffects = []\n  }\n\n  get selectedEffectOrThrow() : Effect {\n    const effect = this.selectedEffect\n    if (!effect) throw Errors.selection\n    return effect\n  }\n\n  private _selectedEffects : Effect[] = []\n\n  get selectedEffects() : Effect[] { return this._selectedEffects }\n\n  set selectedEffects(value : Effect[]) {\n    const { effects } = this.selectedClipOrMash\n    if (!effects) { // mash or multiple clips selected, or no effects\n      this._selectedEffects = []\n      this._pristineEffect = {}\n      return\n    }\n    const array = <Effect[]> effects\n    this._selectedEffects = value.filter(effect => array.includes(effect))\n    this._pristineEffect = (this.selectedEffect && this.selectedEffect.propertyValues) || {}\n  }\n\n  private get silenced() : boolean { return this._paused || this.muted || !this.gain }\n\n  split() : void {\n    const splitClip = this.selectedClipOrThrow\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<Audible> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelectedClips: [insertClip],\n      undoSelectedClips: [splitClip],\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) { this.goToTime(value) }\n\n  undo() : void { if (this.actions.canUndo) this.actions.undo() }\n\n  private _visibleContext? : VisibleContext\n\n  get visibleContext() : VisibleContext {\n    if (!this._visibleContext) {\n      if (typeof this._context2D === \"undefined\") {\n        this._visibleContext = ContextFactory.visible()\n      } else this._visibleContext = ContextFactory.fromContext2D(this._context2D)\n\n      if (this._mash) this.mash.visibleContext = this._visibleContext\n    }\n    return this._visibleContext\n  }\n\n  set visibleContext(value : VisibleContext) {\n    if (this._visibleContext !== value) {\n      this._visibleContext = value\n      if (this._mash) this.mash.visibleContext = value\n    }\n  }\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value : number) {\n    if (this._volume !== value) {\n      if (!Is.positive(value)) throw Errors.invalid.volume\n      this._volume = value\n      if (Is.aboveZero(value)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\nexport { MasherClass }\n","import { DefinitionClass } from \"../Definition/Definition\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\nimport { Any } from \"../../Setup/declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Default } from \"../../Setup\"\n\nclass MasherDefinitionClass extends DefinitionClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    this.properties.push(new Property({ name: \"autoplay\", type: DataType.Boolean, value: Default.masher.autoplay }))\n    this.properties.push(new Property({ name: \"precision\", type: DataType.Number, value: Default.masher.precision }))\n    this.properties.push(new Property({ name: \"loop\", type: DataType.Boolean, value: Default.masher.loop }))\n    this.properties.push(new Property({ name: \"fps\", type: DataType.Number, value: Default.masher.fps }))\n    this.properties.push(new Property({ name: \"volume\", type: DataType.Number, value: Default.masher.volume }))\n    this.properties.push(new Property({ name: \"buffer\", type: DataType.Number, value: Default.masher.buffer}))\n    Definitions.install(this)\n  }\n\n  id = \"com.moviemasher.masher.default\"\n\n  get instance() : Masher {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MasherObject) : Masher {\n    const instance = new MasherClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Masher\n}\n\nexport { MasherDefinitionClass }\n","import { Masher, MasherDefinition, MasherDefinitionObject, MasherObject } from \"./Masher\"\nimport { Interval } from \"../../Setup/declarations\"\nimport { Definition, DefinitionTimes } from \"../Definition/Definition\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Factories } from \"../Factories/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { MasherDefinitionClass } from \"./MasherDefinition\"\n\nconst MasherIntervalTics = 10 * 1000\nconst MasherDefaultId = \"com.moviemasher.masher.default\"\n\nlet MasherInterval : Interval | undefined\n\nconst mashers : Masher[] = []\n\nconst addMasher = (masher : Masher) => {\n  if (!mashers.length) masherStart()\n  mashers.push(masher)\n}\n\nconst masherDestroy = (masher : Masher) : void => {\n  const index = mashers.indexOf(masher)\n  if (index < 0) return\n\n  mashers.splice(index, 1)\n  if (!mashers.length) masherStop()\n}\n\nconst handleInterval = () => {\n  // console.log(constructor.name, \"handleInterval\")\n  const map = <DefinitionTimes> new Map()\n  const definitions = new Set<Definition>()\n\n  mashers.forEach(masher => {\n    masher.definitions.forEach(definition => { definitions.add(definition) })\n\n    const masherMap = masher.loadedDefinitions\n    masherMap.forEach((times, definition) => {\n      if (!map.has(definition)) map.set(definition, [])\n      const definitionTimes = map.get(definition)\n      if (!definitionTimes) throw Errors.internal\n\n      definitionTimes.push(...times)\n    })\n  })\n  map.forEach((times, definition) => {\n    definition.unload(times)\n  })\n\n  Definitions.map.forEach(definition => {\n    if (definitions.has(definition)) {\n      // definition used in a masher (masher.mash.media)\n      if (map.has(definition)) {\n        // definition needs to be at least partially loaded\n        definition.unload(map.get(definition))\n      } else {\n        // definition can be completely unloaded, but not uninstalled\n        definition.unload()\n      }\n    } else {\n      // definition is not used anywhere - unload, and uninstall if not retained\n      definition.unload()\n      if (!definition.retain) Definitions.uninstall(definition.id)\n    }\n  })\n}\n\nconst masherStart = () => {\n  // console.log(constructor.name, \"masherStart\")\n  if (MasherInterval) return\n\n  MasherInterval = setInterval(handleInterval, MasherIntervalTics)\n}\n\nconst masherStop = () => {\n  // console.log(constructor.name, \"masherStop\")\n  if (!MasherInterval) return\n\n  clearInterval(MasherInterval)\n  MasherInterval = undefined\n}\n\nconst masherDefinition = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) && Definitions.installed(id) ? id : MasherDefaultId\n\n  return <MasherDefinition> Definitions.fromId(idString)\n}\n\nconst masherDefinitionFromId = (id : string) : MasherDefinition => {\n  return masherDefinition({ id })\n}\n\nconst masherInstance = (object : MasherObject = {}) : Masher => {\n  const definition = masherDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  addMasher(instance)\n  return instance\n}\n\nconst masherFromId = (id : string) : Masher => {\n  return masherInstance({ id })\n}\n\nconst masherInitialize = () : void => {\n  new MasherDefinitionClass({ id: MasherDefaultId })\n}\n\nconst masherDefine = (object : MasherDefinitionObject) : MasherDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'masherDefine'\n\n  Definitions.uninstall(id)\n  return masherDefinition(object)\n}\n\nconst MasherFactoryImplementation = {\n  define: masherDefine,\n  definition: masherDefinition,\n  definitionFromId: masherDefinitionFromId,\n  destroy: masherDestroy,\n  fromId: masherFromId,\n  initialize: masherInitialize,\n  instance: masherInstance,\n}\n\nFactories.masher = MasherFactoryImplementation\n\nexport {\n  masherDefine,\n  masherDefinition,\n  masherDefinitionFromId,\n  masherDestroy,\n  MasherFactoryImplementation,\n  masherFromId,\n  masherInitialize,\n  masherInstance,\n}\n","import { Size } from \"../../Setup/declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceClass)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n  declare definition : ThemeDefinition\n}\n\n\nexport { ThemeClass }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any, DefinitionType } from \"../../Setup\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\n\n\nconst ThemeDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst ThemeDefinitionWithClip = ClipDefinitionMixin(ThemeDefinitionWithModular)\nconst ThemeDefinitionWithVisible = VisibleDefinitionMixin(ThemeDefinitionWithClip)\n\nclass ThemeDefinitionClass extends ThemeDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ThemeObject) : Theme {\n    const options = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", options)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { UnknownObject } from \"../../Setup/declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport themeColorJson from \"./DefinitionObjects/color.json\"\nimport themeTextJson from \"./DefinitionObjects/text.json\"\nimport themeTitleJson from \"./DefinitionObjects/title.json\"\nimport { Factories } from \"../Factories\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n  new ThemeDefinitionClass(themeTitleJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories.theme = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { TransitionDefinition } from \"./Transition\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ModularMixin } from \"../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../Mixin/Visible\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { Size } from \"../../Setup/declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceClass)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible {\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../Setup/declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { byFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionClass)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(byFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport transitionCrossfadeJson from \"./DefinitionObjects/crossfade.json\"\nimport { Factories } from \"../Factories/Factories\"\nimport {\n  Transition,\n  TransitionDefinition,\n  TransitionDefinitionObject,\n  TransitionObject,\n} from \"./Transition\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories.transition = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceClass } from \"../Instance/Instance\"\nimport { ClipMixin } from \"../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../Setup/declarations\"\nimport { Time } from \"../../Utilities/Time\"\n\nconst VideoWithClip = ClipMixin(InstanceClass)\nconst VideoWithAudible = AudibleMixin(VideoWithClip)\nconst VideoWithVisible = VisibleMixin(VideoWithAudible)\nconst VideoWithTransformable = TransformableMixin(VideoWithVisible)\n\nclass VideoClass extends VideoWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n\n}\n\nexport { VideoClass }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities\"\nimport { Cache } from \"../../Loading\"\nimport { DefinitionClass } from \"../Definition/Definition\"\nimport { VideoClass } from \"./VideoInstance\";\nimport { Video, VideoDefinitionObject, VideoObject } from \"./Video\";\nimport { ClipDefinitionMixin } from \"../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, DrawingSource, JsonObject, LoadPromise } from \"../../Setup/declarations\";\nimport { Errors } from \"../../Setup/Errors\";\nimport { Definitions } from \"../Definitions/Definitions\";\nimport { AudibleDefinitionMixin } from \"../Mixin/Audible/AudibleDefinitionMixin\";\nimport { Default, Property } from \"../../Setup\";\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\";\n\nconst VideoDefinitionWithClip = ClipDefinitionMixin(DefinitionClass)\nconst VideoDefinitionWithAudible = AudibleDefinitionMixin(VideoDefinitionWithClip)\nconst VideoDefinitionWithVisible = VisibleDefinitionMixin(VideoDefinitionWithAudible)\nclass VideoDefinitionClass extends VideoDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, begin, fps, increment, pattern, video_rate, source } = <VideoDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n\n    if (typeof begin !== \"undefined\") this.begin = begin\n\n    if (fps || video_rate) this.fps = Number(fps || video_rate) // deprecated string\n\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.video.begin\n\n  fps = Default.definition.video.fps\n\n  private frames(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.video.increment\n\n  get instance() : Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoObject) : Video {\n    return new VideoClass({ ...this.instanceObject, ...object })\n  }\n\n  load(start : Time, end? : Time) : LoadPromise {\n    const promises = [super.load(start, end)]\n    const frames = this.frames(start, end)\n    frames.forEach(frame => {\n      const url = this.urlForFrame(frame)\n      if (Cache.cached(url)) {\n        const cached = Cache.get(url)\n        if (cached instanceof Promise) promises.push(cached)\n      } else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    return Promise.all(promises).then()\n  }\n\n  loaded(start : Time, end? : Time) : boolean {\n    if (!super.loaded(start, end)) return false\n\n    return this.frames(start, end).every(frame => Cache.cached(this.urlForFrame(frame)))\n  }\n\n  loadedVisible(time? : Time) : DrawingSource | undefined {\n    if (!time) throw Errors.internal\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.video.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.video.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.video.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  unload(times? : Times[]) : void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.frames(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.zeropadding) s = s.padStart(this.zeropadding, '0')\n    return (this.url + this.pattern).replaceAll('%', s)\n  }\n\n  urls(start : Time, end? : Time) : string[] {\n    return this.frames(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  get zeropadding() : number {\n    if (!this.__zeropadding) {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.__zeropadding = String(lastFrame).length\n\n    }\n    return this.__zeropadding\n  }\n\n  private __zeropadding? : number\n}\n\nexport { VideoDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../Definitions\"\nimport { Factories } from \"../Factories\"\nimport { VideoDefinitionClass } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClass(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories.video = VideoFactoryImplementation\n\nexport {\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { MovieMasher } from \"../MovieMasher\";\nimport { DefinitionTypes } from \"../Setup\";\nDefinitionTypes.forEach(type => {\n  // console.log(\"initializing!\", type)\n  MovieMasher[type].initialize()\n})\n"],"names":["ActionType","TrackType","ClipType","ClipTypes","Object","values","DefinitionType","DefinitionTypes","EventType","MashType","MashTypes","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","$invalidArgument","$invalidProperty","$deprecated","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","mash","action","actions","internal","argument","invalid","definition","duration","audio","url","source","id","object","track","trackType","name","value","type","property","factory","volume","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frame","frames","fps","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","deprecation","property_types","addModulesOfType","configure","set","canvas_context","wrongClass","Action","[object Object]","this","redoSelectedClips","redoSelectedEffects","undoSelectedClips","undoSelectedEffects","events","selectedClips","done","selectedEffects","redoAction","emit","undoAction","AddTrackAction","super","addTrack","removeTrack","ChangeAction","redoValue","target","undoValue","redoValueNumeric","Number","undoValueNumeric","redo","FreezeAction","freezeClip","frozenClip","index","insertClip","trackClips","splice","ChangeFramesAction","clip","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","AddEffectAction","effects","AddClipToTrackAction","createTracks","insertIndex","trackIndex","clips","i","addClipsToTrack","removeClipsFromTrack","MoveClipsAction","redoFrames","undoFrames","undoInsertIndex","undoTrackIndex","forEach","setFrames","addClips","RemoveClipsAction","SplitAction","splitClip","MoveEffectsAction","redoEffects","undoEffects","length","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","removed","push","undo","Events","Set","__target","methods","removeListener","addListener","method","add","addEventListener","info","event","detail","dispatchEvent","CustomEvent","delete","removeEventListener","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","isPopulatedString","String","isPopulatedObject","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","Cache","Map","key","cachedByKey","urlsByKey","has","replaceAll","scaleTimes","time1","time2","rounding","gcf","a","b","fps1","fps2","t","greatestCommonDenominator","scale","roundWithMethod","Math","ceil","floor","round","roundingMethod","Time","copy","description","min","scaleToTime","subtracted","rounded","fromArgs","AudibleContext","context","__context","Klass","AudioContext","window","webkitAudioContext","createBuffer","createBufferSource","createGain","buffer","Promise","resolve","reject","decodeAudioData","audioData","error","destination","fromSeconds","currentTime","Point0","x","y","VisibleContext","context2d","__context2d","alpha","globalAlpha","canvas","clearSize","size","clearRect","rect","width","height","composite","globalCompositeOperation","globalThis","document","createElement","getContext","dataUrl","toDataURL","drawAtPoint","point","drawImage","fill","drawFillToSize","fillOriginal","fillRect","drawFillInRect","data","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","JSON","stringify","drawInRectFromRect","inSize","fromSize","text","style","drawTextAtPoint","family","color","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","fromEntries","map","ContextFactoryInstance","visible","types","Processor","_url","_buffer","AudioProcessor","_audibleContext","ContextFactory","audible","decode","FontProcessor","face","FontFace","load","then","fonts","ModuleProcessor","Loader","cached","promiseOrCached","promise","requestUrl","processed","Capitalize","toUpperCase","substr","classes","Audio","Font","Module","ProcessorFactory","loader","AudioLoader","fetch","response","arrayBuffer","loaded","options","process","FontLoader","ImageLoader","Image","image","crossOrigin","src","ModuleLoader","import","InstanceClass","args","label","_id","_label","instanceFromObject","toJSON","definitions","quantize","scaleToFps","start","end","startTime","definitionTime","endTime","propertyNames","properties","propertyValues","includes","TypeValue","identifier","Type","modular","TypesInstance","entries","entry","dataType","propertyTypes","instance","console","trace","propertyType","dataTypesJson","Property","custom","Types","rgbValue","max","rgbNumeric","rgb","r","g","yuvNumeric","u","v","Color","yuvBlend","yuvs","yuv","match","blend","diff","blendYuv","yuvObject","numericYuv","du","dv","sqrt","rgb2yuv","ints","yuv2rgb","floats","rgb2hex","toString","Id","Date","now","random","rgbaAtIndex","pixels","safePixel","pixel","offsetPoint","pt","toPoint","fromPoint","Pixel","slice","surroundingRgbas","halfSize","depth","safePixels","p","toIndex","rgba","byFrame","byTrack","byLabel","Sort","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","element","join","Evaluator","mergeContext","setInputSize","conditionals","trueConditional","find","expression","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","bind","inputSize","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","other","TimeRange","range1","range2","scaledTime","scaledRange","range","DefinitionClass","icon","instanceObject","_start","_end","_time","propertiesModular","_times","Default","masher","loop","precision","autoplay","backcolor","gain","trim","video","speed","theme","transition","pattern","increment","begin","Parameter","AudibleMixin","Base","z","gainPairs","trimTime","withFrame","muted","space","ClipMixin","Video","endFrame","_quantize","_trim","AudioWithAudible","AudioClass","ClipPropertyObjects","Integer","ClipDefinitionMixin","_duration","LoaderFactory","AudibleDefinitionMixin","loops","waveform","urlAudible","promises","loadUrl","all","times","unload","some","maybePair","definitionsMap","DefinitionsByType","definitionsByType","list","definitionsList","definitionsClear","clear","definitionsFont","definitionsFromId","definitionsInstalled","definitionsInstall","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","log","indexOf","Definitions","byType","fromId","install","installed","uninstall","AudioDefinitionWithAudible","AudioDefinitionClass","audioObject","Factories","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","AudioFactoryImplementation","define","definitionFromId","initialize","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","FilterDefinitionClass","Filter","_evaluator","_evaluated","BlendFilter","modes","Mode","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","offset","reverse","matrix","drawImageData","ColorFilter","drawFill","ColorChannelMixerFilter","rgbas","first","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","bias","rdiv","channel","parseInt","parse","input","output","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","outWidth","outHeight","drawInSizeFromSize","SetSarFilter","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","filters","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","ModularMixin","constructProperties","modularDefinitions","every","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","Effect","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","MovieMasher","static","Mash","Masher","Theme","Transition","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","flatMap","mashTime","dimensions","scaledContext","scaledContextAtTimeToSize","clipTimeRange","timeRangeRelative","drawFilters","effected","effectedContextAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_context","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionClass","urlVisible","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","ImageFactoryImplementation","TrackClass","isMainVideo","clipIndex","origIndex","movingClips","spliceClips","moving","sortClips","others","startFrame","lastFrame","isTransition","sort","Composition","visibleContext","_visibleContext","_gain","sourcesByClip","gainNode","timing","clipTiming","cancelScheduledValues","pair","linearRampToValueAtTime","contextSeconds","mashSeconds","dif","createSources","destroySources","main","drawBackground","transitionClip","transitioned","mergeClipsIntoContextAtTime","mainClip","mergeContextAtTime","requestAnimationFrame","compositeVisible","loadedAudible","gainSource","connect","adjustSourceGain","clipsToKeep","disconnect","playing","bufferSource","stopPlaying","stop","MashClass","_events","_backcolor","definitionId","definitionType","trackOptions","assureClipsHaveFrames","newTrack","clipTrackAtIndex","oldTrack","clipTrack","emitIfFramesChange","removeClips","_composition","bufferFrames","bufferTime","limitedValue","maxFrames","newFrames","intersects","trackOfTypeAtIndex","objects","clipsVisible","clipsAudible","clipsInTracks","tracks","flat","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","clipIntersects","clipsVideo","clipsVisibleInTimeRange","fromTime","clipsAudibleInTimeRange","timeRangeToBuffer","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","_playing","drawTime","seekToTime","paused","seekTime","drawnTime","Duration","emitDuration","handleEvent","changeAction","stopLoadAndDraw","startAndEnd","loadedDefinitions","definitionTimes","_paused","forcedValue","__bufferTimer","clearInterval","startContext","setInterval","startPlaying","_drawAtInterval","drawAtInterval","pop","stalled","constructor","clipWithTrack","av","MashDefinitionClass","Rgba","MashDefaultId","mashDefinition","mashDefinitionFromId","mashInstance","mashFromId","mashInitialize","mashDefine","MashFactoryImplementation","AddTrack","AddClipsToTrack","MoveClips","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffects","RemoveClips","ActionFactory","MasherClass","_loop","_context2D","handleMasher","_fps","_volume","mashOptions","clone","do","createFromObject","_actions","frameOrIndex","addEffect","clipType","addClip","trackCount","frameForClipsNearFrame","actionCreate","loadMashAndDraw","selectedClipOrThrow","_mash","_selectedClips","clipCanBeSplit","selectedClip","selectedEffect","changeEffect","changeClip","changeMash","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","pristineOrThrow","selectedEffectOrThrow","pristineEffectOrThrow","_pristine","transformType","transformable","transformTarget","pristineTarget","destroy","firstClip","abutting","goToTime","loadMash","_selectedEffects","mashObject","objectOrArray","moveType","moveClips","moveEffects","clipOrArray","filterClipSelection","redoTrack","undoTrack","currentIndex","effectOrArray","_muted","per","toFixed","positionStep","repeat","_pristineEffect","removeEffects","save","toggleSelected","selectEffect","selectClip","selectMash","selectedClipObject","warn","selectedClipOrMash","silenced","fromContext2D","MasherDefinitionClass","Boolean","MasherDefaultId","MasherInterval","mashers","masherDestroy","masherStop","handleInterval","retain","masherStart","masherDefinition","masherDefinitionFromId","masherInstance","masherFromId","masherInitialize","masherDefine","MasherFactoryImplementation","ThemeWithTransformable","ThemeClass","ThemeDefinitionWithVisible","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeTitleJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","from","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromClip","toClip","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","VideoWithTransformable","VideoClass","divide","VideoDefinitionWithVisible","VideoDefinitionClass","video_rate","framesMax","urlForFrame","urls","zeroTime","allUrls","deleting","s","zeropadding","padStart","__zeropadding","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","VideoFactoryImplementation"],"mappings":"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"}