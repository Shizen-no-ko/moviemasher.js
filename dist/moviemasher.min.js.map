{"version":3,"file":"moviemasher.min.js","sources":["../src/Setup/Errors.ts","../src/Utilities/Is.ts","../src/Utilities/Id.ts","../src/Setup/Enums.ts","../src/Setup/TypeValue.ts","../src/Utilities/Color.ts","../src/Definitions/Definitions.ts","../src/Setup/Type.ts","../src/Setup/Types.ts","../src/Setup/Property.ts","../src/Base/Instance.ts","../src/Base/Definition.ts","../src/Definitions/Factories.ts","../src/Playing/AudibleContext.ts","../src/Playing/VisibleContext.ts","../src/Playing/ContextFactory.ts","../src/Utilities/Sort.ts","../src/Mash/Track/TrackInstance.ts","../src/Mash/Track/TrackFactory.ts","../src/Definitions/Factory/Factory.ts","../src/Editing/Action/Action.ts","../src/Utilities/Capitalize.ts","../src/Editing/Action/AddTrackAction.ts","../src/Editing/Action/AddClipToTrackAction.ts","../src/Editing/Action/MoveClipAction.ts","../src/Editing/Action/AddEffectAction.ts","../src/Editing/Action/ChangeAction.ts","../src/Editing/Action/ChangeFramesAction.ts","../src/Editing/Action/ChangeTrimAction.ts","../src/Editing/Action/SplitAction.ts","../src/Editing/Action/FreezeAction.ts","../src/Editing/Action/MoveEffectAction.ts","../src/Editing/Action/RemoveClipAction.ts","../src/Editing/Action/ActionFactory.ts","../src/Utilities/Element.ts","../src/Utilities/Emitter.ts","../src/Utilities/Evaluator.ts","../src/Utilities/Round.ts","../src/Utilities/Pixel.ts","../src/Utilities/Time.ts","../src/Utilities/TimeRange.ts","../src/Utilities/Url.ts","../src/Editing/Actions.ts","../src/Loading/Cache.ts","../src/Loading/Loader.ts","../src/Mash/Audio/AudioLoader.ts","../src/Mash/Font/FontLoader.ts","../src/Mash/Image/ImageLoader.ts","../src/Mash/Video/VideoLoader.ts","../src/Loading/LoaderFactory.ts","../src/Setup/Default.ts","../src/Mixin/Audible/AudibleMixin.ts","../src/Mixin/Clip/ClipMixin.ts","../src/Mixin/AudibleFile/AudibleFileMixin.ts","../src/Mash/Audio/AudioInstance.ts","../src/Mixin/Clip/ClipDefinitionMixin.ts","../src/Mixin/Audible/AudibleDefinitionMixin.ts","../src/Mixin/AudibleFile/AudibleFileDefinitionMixin.ts","../src/Mash/Audio/AudioDefinition.ts","../src/Mash/Audio/AudioFactory.ts","../src/Setup/Parameter.ts","../src/Mash/Filter/FilterInstance.ts","../src/Mash/Filter/FilterDefinition.ts","../src/Mash/Filter/Definitions/BlendFilter.ts","../src/Mash/Filter/Definitions/ChromaKeyFilter.ts","../src/Mash/Filter/Definitions/ColorFilter.ts","../src/Mash/Filter/Definitions/ColorChannelMixerFilter.ts","../src/Mash/Filter/Definitions/ConvolutionFilter.ts","../src/Mash/Filter/Definitions/CropFilter.ts","../src/Mash/Filter/Definitions/DrawBoxFilter.ts","../src/Mash/Font/FontInstance.ts","../src/Mash/Font/FontDefinition.ts","../src/Mash/Font/FontFactory.ts","../src/Mash/Filter/Definitions/DrawTextFilter.ts","../src/Mash/Filter/Definitions/FadeFilter.ts","../src/Mash/Filter/Definitions/OverlayFilter.ts","../src/Mash/Filter/Definitions/ScaleFilter.ts","../src/Mash/Filter/Definitions/SetSarFilter.ts","../src/Mash/Filter/FilterFactory.ts","../src/Mixin/Modular/ModularDefinitionMixin.ts","../src/Mixin/Modular/ModularMixin.ts","../src/Mash/Effect/EffectInstance.ts","../src/Mash/Effect/EffectDefinition.ts","../src/Mash/Effect/EffectFactory.ts","../src/Mash/Merger/MergerInstance.ts","../src/Mash/Merger/MergerDefinition.ts","../src/Mash/Merger/MergerFactory.ts","../src/Mash/Scaler/ScalerInstance.ts","../src/Mash/Scaler/ScalerDefinition.ts","../src/Mash/Scaler/ScalerFactory.ts","../src/Mixin/Transformable/TransformableMixin.ts","../src/Mixin/Visible/VisibleMixin.ts","../src/Mash/Image/ImageInstance.ts","../src/Mixin/Visible/VisibleDefinitionMixin.ts","../src/Mash/Image/ImageDefinition.ts","../src/Mash/Image/ImageFactory.ts","../src/Playing/Composition.ts","../src/Mash/Mash/MashInstance.ts","../src/Mash/Mash/MashFactory.ts","../src/Mash/Theme/ThemeInstance.ts","../src/Mixin/Transformable/TransformableDefintiionMixin.ts","../src/Mash/Theme/ThemeDefinition.ts","../src/Mash/Theme/ThemeFactory.ts","../src/Mash/Transition/TransitionInstance.ts","../src/Mash/Transition/TransitionDefinition.ts","../src/Mash/Transition/TransitionFactory.ts","../src/Mash/Video/VideoInstance.ts","../src/Mash/Video/VideoDefinition.ts","../src/Mash/Video/VideoFactory.ts","../src/Mixin/Streamable/StreamableMixin.ts","../src/Mash/VideoStream/VideoStreamInstance.ts","../src/Mixin/Streamable/StreamableDefinitionMixin.ts","../src/Mash/VideoStream/VideoStreamDefinition.ts","../src/Mash/VideoStream/VideoStreamFactory.ts","../src/Mash/VideoSequence/VideoSequenceInstance.ts","../src/Mash/VideoSequence/VideoSequenceDefinition.ts","../src/Mash/VideoSequence/VideoSequenceFactory.ts","../src/Masher/MasherInstance.ts","../src/Masher/MasherFactory.ts","../src/Initialize/index.ts","../src/Utilities/Seconds.ts"],"sourcesContent":["const $invalid = \"Invalid\"\nconst $unknown = \"Unknown\"\nconst $expected = \"Expected\"\nconst $invalidArgument = `${$invalid} argument`\nconst $invalidProperty = `${$invalid} property`\nconst $invalidDefinitionProperty = `${$invalid} definition property`\nconst $internal = \"Internal Error \"\nconst Errors = {\n  eval: {\n    sourceRect: `${$invalid} evaluation of source rect `,\n    outputSize: `${$invalid} evaluation of output size `,\n    conditionTruth: `${$expected} at least one condition to evaluate to true `,\n    conditionValue: `${$expected} condition to have a value `,\n    number: `${$expected} evaluated value to be a number `,\n    get: `${$expected} to get evaluated value `,\n  },\n  composition: { mashUndefined: `${$internal}composition.mash undefined` },\n  audibleContext: `${$expected} AudioContext`,\n  mash: `${$expected} mash`,\n  action: `${$expected} Action`,\n  actions: `${$expected} Actions`,\n  internal: $internal,\n  argument: `${$invalidArgument} `,\n  invalid: {\n    canvas: `${$invalidProperty} canvas `,\n    context: `${$invalidProperty} context `,\n    definition: {\n      duration: `${$invalidDefinitionProperty} duration`,\n      audio: `${$invalidDefinitionProperty} audio|url`,\n      url: `${$invalidDefinitionProperty} url`,\n      source: `${$invalidDefinitionProperty} source`,\n      id: `${$invalidDefinitionProperty} id`,\n      object: `${$invalidProperty} definition`,\n    },\n    size: `${$invalid} size `,\n    track: `${$invalid} track `,\n    trackType: `${$invalidProperty} trackType `,\n    action: `${$invalid} action `,\n    name: `${$invalidProperty} name `,\n    value: `${$invalidProperty} value `,\n    type: `${$invalidProperty} type `,\n    url: `${$invalidProperty} url `,\n    property: $invalidProperty,\n    argument: $invalidArgument,\n    object: `${$invalidArgument} object `,\n    factory: `${$invalid} factory `,\n    volume: `${$invalidArgument} volume`,\n  },\n  type: `${$unknown} type `,\n  selection: `${$invalid} selection `,\n  unknown: {\n    type: `${$unknown} type `,\n    merger: `${$unknown} merger `,\n    effect: `${$unknown} effect `,\n    filter: `${$unknown} filter `,\n    font: `${$unknown} font `,\n    scaler: `${$unknown} scalar `,\n    mode: `${$unknown} mode `,\n    definition: `${$unknown} definition `,\n  },\n  uncached: \"Uncached URL \",\n  object: `${$invalidArgument} object `,\n  array: `${$invalidArgument} array `,\n  media: `${$invalidArgument} media `,\n  id: `${$invalidArgument} id `,\n  frame: `${$invalidArgument} frame `,\n  frames: `${$invalidProperty} frames `,\n  fps: `${$invalidArgument} fps `,\n  seconds: `${$invalidArgument} seconds `,\n  url: `${$invalidArgument} url `,\n  time: `${$invalidArgument} Time`,\n  timeRange: `${$invalidArgument} TimeRange`,\n  mainTrackOverlap: `${$internal}: main track clips overlap without transition`,\n  unknownMash: `${$unknown} Mash property `,\n  unimplemented: `${$expected} method to be overridden`,\n  property: `${$invalidArgument} property `,\n  wrongClass: `${$expected} instance of `,\n}\n\nexport { Errors }\n","import { ScalarArray, UnknownObject } from \"../declarations\"\n\nconst objectType = (value : unknown) : boolean => typeof value === 'object'\n\nconst stringType = (value : unknown) : boolean => (\n  typeof value === 'string'\n)\n\nconst undefinedType = (value : unknown) : boolean => typeof value === 'undefined'\n\nconst numberType = (value : unknown) : boolean => typeof value === 'number'\n\nconst booleanType = (value : unknown) : boolean => typeof value === 'boolean'\n\nconst methodType = (value : unknown) : boolean => typeof value === 'function'\n\nconst isDefined = (value : unknown) : boolean => !undefinedType(value)\n\nconst isNan = (value : unknown) : boolean => numberType(value) && Number.isNaN(value)\n\nconst isNumber = (value : unknown) : boolean => numberType(value) && !Number.isNaN(value)\n\nconst isInteger = (value : unknown) : boolean => Number.isInteger(value)\n\nconst isFloat = (value : unknown) : boolean => numberType(value) && !isInteger(value)\n\nconst isPositive = (value : unknown) : boolean => numberType(value) && Number(value) >= 0\n\nconst isAboveZero = (value : unknown) : boolean => isNumber(value) && Number(value) > 0\n\nconst isArray = (value : unknown) : boolean => (\n  isDefined(Array.isArray) ? Array.isArray(value) : value instanceof Array\n)\n\nconst length = (value : string | ScalarArray) : boolean => !!value.length\n\nconst isPopulatedString = (value : unknown) : boolean => stringType(value) && length(String(value))\n\nconst isPopulatedObject = (value : unknown) : boolean => (\n  objectType(value) && length(Object.keys(<UnknownObject> value))\n)\n\nconst isPopulatedArray = (value : unknown) : boolean => isArray(value) && length(<ScalarArray> value)\n\nconst Is = {\n  aboveZero: isAboveZero,\n  array: isArray,\n  boolean: booleanType,\n  defined: isDefined,\n  float: isFloat,\n  integer: isInteger,\n  method: methodType,\n  nan: isNan,\n  number: numberType,\n  object: objectType,\n  populatedArray: isPopulatedArray,\n  populatedObject: isPopulatedObject,\n  populatedString: isPopulatedString,\n  positive: isPositive,\n  string: stringType,\n  undefined: undefinedType,\n}\n\nexport {\n  Is,\n  isAboveZero,\n  isArray,\n  booleanType as isBoolean,\n  isDefined,\n  isFloat,\n  isInteger,\n  methodType as isMethod,\n  isNan,\n  numberType as isNumber,\n  objectType as isObject,\n  isPopulatedArray,\n  isPopulatedObject,\n  isPopulatedString,\n  isPositive,\n  stringType as isString,\n  undefinedType as isUndefined,\n}\n","\n// eslint-disable-next-line prefer-const\nlet idPrefix = ''\n\nconst idGenerate = (): string => {\n  const components = []\n  if (idPrefix) components.push(idPrefix)\n  components.push(Date.now().toString(36))\n  components.push(Math.random().toString(36).substr(2))\n  return components.join('-')\n}\n\nconst idPrefixSet = (prefix: string): void => { idPrefix = prefix }\n\nconst Id = {\n  generate: idGenerate,\n  prefix: idPrefix,\n  prefixSet: idPrefixSet\n}\n\nexport { Id, idGenerate, idPrefix, idPrefixSet }\n","\n\nenum ActionType {\n  AddTrack = 'addTrack',\n  AddClipToTrack = 'addClipToTrack',\n  MoveClip = 'moveClip',\n  AddEffect = 'addEffect',\n  Change = 'change',\n  ChangeFrames = 'changeFrames',\n  ChangeTrim = 'changeTrim',\n  ChangeGain = 'changeGain',\n  MoveEffect = 'moveEffect',\n  Split = 'split',\n  Freeze ='freeze',\n  RemoveClip = 'removeClip',\n}\n\nenum TrackType {\n  Audio = 'audio',\n  Transition = 'transition',\n  Video = 'video',\n}\nconst TrackTypes = Object.values(TrackType)\n\nenum ClipType {\n  Audio = 'audio',\n  Frame = 'frame',\n  Image = 'image',\n  Theme = 'theme',\n  Transition = 'transition',\n  Video = 'video',\n  VideoSequence = 'videosequence',\n  VideoStream = 'videostream',\n  // AudioStream = 'audiostream',\n}\n\nconst ClipTypes = Object.values(ClipType)\n\n// NOTE: order important here - determines initialization\nenum DefinitionType {\n  Filter = 'filter',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Effect = 'effect',\n  Font = 'font',\n  Theme = 'theme',\n  Transition = 'transition',\n  Image = 'image',\n  Video = 'video',\n  Audio = 'audio',\n  VideoStream = 'videostream',\n  VideoSequence = 'videosequence',\n  // Track = 'track',\n  // AudioStream = 'audiostream',\n}\nconst DefinitionTypes = Object.values(DefinitionType)\n\nenum EventType {\n  Action = 'action',\n  Duration = 'durationchange',\n  Draw = 'draw',\n  Ended = 'ended',\n  Fps = 'ratechange',\n  Loaded = 'loadeddata',\n  Mash = 'mashchange',\n  Pause = 'pause',\n  Play = 'play',\n  Playing = 'playing',\n  Seeked = 'seeked',\n  Seeking = 'seeking',\n  Selection = 'selection',\n  Time = 'timeupdate',\n  Track = 'track',\n  Volume = 'volumechange',\n  Waiting = 'waiting',\n}\n\nenum ModuleType {\n  Effect ='effect',\n  Font = 'font',\n  Merger = 'merger',\n  Scaler = 'scaler',\n  Theme = 'theme',\n  Transition = 'transition',\n}\nconst ModuleTypes = Object.values(ModuleType)\n\nenum LoadType {\n  Audio = 'audio',\n  Font = 'font',\n  Image = 'image',\n  Module = 'module',\n  Video = 'video',\n}\n\nenum MoveType {\n  Audio = 'audio',\n  Effect = 'effect',\n  Video = 'video',\n}\n\nenum DataType {\n  Boolean = 'boolean',\n  Direction4 = 'direction4',\n  Direction8 = 'direction8',\n  Font = 'font',\n  Fontsize = 'fontsize',\n  Integer = 'integer',\n  Mode = 'mode',\n  Number = 'number',\n  Pixel = 'pixel',\n  Rgb = 'rgb',\n  Rgba = 'rgba',\n  String = 'string',\n  Text = 'text',\n}\nconst DataTypes = Object.values(DataType)\n\nenum TransformType {\n  Merger = 'merger',\n  Scaler = 'scaler',\n}\n\nconst TransformTypes = Object.values(TransformType)\n\nenum MasherAction {\n  Freeze = 'freeze',\n  Redo = 'redo',\n  Remove = 'remove',\n  Save = 'save',\n  Split = 'split',\n  Undo = 'undo',\n}\n\nconst MasherActions = Object.values(MasherAction)\n\nenum CommandType {\n  File = 'file',\n  Stream = 'stream',\n}\n\nconst CommandTypes = Object.values(CommandType)\n\nenum OutputFormat {\n  Flv = 'flv',\n  Hls = 'hls',\n  Mdash = 'mdash',\n  Rtmp = 'rtmp',\n  Rtmps = 'rtmps',\n}\n\nconst OutputFormats = Object.values(OutputFormat)\n\nexport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  CommandType,\n  CommandTypes,\n  DataType,\n  DataTypes,\n  DefinitionType,\n  DefinitionTypes,\n  EventType,\n  LoadType,\n  MasherAction,\n  MasherActions,\n  ModuleType,\n  ModuleTypes,\n  MoveType,\n  OutputFormat,\n  OutputFormats,\n  TrackType,\n  TrackTypes,\n  TransformType,\n  TransformTypes,\n}\n","import { ScalarValue } from \"../declarations\";\n\ninterface TypeValueObject {\n  id : ScalarValue\n  identifier : string\n  label : string\n}\n\nclass TypeValue {\n  constructor(object : TypeValueObject) {\n    const { id, identifier, label } = object\n    this.id = id\n    this.identifier = identifier\n    this.label = label\n  }\n\n  id : ScalarValue\n\n  identifier : string\n\n  label : string\n}\n\nexport { TypeValue, TypeValueObject }\n","import { Rgb, RgbObject, Yuv, YuvObject } from \"../declarations\"\n\nconst rgbValue = (value : string | number) : number => (\n  Math.min(255, Math.max(0, Math.floor(Number(value))))\n)\n\nconst rgbNumeric = (rgb : RgbObject) : Rgb => ({\n  r: rgbValue(rgb.r), g: rgbValue(rgb.g), b: rgbValue(rgb.b)\n})\n\nconst yuvNumeric = (rgb : YuvObject) : Yuv => ({\n  y: rgbValue(rgb.y), u: rgbValue(rgb.u), v: rgbValue(rgb.v)\n})\n\nconst colorYuv2rgb = (yuv : YuvObject) : Rgb => {\n  const floats = yuvNumeric(yuv)\n  return rgbNumeric({\n    r: floats.y + 1.4075 * (floats.v - 128),\n    g: floats.y - 0.3455 * (floats.u - 128) - (0.7169 * (floats.v - 128)),\n    b: floats.y + 1.7790 * (floats.u - 128)\n  })\n}\n\nconst colorRgb2hex = (rgb: RgbObject): string => {\n  // unused after 5.0 refactor, but perhaps needed?\n  let r = rgb.r.toString(16);\n  let g = rgb.g.toString(16);\n  let b = rgb.b.toString(16);\n  if (r.length < 2) r = `0${r}`;\n  if (g.length < 2) g = `0${g}`;\n  if (b.length < 2) b = `0${b}`;\n  return `#${r}${g}${b}`;\n}\n\nconst colorYuvBlend = (yuvs : YuvObject[], yuv : YuvObject, match : number, blend : number) : number => {\n  let diff = 0.0\n  const blendYuv = yuvNumeric(yuv)\n  yuvs.forEach(yuvObject => {\n    const numericYuv = yuvNumeric(yuvObject)\n    const du = numericYuv.u - blendYuv.u\n    const dv = numericYuv.v - blendYuv.v\n    diff += Math.sqrt((du * du + dv * dv) / (255.0 * 255.0))\n  })\n  diff /= yuvs.length\n\n  if (blend > 0.0001) {\n    return Math.min(1.0, Math.max(0.0, (diff - match) / blend)) * 255.0\n  }\n  return (diff > match) ? 255 : 0\n}\n\nconst colorRgb2yuv = (rgb : RgbObject) : Yuv => {\n  const ints = rgbNumeric(rgb)\n  return {\n    y: ints.r * 0.299000 + ints.g * 0.587000 + ints.b * 0.114000,\n    u: ints.r * -0.168736 + ints.g * -0.331264 + ints.b * 0.500000 + 128,\n    v: ints.r * 0.500000 + ints.g * -0.418688 + ints.b * -0.081312 + 128\n  }\n}\n\nconst colorStrip = (color: string): string => color.toLowerCase().replaceAll(/[\\s]/g, '')\n\n\nconst colorValid = (color: string): boolean => {\n  const colorStripped = colorStrip(color)\n  const style = new Option().style\n  style.color = color\n  const styleStripped = colorStrip(style.color)\n  if (!styleStripped) return false\n\n  if (styleStripped.startsWith('rgb')) return true\n\n  return styleStripped === colorStripped\n}\n\nconst colorTransparent = '#00000000'\n\nconst Color = {\n  valid: colorValid,\n  yuvBlend: colorYuvBlend,\n  rgb2yuv: colorRgb2yuv,\n  yuv2rgb: colorYuv2rgb,\n  rgb2hex: colorRgb2hex,\n  transparent: colorTransparent,\n  strip: colorStrip,\n}\nexport {\n  Color,\n  colorStrip,\n  colorValid,\n  colorRgb2hex,\n  colorYuv2rgb,\n  colorRgb2yuv,\n  colorYuvBlend,\n  colorTransparent,\n}\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Definition } from \"../Base/Definition\"\n\ntype DefinitionsList = Definition[]\nconst DefinitionsMap = new Map<string, Definition>()\nconst DefinitionsByType = new Map <DefinitionType, DefinitionsList>()\n\nconst definitionsByType = (type : DefinitionType) : DefinitionsList => {\n  const list = DefinitionsByType.get(type)\n  if (list) return list\n\n  const definitionsList : DefinitionsList = []\n  DefinitionsByType.set(type, definitionsList)\n  return definitionsList\n}\nconst definitionsClear = (): void => {\n  DefinitionsMap.clear()\n  DefinitionsByType.clear()\n}\n\nconst definitionsFont = definitionsByType(DefinitionType.Font)\n\nconst definitionsFromId = (id : string) : Definition => {\n  if (!definitionsInstalled(id)) {\n    console.trace(\"definitionsFromId !definitionsInstalled\", id)\n    throw Errors.unknown.definition + id\n  }\n\n  const definition = DefinitionsMap.get(id)\n  if (!definition) throw Errors.internal + id\n\n  return definition\n}\n\nconst definitionsInstall = (definition : Definition) : void => {\n  const { type, id } = definition\n  DefinitionsMap.set(id, definition)\n  definitionsByType(type).push(definition)\n}\n\nconst definitionsInstalled = (id : string) : boolean => DefinitionsMap.has(id)\n\nconst definitionsMerger = definitionsByType(DefinitionType.Merger)\n\nconst definitionsScaler = definitionsByType(DefinitionType.Scaler)\n\nconst definitionsUninstall = (id : string) : void => {\n  if (!definitionsInstalled(id)) return\n\n  const definition = definitionsFromId(id)\n  DefinitionsMap.delete(id)\n  const { type } = definition\n  const definitions = definitionsByType(type)\n  const index = definitions.indexOf(definition)\n  if (index < 0) throw Errors.internal\n\n  definitions.splice(index, 1)\n}\n\nconst Definitions = {\n  byType: definitionsByType,\n  clear: definitionsClear,\n  font: definitionsFont,\n  fromId: definitionsFromId,\n  install: definitionsInstall,\n  installed: definitionsInstalled,\n  map: DefinitionsMap,\n  merger: definitionsMerger,\n  scaler: definitionsScaler,\n  uninstall: definitionsUninstall,\n}\n\nexport {\n  Definitions,\n  definitionsByType,\n  definitionsClear,\n  definitionsFont,\n  definitionsFromId,\n  definitionsInstall,\n  definitionsInstalled,\n  DefinitionsMap,\n  definitionsMerger,\n  definitionsScaler,\n  definitionsUninstall,\n}\n","import { ScalarRaw, SelectionValue } from \"../declarations\"\nimport { DataType } from \"./Enums\"\nimport { Errors } from \"./Errors\"\nimport { TypeValue, TypeValueObject } from \"./TypeValue\"\nimport { colorValid } from \"../Utilities/Color\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { isNan } from \"../Utilities/Is\"\n\ninterface TypeObject {\n  id? : DataType\n  value? : ScalarRaw\n  values? : TypeValueObject[]\n  modular? : boolean\n}\n\nclass Type {\n  constructor(object : TypeObject) {\n    const { value, values, modular, id } = object\n    if (!id) throw Errors.id + JSON.stringify(object)\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.value = value\n    this.id = id\n    if (modular) this.modular = modular\n    if (values) this.values.push(...values.map(value => new TypeValue(value)))\n  }\n\n  coerce(value: SelectionValue): ScalarRaw | undefined {\n    const string = String(value)\n    const number = Number(value)\n\n    if (this.modular && !Definitions.fromId(string)) return\n\n    switch (this.id) {\n      case DataType.Boolean: return !!value\n      case DataType.Number:\n      case DataType.Fontsize:\n      case DataType.Pixel: {\n        if (isNan(number)) return\n\n        return number\n      }\n      case DataType.Integer: {\n        if (isNan(number)) return\n\n        return Math.round(number)\n      }\n      case DataType.Rgb:\n      case DataType.Rgba: {\n        if (!colorValid(string)) return\n\n        break\n      }\n      case DataType.Direction4:\n      case DataType.Direction8:\n      case DataType.Mode: {\n        if (!this.values?.find(object => { object.id === string })) return\n\n        break\n      }\n    }\n    return string\n  }\n\n  id : DataType\n\n  modular = false\n\n  value : ScalarRaw\n\n  values : TypeValueObject[] = []\n}\n\nexport { Type, TypeObject }\n","import { ScalarRaw } from \"../declarations\"\nimport { DataType, DataTypes } from \"./Enums\"\nimport { Errors } from \"./Errors\"\nimport { isObject, isPopulatedString } from \"../Utilities/Is\"\nimport { Type, TypeObject } from \"./Type\"\n\nimport dataTypesJson from \"./dataTypes.json\"\n\ninterface TypesJson {\n  [index : string] : TypeObject\n}\n\nclass TypesClass {\n  constructor(object : TypesJson) {\n    Object.entries(object).forEach(entry => {\n      const [key, value] = entry\n      const dataType = <DataType> key\n      if (!DataTypes.includes(dataType)) throw Errors.type + 'DataTypes ' + key\n\n      this.propertyTypes.set(dataType, new Type({...value, id: dataType }))\n    })\n  }\n\n  propertyType(type : DataType) : Type {\n    const instance = this.propertyTypes.get(type)\n    if (!instance) throw Errors.type + 'propertyType ' + type\n\n    return instance\n  }\n\n  propertyTypeDefault(type : DataType) : ScalarRaw {\n    if (!(isPopulatedString(type) && DataTypes.includes(type))) throw Errors.type + 'propertyTypeDefault ' + type\n\n    const propertyType = this.propertyType(type)\n    if (!isObject(propertyType)) return \"\"\n\n    return propertyType.value\n  }\n\n  propertyTypes = new Map<DataType, Type>()\n}\n\nconst Types = new TypesClass(dataTypesJson)\n\nexport { Types }\n","import { Any, JsonObject, ScalarRaw, SelectionValue } from \"../declarations\"\nimport { Errors } from \"./Errors\"\nimport { DataType } from \"./Enums\"\nimport { Type } from \"./Type\"\nimport { Types } from \"./Types\"\n\ninterface PropertyObject {\n  type? : DataType\n  name? : string\n  value? : ScalarRaw\n  custom? : boolean\n}\n\n\nclass Property {\n  constructor(object: PropertyObject) {\n    const { type, name, value, custom } = object\n    if (!type) throw Errors.invalid.type\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value + JSON.stringify(object)\n\n    this.type = Types.propertyType(type)\n    this.name = name\n    this.value = value\n    this.custom = !!custom\n  }\n\n  custom: boolean\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { value: this.value, type: this.type.id }\n  }\n\n  type : Type\n\n  value : ScalarRaw\n}\n\n\ninterface Propertied {\n  property(key: string): Property | undefined\n  value(key: string): SelectionValue\n  setValue(key: string, value: SelectionValue): boolean\n  properties: Property[]\n}\n\nclass PropertiedClass implements Propertied {\n  [index: string]: unknown\n\n  constructor(..._args: Any[]) {\n  }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n  private _properties: Property[] = []\n  public get properties(): Property[] {\n    return this._properties\n  }\n  public set properties(value: Property[]) {\n    this._properties = value\n  }\n\n\n  setValue(key: string, value: SelectionValue): boolean {\n    const property = this.property(key)\n    if (!property) throw Errors.property + key\n\n    const { type } = property\n    const coerced = type.coerce(value)\n    if (typeof coerced === 'undefined') {\n      console.error(this.constructor.name, \"setValue\", key, value)\n      return false\n    }\n\n    this[key] = coerced\n    return true\n  }\n\n  value(key : string) : SelectionValue {\n    const value = this[key]\n    if (typeof value === \"undefined\") throw Errors.property + key\n\n    // console.trace(this.constructor.name, \"value\", key, value)\n    return <SelectionValue> value\n  }\n}\n\nexport { Property, PropertyObject, Propertied, PropertiedClass }\n","import {\n  Any, Constrained, JsonObject, SelectionObject, UnknownObject\n} from \"../declarations\"\nimport { DefinitionType } from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Definition } from \"./Definition\"\nimport { Time } from \"../Utilities/Time\"\nimport { idGenerate } from \"../Utilities/Id\"\nimport { PropertiedClass, Property } from \"../Setup/Property\"\nimport { Definitions } from \"../Definitions/Definitions\"\n\ninterface InstanceObject extends UnknownObject {\n  definition?: Definition\n  definitionId?: string\n  id?: string\n  label?: string\n}\n\nclass InstanceBase extends PropertiedClass {\n  constructor(...args: Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'InstanceBase'\n\n    const { definitionId = '', definition, id, label } = <InstanceObject>object\n    const definitionObject = definition || Definitions.fromId(definitionId)\n    if (!definitionObject) throw Errors.invalid.definition.object\n\n    this.definition = definitionObject\n    if (id) this._id = id\n    if (label && label !== this.definition.label) this._label = label\n  }\n\n  get copy() : Instance {\n    return this.definition.instanceFromObject(this.toJSON())\n  }\n\n  definition : Definition\n\n  get definitionId(): string { return this.definition.id }\n\n  get definitions() : Definition[] { return [this.definition] }\n\n  definitionTime(quantize : number, time : Time) : Time {\n    return time.scaleToFps(quantize) // may have fps higher than quantize and time.fps\n  }\n\n  private _id? : string\n\n  get id() : string { return this._id ||= idGenerate() }\n\n  protected _label? : string\n\n  get label() : string { return this._label || this.definition.label || this.id }\n\n  set label(value : string) { this._label = value }\n\n  get properties(): Property[] { return this.definition.properties }\n\n  property(key: string): Property | undefined { return this.definition.property(key) }\n\n  get propertyNames() : string[] {\n    return this.properties.map(property => property.name)\n  }\n\n  get propertyValues() : SelectionObject {\n    return Object.fromEntries(this.properties.map(property => {\n      return [property.name, this.value(property.name)]\n    }))\n  }\n\n  toJSON(): JsonObject {\n    // console.debug(this.constructor.name, \"toJSON\")\n    const object = {\n      definitionId: this.definitionId,\n      id: this.id,\n      type: this.type,\n      ...this.propertyValues\n    }\n    return object\n  }\n\n  get type() : DefinitionType { return this.definition.type }\n}\n\ninterface Instance extends InstanceBase {}\n\ntype InstanceClass = Constrained<InstanceBase>\n\nexport { Instance, InstanceClass, InstanceBase, InstanceObject }\n","import {\n  Any, Constrained, JsonObject, LoadPromise, SelectionValue, UnknownObject\n} from \"../declarations\"\nimport { DefinitionType } from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Property } from \"../Setup/Property\"\nimport { Time, Times } from \"../Utilities/Time\"\nimport { Is } from \"../Utilities/Is\"\nimport { Instance, InstanceBase, InstanceObject } from \"./Instance\"\n\ninterface DefinitionObject extends UnknownObject{\n  id? : string\n  type? : string\n  label? : string\n  icon? : string\n}\n\nclass DefinitionBase {\n  constructor(...args : Any[]) {\n    const [object] = args\n    const { id, label, icon } = <DefinitionObject> object\n    if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + JSON.stringify(object)\n    this.id = id\n\n    this.label = label || id\n    if (icon) this.icon = icon\n\n  }\n\n  icon? : string\n\n  id : string\n\n  get instance() : Instance {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : InstanceObject) : Instance {\n    const instance = new InstanceBase({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  get instanceObject() : InstanceObject {\n    const object : UnknownObject = {}\n    object.definition = this\n    this.properties.forEach(property => { object[property.name] = property.value })\n    return object\n  }\n\n  label : string\n\n  loadDefinition(_quantize: number, _start : Time, _end? : Time) : LoadPromise | void { }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [] }\n\n  properties : Property[] = []\n\n  get propertiesModular() : Property[] { return this.properties.filter(property => property.type.modular) }\n\n  property(name : string) : Property | undefined {\n    return this.properties.find(property => property.name === name)\n  }\n\n  retain = false\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id, type: this.type }\n    if (this.icon) object.icon = this.icon\n    if (this.label !== this.id) object.label = this.label\n    return object\n  }\n\n  type! : DefinitionType\n\n  unload(_times : Times[] = []) : void {}\n\n  value(name : string) : SelectionValue | undefined {\n    const property = this.property(name)\n    if (!property) return\n\n    return property.value\n  }\n}\n\ninterface Definition extends DefinitionBase {}\n\ntype DefinitionTimes = Map<Definition, Times[]>\n\ntype DefinitionClass = Constrained<DefinitionBase>\n\nexport { Definition, DefinitionClass, DefinitionBase, DefinitionObject, DefinitionTimes }\n","import { DefinitionType } from \"../Setup/Enums\"\nimport { AudioFactory } from \"../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../Mash/Filter/Filter\"\nimport { FontFactory } from \"../Mash/Font/Font\"\nimport { ImageFactory } from \"../Mash/Image/Image\"\nimport { MergerFactory } from \"../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../Mash/Video/Video\"\nimport { VideoStreamFactory } from \"../Mash/VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../Mash/VideoSequence/VideoSequence\"\n\ntype FactoryObject = {\n  [DefinitionType.Filter]?: FilterFactory\n  [DefinitionType.Audio]?: AudioFactory\n  [DefinitionType.Effect]?: EffectFactory\n  [DefinitionType.Font]?: FontFactory\n  [DefinitionType.Image]?: ImageFactory\n  [DefinitionType.Merger]?: MergerFactory\n  [DefinitionType.Scaler]?: ScalerFactory\n  [DefinitionType.Theme]?: ThemeFactory\n  [DefinitionType.Transition]?: TransitionFactory\n  [DefinitionType.Video]?: VideoFactory\n  [DefinitionType.VideoSequence]?: VideoSequenceFactory\n  [DefinitionType.VideoStream]?: VideoStreamFactory\n}\n\nconst Factories : FactoryObject = {}\n\nexport { Factories, FactoryObject }\n","import { AudibleSource } from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\n\nconst AudibleSampleRate = 44100\nconst AudibleChannels = 2\n\ninterface AudibleContextSource {\n  gainNode: GainNode\n  gainSource: AudibleSource\n}\n\n// singleton owned by Cache\nclass AudibleContext {\n  addSource(id: string, source: AudibleContextSource): void {\n    // console.log(\"addSource\", id)\n    this.sourcesByClipId.set(id, source)\n  }\n\n  private _context? : AudioContext\n\n  get context() : AudioContext {\n    if (!this._context) {\n      const Klass = AudioContext || window.webkitAudioContext\n      if (!Klass) throw Errors.audibleContext\n\n      this._context = new Klass()\n    }\n    return this._context\n  }\n\n  createBuffer(seconds : number) : AudioBuffer {\n    const length = AudibleSampleRate * seconds\n    return this.context.createBuffer(AudibleChannels, length, AudibleSampleRate)\n  }\n\n  createBufferSource(buffer?: AudioBuffer): AudibleSource {\n    // console.trace(this.constructor.name, \"createBufferSource\")\n    const sourceNode = this.context.createBufferSource()\n    if (buffer) sourceNode.buffer = buffer\n    return sourceNode\n  }\n\n  createGain() : GainNode { return this.context.createGain() }\n\n  get currentTime() : number { return this.context.currentTime }\n\n  decode(buffer : ArrayBuffer) : Promise<AudioBuffer> {\n    return new Promise((resolve, reject) => (\n      this.context.decodeAudioData(\n        buffer,\n        audioData => resolve(audioData),\n        error => reject(error)\n      )\n    ))\n  }\n\n  deleteSource(id: string): void {\n    // console.log(\"deleteSource\", id)\n    const source = this.getSource(id)\n    if (!source) return\n\n    this.sourcesByClipId.delete(id)\n    const { gainSource, gainNode } = source\n    gainNode.disconnect(this.destination)\n    gainSource.disconnect(gainNode)\n    gainSource.stop()\n  }\n\n  get destination() : AudioDestinationNode { return this.context.destination }\n\n  getSource(id: string): AudibleContextSource | undefined {\n    return this.sourcesByClipId.get(id)\n  }\n\n  hasSource(id: string): boolean { return this.sourcesByClipId.has(id) }\n\n  private sourcesByClipId = new Map<string, AudibleContextSource>()\n\n  startAt(clipId: string, source: AudibleSource, start: number, duration: number, offset?: number, loops = false):void {\n    const gainNode = this.createGain()\n    source.loop = loops\n    source.connect(gainNode)\n    gainNode.connect(this.destination)\n    source.start(this.currentTime + start, offset, duration)\n    this.addSource(clipId, { gainSource: source, gainNode })\n  }\n}\n\nexport { AudibleContext }\n","import {\n  Context2D,\n  ContextData,\n  VisibleContextElement,\n  VisibleSource,\n  Point,\n  Rect,\n  Size,\n  TextStyle,\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { Action } from \"../Editing/Action/Action\"\n\nconst $canvas = 'canvas'\nconst $2d = '2d'\nconst Point0 = { x: 0, y: 0 }\n\nclass VisibleContext {\n  constructor(object : { context2d? : Context2D } = {}) {\n    const { context2d } = object\n    // console.trace(\"VisibleContext\", \"constructor\", context2d)\n    if (context2d) this._context2d = context2d\n  }\n\n  get alpha() : number { return this.context2d.globalAlpha }\n\n  set alpha(value : number) { this.context2d.globalAlpha = value }\n\n  get canvas() : VisibleContextElement { return this.context2d.canvas }\n\n  set canvas(value: VisibleContextElement) {\n    const context2d = value.getContext(\"2d\")\n    if (!context2d) throw Errors.invalid.canvas\n    this.context2d = context2d\n  }\n\n  clear() : VisibleContext {\n    return this.clearSize(this.size)\n  }\n\n  clearSize(size : Size) : VisibleContext {\n    return this.clearRect({ ...Point0, ...size })\n  }\n\n  clearRect(rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.clearRect(x, y, width, height)\n    return this\n  }\n\n  get composite() : string { return this.context2d.globalCompositeOperation }\n\n  set composite(value : string) { this.context2d.globalCompositeOperation = value }\n\n  private get context2d() : Context2D {\n    if (!this._context2d) {\n      // console.trace(this.constructor.name, \"get context2d creating canvas\")\n      const canvas = globalThis.document.createElement($canvas)\n      const context = canvas.getContext($2d)\n      if (!context) throw Errors.internal\n\n      this._context2d = context\n    }\n    return this._context2d\n  }\n\n  private set context2d(value : Context2D) {\n    // console.log(this.constructor.name, \"set context2d\", value)\n    this._context2d = value\n  }\n\n  get dataUrl() : string { return this.canvas.toDataURL() }\n\n  draw(source : VisibleSource) : VisibleContext {\n    return this.drawAtPoint(source, Point0)\n  }\n\n  drawAtPoint(source : VisibleSource, point: Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.drawImage(source, x, y)\n    return this\n  }\n\n  drawFill(fill : string) : VisibleContext {\n    return this.drawFillToSize(fill, this.size)\n  }\n\n  drawFillInRect(fill : string, rect : Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    const fillOriginal = this.fill\n    this.fill = fill\n    this.context2d.fillRect(x, y, width, height)\n    this.fill = fillOriginal\n    return this\n  }\n\n  drawFillToSize(fill : string, size : Size) : VisibleContext {\n    return this.drawFillInRect(fill, { ...Point0, ...size })\n  }\n\n  drawImageData(data : ImageData) : VisibleContext {\n    return this.drawImageDataAtPoint(data, Point0)\n  }\n\n  drawImageDataAtPoint(data : ImageData, point : Point) : VisibleContext {\n    const { x, y } = point\n    this.context2d.putImageData(data, x, y)\n    return this\n  }\n\n  drawInRect(source : VisibleSource, rect: Rect) : VisibleContext {\n    const { x, y, width, height } = rect\n    this.context2d.drawImage(source, x, y, width, height)\n    return this\n  }\n\n  drawInRectFromRect(source : VisibleSource, inRect: Rect, fromRect: Rect) : VisibleContext {\n    const { x: xIn, y: yIn, width: wIn, height: hIn } = inRect\n    const { x, y, width: w, height: h } = fromRect\n    const { width: sourceWidth, height: sourceHeight } = source\n    if (xIn + wIn > sourceWidth || yIn + hIn > sourceHeight) throw Errors.eval.sourceRect + JSON.stringify(inRect) + ' ' + sourceWidth + 'x' + sourceHeight\n\n    this.context2d.drawImage(source, xIn, yIn, wIn, hIn, x, y, w, h)\n    return this\n  }\n\n  drawInRectFromSize(source : VisibleSource, rect: Rect, size: Size) : VisibleContext {\n    return this.drawInRectFromRect(source, rect, { ...Point0, ...size })\n  }\n\n  drawInSizeFromSize(source : VisibleSource, inSize : Size, fromSize : Size) : VisibleContext {\n    const inRect = { ...Point0, ...inSize }\n    const fromRect = { ...Point0, ...fromSize }\n    return this.drawInRectFromRect(source, inRect, fromRect)\n  }\n\n  drawText(text: string, style : TextStyle) : VisibleContext {\n    return this.drawTextAtPoint(text, style, Point0)\n  }\n\n  drawTextAtPoint(text: string, style : TextStyle, point : Point) : VisibleContext {\n    const { x, y } = point\n    const { height, family, color, shadow, shadowPoint } = style\n\n    const fillOriginal = this.fill\n    const fontOriginal = this.font\n    const shadowOriginal = this.shadow\n    const shadowPointOriginal = this.shadowPoint\n\n    if (shadow) {\n      this.shadow = shadow\n      if (shadowPoint) this.shadowPoint = shadowPoint\n    }\n\n    this.font = `${height}px \"${family}\"`\n    this.fill = color\n    this.context2d.fillText(text, x, y + height)\n\n    this.font = fontOriginal\n    this.fill = fillOriginal\n    if (shadow) {\n      this.shadow = shadowOriginal\n      if (shadowPoint) this.shadowPoint = shadowPointOriginal\n    }\n    return this\n  }\n\n  drawToSize(source : VisibleSource, size: Size) : VisibleContext {\n    return this.drawInRect(source, { ...Point0, ...size })\n  }\n\n  drawWithAlpha(source : VisibleSource, alpha: number) : VisibleContext {\n    const original = this.alpha\n    this.alpha = alpha\n    const result = this.draw(source)\n    this.alpha = original\n    return result\n  }\n\n  drawWithComposite(source : VisibleSource, composite: string) : VisibleContext {\n    const original = this.composite\n    this.composite = composite\n    const result = this.draw(source)\n    this.composite = original\n    return result\n  }\n\n\n  get fill() : string { return String(this.context2d.fillStyle) }\n\n  set fill(value : string) { this.context2d.fillStyle = value }\n\n  get font() : string { return this.context2d.font }\n\n  set font(value : string) { this.context2d.font = value }\n\n  get imageData() : ContextData { return this.imageDataFromSize(this.size) }\n\n  get imageDataFresh() : ContextData {\n    const { width, height } = this.size\n    return this.context2d.createImageData(width, height)\n  }\n\n  imageDataFromRect(rect : Rect) : ContextData {\n    const { x, y, width, height } = rect\n    return this.context2d.getImageData(x, y, width, height)\n  }\n\n  imageDataFromSize(size : Size) : ContextData {\n    return this.imageDataFromRect({ ...Point0, ...size })\n  }\n\n  get drawingSource() : VisibleSource { return this.canvas }\n\n  get shadow() : string { return this.context2d.shadowColor }\n\n  set shadow(value : string) { this.context2d.shadowColor = value }\n\n  get shadowPoint() : Point {\n    return { x: this.context2d.shadowOffsetX, y: this.context2d.shadowOffsetY }\n  }\n\n  set shadowPoint(point : Point) {\n    this.context2d.shadowOffsetX = point.x\n    this.context2d.shadowOffsetY = point.y\n  }\n\n  get size() : Size { return { width: this.canvas.width, height: this.canvas.height } }\n\n  set size(value : Size) {\n    const { width, height } = value\n    if (Is.aboveZero(width)) this.canvas.width = width\n    if (Is.aboveZero(height)) this.canvas.height = height\n  }\n\n  private _context2d? : Context2D\n}\n\ninterface EventsDetail {\n  action? : Action\n}\ntype EventsType = CustomEvent<EventsDetail>\n\nexport { VisibleContext, EventsType, EventsDetail}\n","import { Size, Context2D, VisibleContextElement } from \"../declarations\"\nimport { AudibleContext } from \"./AudibleContext\"\nimport { VisibleContext } from \"./VisibleContext\"\n\nconst ContextTypes = [\"audible\", \"visible\"]\nconst ContextType = Object.fromEntries(ContextTypes.map(type => [type, type]))\n\nclass ContextFactoryImplementation {\n  audible() : AudibleContext { return new AudibleContext() }\n\n  fromCanvas(canvas : VisibleContextElement) : VisibleContext {\n    const context = this.visible()\n    context.canvas = canvas\n    return context\n  }\n\n  fromContext2D(context2d : Context2D) : VisibleContext {\n    return new VisibleContext({ context2d })\n  }\n\n  toSize(size: Size) {\n    const context = this.visible()\n    context.size = size\n    return context\n  }\n\n  get type() { return ContextType }\n\n  get types() { return ContextTypes }\n\n  visible() { return new VisibleContext() }\n}\n\nconst ContextFactory = new ContextFactoryImplementation()\n\nexport { ContextFactory }\n","import { WithFrame, WithLabel, WithTrack, WithLayer } from \"../declarations\"\n\nconst sortByFrame = (a : WithFrame, b : WithFrame) : number => a.frame - b.frame\nconst sortByLayer = (a : WithLayer, b : WithLayer) : number => a.layer - b.layer\nconst sortByTrack = (a : WithTrack, b : WithTrack) : number => a.track - b.track\nconst sortByLabel = (a : WithLabel, b : WithLabel) : number => {\n  if (a.label < b.label) return -1\n  if (a.label > b.label) return 1\n  return 0\n}\n\nconst Sort = {\n  byFrame: sortByFrame, byLabel: sortByLabel, byTrack: sortByTrack, byLayer: sortByLayer\n}\n\nexport { Sort, sortByFrame, sortByLabel, sortByTrack, sortByLayer }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DataType, DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { PropertiedClass, Property } from \"../../Setup/Property\"\nimport { idGenerate } from \"../../Utilities/Id\"\n\nimport { sortByFrame } from \"../../Utilities/Sort\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Clip } from \"../../Mixin/Clip/Clip\"\nimport { TrackObject } from \"./Track\"\n\nclass TrackClass extends PropertiedClass {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { id, clips, layer, trackType, dense } = <TrackObject> object\n    if (id) this._id = id\n    if (layer) this.layer = layer\n    if (trackType) this.trackType = trackType\n\n\n    if (typeof dense === 'undefined') {\n      this.dense = !this.layer && this.trackType === TrackType.Video\n    } else this.dense = !!dense\n\n    this.properties.push(\n      new Property({ name: \"dense\", type: DataType.Boolean, value: false })\n    )\n\n    if (clips) this.clips.push(...clips.map(clip => {\n      const { definitionId } = clip\n      if (!definitionId) throw Errors.id + JSON.stringify(clip)\n\n      const definition = Definitions.fromId(definitionId)\n      const clipWithTrack = { track: this.layer, ...clip }\n      return <Clip> definition.instanceFromObject(clipWithTrack)\n    }))\n  }\n\n  addClip(clip : Clip, insertIndex = 0) : void {\n    let clipIndex = insertIndex || 0\n    if (!this.dense) clipIndex = 0 // ordered by clip.frame values\n\n    const origIndex = clipIndex // note original, since it may decrease...\n    const movingClips : Clip[] = [] // build array of clips already in this.clips\n    // build array of my clips excluding the clips we're inserting\n    const spliceClips = this.clips.filter((other, index) => {\n      const moving = other === clip\n      if (moving) movingClips.push(other)\n      // insert index should be decreased when clip is moving and comes before\n      if (origIndex && moving && index < origIndex) clipIndex -= 1\n      return !moving\n    })\n    // insert the clips we're adding at the correct index, then sort properly\n    spliceClips.splice(clipIndex, 0, clip)\n    this.sortClips(spliceClips)\n\n    clip.track = this.layer\n\n    // remove all my current clips and replace with new ones in one step\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  clips: Clip[] = []\n\n  dense = false\n\n  frameForClipNearFrame(clip : Clip, frame = 0) : number {\n    if (this.dense) return frame\n\n    const others = this.clips.filter(other => clip !== other && other.endFrame > frame)\n    if (!others.length) return frame\n\n    const startFrame = clip.frame\n    const endFrame = clip.endFrame\n    const frames = endFrame - startFrame\n\n    let lastFrame = frame\n    others.find(clip => {\n      if (clip.frame >= lastFrame + frames) return true\n\n      lastFrame = clip.endFrame\n    })\n    return lastFrame\n  }\n\n  get frames() : number {\n    if (!this.clips.length) return 0\n\n    const clip = this.clips[this.clips.length - 1]\n    return clip.frame + clip.frames\n  }\n\n  private _id? : string\n\n  get id() : string { return this._id ||= idGenerate() }\n\n  layer = 0\n\n  removeClip(clip : Clip) : void {\n    const spliceClips = this.clips.filter(other => clip !== other)\n    if (spliceClips.length === this.clips.length) {\n      // console.trace(\"removeClip\", this.trackType, this.layer, this.clips)\n      throw Errors.internal + ' removeClip'\n    }\n    clip.track = -1\n    this.sortClips(spliceClips)\n    this.clips.splice(0, this.clips.length, ...spliceClips)\n  }\n\n  sortClips(clips : Clip[]) : void {\n    if (this.dense) {\n      let frame = 0\n      clips.forEach((clip, i) => {\n        const isTransition = clip.type === DefinitionType.Transition\n        if (i && isTransition) frame -= clip.frames\n        clip.frame = frame\n        if (!isTransition) frame += clip.frames\n      })\n    }\n    clips.sort(sortByFrame)\n  }\n\n  toJSON() : JsonObject {\n    return {\n      id: this.id,\n      dense: this.dense,\n      trackType: this.trackType,\n      layer: this.layer,\n      clips: this.clips,\n    }\n  }\n\n  trackType = TrackType.Video\n}\n\nexport { TrackClass }\n","import { Track, TrackObject } from \"./Track\"\nimport { TrackClass } from \"./TrackInstance\"\n\nconst trackInstance = (object : TrackObject) : Track => new TrackClass(object)\n\nconst TrackFactory = { instance: trackInstance }\n\nexport { TrackFactory }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { AudioFactory } from \"../../Mash/Audio/Audio\"\nimport { EffectFactory } from \"../../Mash/Effect/Effect\"\nimport { FilterFactory } from \"../../Mash/Filter/Filter\"\nimport { FontFactory } from \"../../Mash/Font/Font\"\nimport { ImageFactory } from \"../../Mash/Image/Image\"\nimport { MergerFactory } from \"../../Mash/Merger/Merger\"\nimport { ScalerFactory } from \"../../Mash/Scaler/Scaler\"\nimport { ThemeFactory } from \"../../Mash/Theme/Theme\"\nimport { TransitionFactory } from \"../../Mash/Transition/Transition\"\nimport { VideoFactory } from \"../../Mash/Video/Video\"\nimport { VideoStreamFactory } from \"../../Mash/VideoStream/VideoStream\"\nimport { VideoSequenceFactory } from \"../../Mash/VideoSequence/VideoSequence\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { TrackFactory } from \"../../Mash/Track/TrackFactory\"\n\nclass Factory {\n  static get [DefinitionType.Audio]() : AudioFactory {\n    const factory = Factories[DefinitionType.Audio]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Audio\n\n    return factory\n  }\n\n  static get context(): typeof ContextFactory { return ContextFactory }\n\n  static get [DefinitionType.Effect]() : EffectFactory {\n    const factory = Factories[DefinitionType.Effect]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Effect\n\n    return factory\n  }\n\n  static get [DefinitionType.Filter]() : FilterFactory {\n    const factory = Factories[DefinitionType.Filter]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Filter\n\n    return factory\n  }\n\n  static get [DefinitionType.Font]() : FontFactory {\n    const factory = Factories[DefinitionType.Font]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Font\n\n    return factory\n  }\n\n  static get [DefinitionType.Image]() : ImageFactory {\n    const factory = Factories[DefinitionType.Image]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Image\n\n    return factory\n  }\n\n  static get [DefinitionType.Merger]() : MergerFactory {\n    const factory = Factories[DefinitionType.Merger]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Merger\n\n    return factory\n  }\n\n  static get [DefinitionType.Scaler]() : ScalerFactory {\n    const factory = Factories[DefinitionType.Scaler]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Scaler\n\n    return factory\n  }\n\n  static get [DefinitionType.Theme]() : ThemeFactory {\n    const factory = Factories[DefinitionType.Theme]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Theme\n\n    return factory\n  }\n\n  static get [DefinitionType.Transition]() : TransitionFactory {\n    const factory = Factories[DefinitionType.Transition]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Transition\n\n    return factory\n  }\n\n  static get track(): typeof TrackFactory { return TrackFactory }\n\n  static get [DefinitionType.Video]() : VideoFactory {\n    const factory = Factories[DefinitionType.Video]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.Video\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoSequence]() : VideoSequenceFactory {\n    const factory = Factories[DefinitionType.VideoSequence]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoSequence\n\n    return factory\n  }\n\n  static get [DefinitionType.VideoStream]() : VideoStreamFactory {\n    const factory = Factories[DefinitionType.VideoStream]\n    if (!factory) throw Errors.invalid.factory + DefinitionType.VideoStream\n\n    return factory\n  }\n  private constructor() {}\n}\n\nexport { Factory }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Actions } from \"../Actions\"\nimport { Mash } from \"../../Mash/Mash/Mash\"\nimport { Selection } from \"../../Masher/Masher\"\n\ninterface ActionObject {\n  actions : Actions\n  mash : Mash\n  redoAction() : void\n  redoSelection: Selection\n  type : string\n  undoAction(): void\n  undoSelection: Selection\n}\n\nclass Action {\n  constructor(object : ActionObject) {\n    const { actions, mash, redoSelection, type, undoSelection } = object\n    this.actions = actions\n    this.mash = mash\n    this.redoSelection = redoSelection\n    this.type = type\n    this.undoSelection = undoSelection\n  }\n\n  actions : Actions\n\n  done =  false\n\n  mash : Mash\n\n  redo() : void {\n    this.redoAction()\n    this.done = true\n  }\n\n  redoAction() : void { throw Errors.unimplemented }\n\n  redoSelection: Selection\n\n  get selection(): Selection {\n    if (this.done) return this.redoSelection\n\n    return this.undoSelection\n  }\n\n  type : string\n\n  undo() : void {\n    this.undoAction()\n    this.done = false\n  }\n\n  undoAction() : void { throw Errors.unimplemented }\n\n  undoSelection: Selection\n}\n\nexport { Action, ActionObject }\n","import { isPopulatedString } from \"./Is\"\n\nexport const Capitalize = (value : string) : string => {\n  if (!isPopulatedString(value)) return value\n\n  return `${value[0].toUpperCase()}${value.substr(1)}`\n};\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddTrackActionObject extends ActionObject {\n  trackType : TrackType\n}\nclass AddTrackAction extends Action {\n  constructor(object : AddTrackActionObject) {\n    super(object)\n    const { trackType } = object\n    this.trackType = trackType\n  }\n\n  trackType : TrackType\n\n  redoAction() : void { this.mash.addTrack(this.trackType) }\n\n  undoAction() : void { this.mash.removeTrack(this.trackType) }\n}\n\nexport { AddTrackAction, AddTrackActionObject }\n","\nimport { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mixin/Clip/Clip\"\nimport { AddTrackAction, AddTrackActionObject } from \"./AddTrackAction\"\n\ninterface AddClipToTrackActionObject extends AddTrackActionObject {\n  clip : Clip\n  createTracks : number\n  insertIndex : number\n  trackIndex : number\n}\n\nclass AddClipToTrackAction extends AddTrackAction {\n  constructor(object : AddClipToTrackActionObject) {\n    super(object)\n    const { clip, createTracks, insertIndex, trackIndex } = object\n    this.clip = clip\n    this.createTracks = createTracks\n    this.insertIndex = insertIndex\n    this.trackIndex = trackIndex\n  }\n\n  clip : Clip\n\n  createTracks : number\n\n  insertIndex : number\n\n  trackIndex : number\n\n  get clips() : Clip[] { return this.track.clips }\n\n  get track() : Track { return this.mash.trackOfTypeAtIndex(this.trackType, this.trackIndex) }\n\n  redoAction() : void {\n    for (let i = 0; i < this.createTracks; i += 1) { super.redoAction() }\n    this.mash.addClipToTrack(this.clip, this.trackIndex, this.insertIndex)\n  }\n\n  undoAction() : void {\n    this.mash.removeClipFromTrack(this.clip)\n    for (let i = 0; i < this.createTracks; i += 1) { super.undoAction() }\n  }\n}\n\nexport { AddClipToTrackAction }\n","import { Clip } from \"../../Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveClipActionObject extends ActionObject {\n  clip : Clip\n  insertIndex : number\n  redoFrame? : number\n  trackIndex : number\n  undoFrame? : number\n  undoInsertIndex : number\n  undoTrackIndex : number\n}\nclass MoveClipAction extends Action {\n  constructor(object : MoveClipActionObject) {\n    super(object)\n    const {\n      clip,\n      insertIndex,\n      redoFrame,\n      trackIndex,\n      undoFrame,\n      undoInsertIndex,\n      undoTrackIndex\n    } = object\n    this.clip = clip\n    this.insertIndex = insertIndex\n    this.redoFrame = redoFrame\n    this.trackIndex = trackIndex\n    this.undoFrame = undoFrame\n    this.undoInsertIndex = undoInsertIndex\n    this.undoTrackIndex = undoTrackIndex\n  }\n\n  clip: Clip\n\n  insertIndex : number\n\n  trackIndex : number\n\n  undoTrackIndex : number\n\n  undoInsertIndex : number\n\n  undoFrame? : number\n\n  redoFrame? : number\n\n  addClip(trackIndex : number, insertIndex : number, frame?: number) : void {\n    this.mash.addClipToTrack(this.clip, trackIndex, insertIndex, frame)\n  }\n\n  redoAction() : void {\n    this.addClip(this.trackIndex, this.insertIndex, this.redoFrame)\n  }\n\n  undoAction() : void {\n    this.addClip(this.undoTrackIndex, this.undoInsertIndex, this.undoFrame)\n  }\n}\nexport { MoveClipAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface AddEffectActionObject extends ActionObject {\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n}\nclass AddEffectAction extends Action {\n  constructor(object : AddEffectActionObject) {\n    super(object)\n    const { effect, effects, index } = object\n    this.effect = effect\n    this.effects = effects\n    this.index = index\n  }\n  effect : Effect\n\n  effects : Effect[]\n\n  index : number\n\n  redoAction() : void { this.effects.splice(this.index, 0, this.effect) }\n\n  undoAction() : void { this.effects.splice(this.index, 1) }\n}\n\nexport { AddEffectAction, AddEffectActionObject }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Clip } from \"../../Mixin/Clip/Clip\"\nimport { SelectionValue } from \"../../declarations\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface ChangeActionObject extends ActionObject {\n  property : string\n  redoValue : SelectionValue\n  target : Clip | Effect\n  undoValue : SelectionValue\n}\n\nclass ChangeAction extends Action {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    const { property, redoValue, target, undoValue } = object\n    this.property = property\n    this.redoValue = redoValue\n    this.target = target\n    this.undoValue = undoValue\n  }\n\n  property : string\n\n  redoValue : SelectionValue\n\n  target : Clip | Effect\n\n  undoValue : SelectionValue\n\n  get redoValueNumeric() : number { return Number(this.redoValue) }\n\n  get undoValueNumeric() : number { return Number(this.undoValue) }\n\n  redoAction() : void {\n    this.target.setValue(this.property, this.redoValue)\n  }\n\n  undoAction() : void {\n    this.target.setValue(this.property, this.undoValue)\n  }\n\n  updateAction(value : SelectionValue) : void {\n    this.redoValue = value\n    this.redo()\n  }\n}\n\nexport { ChangeAction, ChangeActionObject }\n","import { Clip } from \"../../Mixin/Clip/Clip\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\nclass ChangeFramesAction extends ChangeAction {\n  constructor(object : ChangeActionObject) {\n    super(object)\n    this.clip = <Clip> this.target\n  }\n\n  clip : Clip\n\n  redoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.redoValueNumeric)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipFrames(this.clip, this.undoValueNumeric)\n  }\n}\n\nexport { ChangeFramesAction }\n","import { Audible } from \"../../Mixin/Audible/Audible\"\nimport { ChangeAction, ChangeActionObject } from \"./ChangeAction\"\n\ninterface ChangeTrimActionObject extends ChangeActionObject {\n  frames : number\n}\nclass ChangeTrimAction extends ChangeAction {\n  constructor(object : ChangeTrimActionObject) {\n    super(object)\n    const { frames, target } = object\n    this.frames = frames\n    this.audibleClip = <Audible> target\n  }\n  audibleClip : Audible\n\n  frames : number\n\n  redoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.redoValueNumeric, this.frames)\n  }\n\n  undoAction() : void {\n    this.mash.changeClipTrimAndFrames(this.audibleClip, this.undoValueNumeric, this.frames)\n  }\n}\n\nexport { ChangeTrimAction }\n","import { Clip } from \"../../Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface SplitActionObject extends ActionObject {\n  index : number\n  insertClip : Clip\n  redoFrames : number\n  splitClip : Clip\n  trackClips : Clip[]\n  undoFrames : number\n}\n\nclass SplitAction extends Action {\n  constructor(object : SplitActionObject) {\n    super(object)\n    const { index, insertClip, redoFrames, splitClip, trackClips, undoFrames } = object\n    this.index = index\n    this.insertClip = insertClip\n    this.redoFrames = redoFrames\n    this.splitClip = splitClip\n    this.trackClips = trackClips\n    this.undoFrames = undoFrames\n  }\n\n  index : number\n\n  insertClip : Clip\n\n  redoFrames : number\n\n  splitClip : Clip\n\n  trackClips : Clip[]\n\n  undoFrames : number\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip)\n    this.splitClip.frames = this.redoFrames\n  }\n\n  undoAction() : void {\n    this.splitClip.frames = this.undoFrames\n    this.trackClips.splice(this.index, 1)\n  }\n}\n\nexport { SplitAction }\n","import { Clip } from \"../../Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface FreezeActionObject extends ActionObject {\n  frames : number\n  freezeClip : Clip\n  frozenClip : Clip\n  index : number\n  insertClip : Clip\n  trackClips : Clip[]\n}\n\nclass FreezeAction extends Action {\n  constructor(object : FreezeActionObject) {\n    super(object)\n    const { frames,freezeClip, frozenClip, index, insertClip, trackClips } = object\n    this.frames = frames\n    this.freezeClip = freezeClip\n    this.frozenClip = frozenClip\n    this.index = index\n    this.insertClip = insertClip\n    this.trackClips = trackClips\n\n  }\n  frames : number\n\n  index : number\n\n  trackClips : Clip[]\n\n  insertClip : Clip\n\n  freezeClip : Clip\n\n  frozenClip : Clip\n\n  redoAction() : void {\n    this.trackClips.splice(this.index, 0, this.insertClip, this.frozenClip)\n    this.freezeClip.frames -= this.frames\n  }\n\n  undoAction() : void {\n    this.freezeClip.frames += this.frames\n    this.trackClips.splice(this.index, 2)\n  }\n}\n\nexport { FreezeAction }\n","import { Effect } from \"../../Mash/Effect/Effect\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface MoveEffectActionObject extends ActionObject {\n  effects : Effect[]\n  redoEffects : Effect[]\n  undoEffects : Effect[]\n}\nclass MoveEffectAction extends Action {\n  constructor(object : MoveEffectActionObject) {\n    super(object)\n    const { effects, redoEffects, undoEffects } = object\n    this.effects = effects\n    this.redoEffects = redoEffects\n    this.undoEffects = undoEffects\n  }\n\n  effects : Effect[]\n\n  redoEffects : Effect[]\n\n  undoEffects : Effect[]\n\n  redoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.redoEffects)\n  }\n\n  undoAction() : void {\n    this.effects.splice(0, this.effects.length, ...this.undoEffects)\n  }\n}\n\nexport { MoveEffectAction }\n","import { Track } from \"../../Mash\"\nimport { Clip } from \"../../Mixin/Clip/Clip\"\nimport { Action, ActionObject } from \"./Action\"\n\ninterface RemoveClipActionObject extends ActionObject {\n  clip : Clip\n  index : number\n  track : Track\n}\nclass RemoveClipAction extends Action {\n  constructor(object : RemoveClipActionObject) {\n    super(object)\n    const { clip, index, track } = object\n    this.clip = clip\n    this.index = index\n    this.track = track\n  }\n\n  track : Track\n\n  clip : Clip\n\n  index : number\n\n  get trackIndex() : number { return this.track.layer }\n\n  redoAction() : void {\n    this.mash.removeClipFromTrack(this.clip)\n  }\n\n  undoAction() : void {\n    this.mash.addClipToTrack(this.clip, this.trackIndex, this.index)\n  }\n}\n\nexport { RemoveClipAction }\n","import { UnknownObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Capitalize } from \"../../Utilities/Capitalize\"\nimport { Action, ActionObject } from \"./Action\"\nimport { AddTrackAction } from \"./AddTrackAction\"\nimport { AddClipToTrackAction } from \"./AddClipToTrackAction\"\nimport { MoveClipAction } from \"./MoveClipAction\"\nimport { AddEffectAction } from \"./AddEffectAction\"\nimport { ChangeAction } from \"./ChangeAction\"\nimport { ChangeFramesAction } from \"./ChangeFramesAction\"\nimport { ChangeTrimAction } from \"./ChangeTrimAction\"\nimport { SplitAction } from \"./SplitAction\"\nimport { FreezeAction } from \"./FreezeAction\"\nimport { MoveEffectAction } from \"./MoveEffectAction\"\nimport { RemoveClipAction } from \"./RemoveClipAction\"\n\n\nconst classes : { [index: string] : typeof Action}= {\n  AddTrack: AddTrackAction,\n  AddClipToTrack: AddClipToTrackAction,\n  MoveClip: MoveClipAction,\n  AddEffect: AddEffectAction,\n  Change: ChangeAction,\n  ChangeFrames: ChangeFramesAction,\n  ChangeTrim: ChangeTrimAction,\n  Split: SplitAction,\n  Freeze: FreezeAction,\n  MoveEffect: MoveEffectAction,\n  RemoveClip: RemoveClipAction,\n}\n\nclass ActionFactoryClass {\n  createFromObject(object : UnknownObject) : Action {\n    const { type } = object\n    if (typeof type !== \"string\") throw Errors.type + JSON.stringify(object)\n\n    return new classes[Capitalize(type)](<ActionObject><unknown> object)\n  }\n}\n\nconst ActionFactory = new ActionFactoryClass()\n\nexport { ActionFactory }\n","import { ScrollMetrics } from '../declarations'\n\n\nconst ElementScrollProps = [\n  'scrollPaddingleft',\n  'scrollPaddingRight',\n  'scrollPaddingTop',\n  'scrollPaddingBottom',\n]\nconst elementScrollMetrics = (element?: Element | null): ScrollMetrics | undefined => {\n  if (!element) return\n\n  const style: CSSStyleDeclaration = getComputedStyle(element)\n  const entries = ElementScrollProps.map(key => {\n    const value = style.getPropertyValue(key) || '0px'\n    const number = Number(value.slice(0, -2))\n    return [key, isNaN(number) ? 0 : number]\n  })\n  const { scrollLeft, scrollTop } = element\n  const { x, y, width, height } = element.getBoundingClientRect()\n  entries.push(['scrollLeft', scrollLeft])\n  entries.push(['scrollTop', scrollTop])\n  entries.push(['x', x])\n  entries.push(['y', y])\n  entries.push(['width', width])\n  entries.push(['height', height])\n  return Object.fromEntries(entries)\n}\n\nconst Element = {\n  scrollMetrics: elementScrollMetrics,\n}\n\nexport { Element, elementScrollMetrics }\n","import { EventType } from \"../Setup/Enums\"\n\nclass Emitter extends EventTarget {\n  emit(type: EventType): void { this.dispatchEvent(new CustomEvent(type)) }\n}\n\nexport { Emitter }\n","import {\n  EvaluatorValue,\n  Scalar,\n  UnknownObject,\n  ScalarRaw,\n  ScalarValue,\n  Size,\n  ValueObject\n} from \"../declarations\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { TimeRange } from \"./TimeRange\"\nimport { VisibleContext } from \"../Playing\"\n\nconst KEYS_SIZED = ['mm_width', 'mm_height']\n\nconst KEYS_GETTERS = [\n  \"mm_dimensions\",\n  \"mm_duration\",\n  \"mm_fps\",\n  \"mm_height\",\n  \"mm_t\",\n  \"mm_width\",\n  \"t\",\n]\n\nconst KEYS = [\n  \"ceil\",\n  \"floor\",\n  \"mm_cmp\",\n  \"mm_horz\",\n  \"mm_max\",\n  \"mm_min\",\n  \"mm_vert\",\n  ...KEYS_GETTERS,\n  ...KEYS_SIZED\n]\n\nconst $evaluator = \"evaluator\"\n\nconst arrayFromElements = (elements : Scalar) : ScalarValue[] => {\n  if (typeof elements === \"string\") return String(elements).split(',')\n\n  return <ScalarValue[]> elements\n}\n\nconst conditionalExpression = (conditional : UnknownObject) : string => {\n  const { condition } = conditional\n\n  // not strict equality, since we may have strings and numbers\n  if (Is.defined(conditional.is)) return `${condition}==${conditional.is}`\n\n  const elements = conditional.in\n  if (Is.undefined(elements)) return String(condition)\n\n  // support supplying values as array or comma-delimited string\n  const array = arrayFromElements(<Scalar> elements)\n\n  const strings = Is.string(array[0])\n  const values = array.map(element => (strings ? `\"${element}\"` : element))\n  const type = strings ? 'String' : 'Number'\n  const expression = `([${values.join(',')}].includes(${type}(${condition})))`\n  return expression\n}\n\nconst replaceOperators = (string : string) : string => (\n  string.replaceAll(' or ', ' || ').replaceAll(' and ', ' && ')\n)\n\nclass Evaluator {\n  [index: string] : unknown\n\n  constructor(timeRange : TimeRange, size : Size, context? : VisibleContext, mergeContext? : VisibleContext) {\n    this.timeRange = timeRange\n    this.context = context\n    this.mergeContext = mergeContext\n    this.size = size\n    this.setInputSize(this.size)\n  }\n\n  ceil = Math.ceil\n\n  conditionalValue(conditionals : ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"conditionalValue\", conditionals)\n    const trueConditional = conditionals.find((conditional) => {\n      const expression = replaceOperators(conditionalExpression(conditional))\n      const result = this.evaluateExpression(expression)\n      // console.log(this.constructor.name, \"conditionalValue\", expression, \"=\", result)\n      return result\n    })\n    if (typeof trueConditional === \"undefined\") throw Errors.eval.conditionTruth\n\n    const { value } = trueConditional\n    if (typeof value === \"undefined\") throw Errors.eval.conditionValue\n\n    // console.log(this.constructor.name, \"conditionalValue\", value.constructor.name, value)\n    return value\n  }\n\n  context? : VisibleContext\n\n  get duration() : number { return this.timeRange.lengthSeconds }\n\n  evaluate(value : ScalarValue | ValueObject[]) : ScalarValue {\n    // console.log(this.constructor.name, \"evaluate\", value)\n    if (typeof value === \"number\") return value\n\n    const expression = (typeof value === \"string\") ? String(value) : this.conditionalValue(value)\n    if (typeof expression === \"number\") return expression\n\n    const result = this.evaluateExpression(expression)\n    // console.log(this.constructor.name, \"evaluate\", expression, \"=\", result)\n    return result\n  }\n\n  private evaluateExpression(expression : string) : ScalarValue {\n    const script = `return ${this.replaceKeys(expression)}`\n    try {\n      // eslint-disable-next-line no-new-func\n      const method = new Function($evaluator, script)\n      const result = method(this)\n      // console.log(this.constructor.name, \"evaluateExpression\", expression, result)\n      return result\n    } catch (exception) {\n      //console.warn(`Evaluator.evaluateExpression`, exception, expression, this.map)\n      return expression\n    }\n  }\n\n  floor = Math.floor\n\n  get(key : string) : EvaluatorValue | undefined {\n    if (this.map.has(key)) {\n      // console.log(\"Evaluator.get returning value from map\", key, this.map.get(key))\n      return this.map.get(key)\n    }\n\n    if (!KEYS.includes(key)) throw Errors.eval.get + key\n\n    const value = this[key]\n    if (KEYS_GETTERS.includes(key)) return <EvaluatorValue> value\n\n    if (typeof value === \"function\") {\n      // console.log(\"Evaluator.get returning method\", key)\n      return value.bind(this)\n    }\n\n    throw Errors.eval.get + key\n\n    // return // unknown key\n  }\n\n  has(key : string) : boolean { return KEYS.includes(key) || this.map.has(key) }\n\n  initialize(key : string, value : EvaluatorValue) : boolean {\n    if (this.has(key)) return false\n\n    this.set(key, value)\n    return true\n  }\n\n  get inputSize() : Size {\n    return {\n      width: Number(this.get(\"mm_input_width\")),\n      height: Number(this.get(\"mm_input_height\"))\n    }\n  }\n\n  get keys() : string[] { return [...new Set([...this.map.keys(), ...KEYS])] }\n\n  private map = new Map<string, EvaluatorValue>()\n\n  mergeContext? : VisibleContext\n\n  mm_cmp(a : number, b : number, x : number, y : number) : number {\n    return ((a > b) ? x : y)\n  }\n\n  get mm_dimensions() : string { return `${this.mm_width}x${this.mm_height}` }\n\n  get mm_duration() : number { return this.duration }\n\n  get mm_fps() : number { return this.timeRange.fps }\n\n  get mm_height() : number { return this.size.height }\n\n  mm_horz(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(0, size, proud)\n  }\n\n  mm_max = Math.max\n\n  mm_min = Math.min\n\n  get mm_t() : number { return this.position }\n\n  mm_vert(size : ScalarValue, proud : ScalarRaw) : number {\n    return this.sized(1, size, proud)\n  }\n\n  get mm_width() : number { return this.size.width }\n\n  get position() : number { return this.timeRange.position }\n\n  replaceKeys(value : string) : string {\n    let expression = value\n    const expressions = Object.fromEntries(this.keys.map(key => ([\n      key, new RegExp(`\\\\b${key}\\\\b`, 'g')\n    ])))\n    Object.entries(expressions).forEach(([key, regExp]) => {\n      expression = expression.replaceAll(regExp, `${$evaluator}.get(\"${key}\")`)\n    })\n    return expression\n  }\n\n  set(key : string, value : EvaluatorValue) : void { this.map.set(key, value) }\n\n  setInputSize({ width, height } : Size) : void {\n    this.set(\"in_h\", height)\n    this.set(\"mm_input_height\", height)\n    this.set(\"in_w\", width)\n    this.set(\"mm_input_width\", width)\n  }\n\n  size : Size\n\n  sized(vertical : number, size : ScalarValue, proud : ScalarRaw) : number {\n    const scale : number = Is.float(size) ? Number(size) : parseFloat(String(size))\n    if (Is.nan(scale)) throw Errors.eval.number + 'scale'\n\n    const sizedKey = KEYS_SIZED[vertical]\n    const sizedValue = this.get(sizedKey)\n    const value = parseFloat(String(sizedValue))\n    if (Is.nan(value)) throw Errors.eval.number + `value ${sizedKey}=>${sizedValue}`\n\n    const scaled = value * scale\n    if (!proud) return scaled\n    const otherSizedKey = KEYS_SIZED[Math.abs(vertical - 1)]\n    const otherValue = this.get(otherSizedKey)\n    if (typeof otherValue === \"undefined\") throw Errors.internal + 'otherValue'\n\n    const other = parseFloat(String(otherValue))\n    if (Is.nan(other)) throw Errors.eval.number + 'other'\n\n    if (other <= value) return scaled\n\n    return value + (scale - 1.0) * other\n  }\n\n  get t() : number { return this.mm_t }\n\n  timeRange : TimeRange\n}\n\nexport { Evaluator }\n","import { NumberConverter } from \"../declarations\"\n\nconst roundMethod = (rounding = '') : NumberConverter => {\n  switch (rounding) {\n    case 'ceil': return Math.ceil\n    case 'floor': return Math.floor\n    default: return Math.round\n  }\n}\n\nconst roundWithMethod = (number: number, method = ''): number => {\n  const func = roundMethod(method)\n  return func(number)\n}\n\nconst Round = {\n  method: roundMethod,\n  withMethod: roundWithMethod,\n}\n\nexport { Round, roundMethod, roundWithMethod }\n","import { Point, Rgba, ScalarValue, Size, Pixels } from \"../declarations\"\nimport { roundWithMethod } from \"./Round\"\n\nconst pixelFromPoint = (pt : Point, width : number) => pt.y * width + pt.x\n\nconst pixelToPoint = (index : number, width : number) : Point => (\n  { x: index % width, y: Math.floor(index / width) }\n)\n\nconst pixelToIndex = (pixel : number) => pixel * 4\n\nconst pixelRgbaAtIndex = (index : number, pixels : Pixels) : Rgba => (\n  {\n    r: pixels[index],\n    g: pixels[index + 1],\n    b: pixels[index + 2],\n    a: pixels[index + 3],\n  }\n)\n\nconst pixelRgba = (pixel : number, data : Pixels) => pixelRgbaAtIndex(pixelToIndex(pixel), data)\n\nconst pixelSafe = (pixel : number, offsetPoint: Point, size : Size) => {\n  const { x, y } = offsetPoint\n  const { width, height } = size\n  const pt = pixelToPoint(pixel, width)\n  pt.x = Math.max(0, Math.min(width - 1, pt.x + x))\n  pt.y = Math.max(0, Math.min(height - 1, pt.y + y))\n  return pixelFromPoint(pt, width)\n}\n\nconst pixelNeighboringPixels = (pixel : number, size : Size) : number[] => {\n  const depth = 3 // should be 4, no?\n  const pixels = []\n  const halfSize = Math.floor(depth / 2)\n  for (let y = 0; y < depth; y += 1) {\n    for (let x = 0; x < depth; x += 1) {\n      const offsetPoint = { x: x - halfSize, y: y - halfSize }\n      pixels.push(pixelSafe(pixel, offsetPoint, size))\n    }\n  }\n  return pixels\n}\n\nconst pixelNeighboringRgbas = (pixel : number, data : Pixels, size : Size) : Rgba[] => (\n  pixelNeighboringPixels(pixel, size).map(p => pixelRgba(p, data))\n)\n\nconst pixelColor = (value : ScalarValue) : string => {\n  const string = String(value)\n  if (string.slice(0, 2) === \"0x\") return `#${string.slice(2)}`\n\n  return string\n}\n\nconst pixelPerFrame = (frames: number, width: number, zoom: number): number => {\n  if (!(frames && width)) return 0\n\n  const widthFrames = width / frames\n\n  const min = Math.min(1, widthFrames)\n  const max = Math.max(1, widthFrames)\n  if (zoom === 1) return max\n  if (!zoom) return min\n\n  return min + ((max - min) * zoom)\n}\n\nconst pixelFromFrame = (frame: number, perFrame : number, rounding = 'ceil'): number => {\n  if (!(frame && perFrame)) return 0\n\n  const pixels = frame * perFrame\n  return roundWithMethod(pixels, rounding)\n}\n\nconst pixelToFrame = (pixels: number, perFrame : number, rounding = 'round'): number => {\n  if (!(pixels && perFrame)) return 0\n\n  return roundWithMethod(pixels / perFrame, rounding)\n}\n\nconst Pixel = {\n  color: pixelColor,\n  fromFrame: pixelFromFrame,\n  neighboringRgbas: pixelNeighboringRgbas,\n  perFrame: pixelPerFrame,\n  rgbaAtIndex: pixelRgbaAtIndex,\n  toFrame: pixelToFrame,\n}\n\nexport {\n  Pixel,\n  pixelColor,\n  pixelFromFrame,\n  pixelNeighboringRgbas,\n  pixelPerFrame,\n  pixelRgbaAtIndex,\n  pixelToFrame,\n}\n","import { Errors } from \"../Setup/Errors\"\nimport { Is } from \"./Is\"\nimport { roundWithMethod } from \"./Round\"\n\nconst greatestCommonDenominator = (fps1 : number, fps2 : number) : number => {\n  let a = fps1\n  let b = fps2\n  let t = 0\n  while (b !== 0) {\n    t = b\n    b = a % b\n    a = t\n  }\n  return a\n}\n\nconst lowestCommonMultiplier = (a : number, b : number) : number => (\n  (a * b) / greatestCommonDenominator(a, b)\n)\n\nconst timeEqualizeRates = (time1 : Time, time2 : Time, rounding = '') : Time[] => {\n  if (time1.fps === time2.fps) return [time1, time2]\n\n  const gcf = lowestCommonMultiplier(time1.fps, time2.fps)\n  return [\n    time1.scale(gcf, rounding),\n    time2.scale(gcf, rounding)\n  ]\n}\n\nclass Time implements Time {\n  frame : number\n\n  fps : number\n\n  constructor(frame = 0, fps = 1) {\n    if (!Is.integer(frame) || frame < 0) throw Errors.frame\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    this.frame = frame\n    this.fps = fps\n  }\n\n  add(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(time1.frame + time2.frame, time1.fps)\n  }\n\n  addFrame(frames : number) : Time {\n    const time = this.copy\n    time.frame += frames\n    return time\n  }\n\n  get copy() : Time { return new Time(this.frame, this.fps) }\n\n  get description() : string { return `${this.frame}@${this.fps}` }\n\n  divide(number : number, rounding = '') : Time {\n    if (!Is.number(number)) throw Errors.argument + 'divide'\n    return new Time(roundWithMethod(Number(this.frame) / number, rounding), this.fps)\n  }\n\n  equalsTime(time : Time) : boolean {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return time1.frame === time2.frame\n  }\n\n  min(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n    return new Time(Math.min(time1.frame, time2.frame), time1.fps)\n  }\n\n  scale(fps : number, rounding = '') : Time {\n    if (this.fps === fps) return this\n\n    const frame = (Number(this.frame) / Number(this.fps)) * Number(fps)\n    // console.debug(this.constructor.name, \"scale\", frame, \"=\", this.frame, \"/\", this.fps, \"*\", fps)\n    return new Time(roundWithMethod(frame, rounding), fps)\n  }\n\n  scaleToFps(fps : number) : Time { return this.scaleToTime(new Time(0, fps)) }\n\n  scaleToTime(time : Time) : Time {\n    return timeEqualizeRates(this, time)[0]\n  }\n  get seconds() : number { return Number(this.frame) / Number(this.fps) }\n\n  subtract(time : Time) : Time {\n    const [time1, time2] = timeEqualizeRates(this, time)\n\n    let subtracted = time2.frame\n    if (subtracted > time1.frame) {\n      subtracted -= subtracted - time1.frame\n    }\n    return new Time(time1.frame - subtracted, time1.fps)\n  }\n\n  subtractFrames(frames : number) : Time {\n    const time = this.copy\n    time.frame -= frames\n    return time\n  }\n\n  toString() : string { return `[${this.description}]` }\n\n  withFrame(frame : number) : Time {\n    const time = this.copy\n    time.frame = frame\n    return time\n  }\n\n  static fromArgs(frame = 0, fps = 1) : Time {\n    return new Time(frame, fps)\n  }\n\n  static fromSeconds(seconds = 0, fps = 1, rounding = '') : Time {\n    if (!Is.number(seconds) || seconds < 0) throw Errors.seconds\n    if (!Is.integer(fps) || fps < 1) throw Errors.fps\n\n    const rounded = roundWithMethod(seconds * fps, rounding)\n    return this.fromArgs(rounded, fps)\n  }\n}\ntype Times = Time[]\n\nexport { Time, Times, timeEqualizeRates }\n","import { Is } from \"./Is\"\nimport { Time, timeEqualizeRates } from \"./Time\"\nimport { roundWithMethod } from \"./Round\"\nimport { Errors } from \"../Setup/Errors\"\n\nclass TimeRange extends Time {\n  frames : number\n\n  constructor(frame = 0, fps = 1, frames = 1) {\n    if (!(Is.integer(frames) && frames >= 0)) {\n      console.trace(\"TimeRange with frames\", frames, frames.constructor.name)\n      throw Errors.argument + 'frames'\n    }\n    super(frame, fps)\n    this.frames = frames\n  }\n\n  addFrames(frames : number) : TimeRange {\n    const time = this.copy\n    time.frames += frames\n    return time\n  }\n\n  get description() : string { return `${this.frame}-${this.frames}@${this.fps}` }\n\n  get end() : number { return this.frame + this.frames }\n\n  get endTime() : Time { return Time.fromArgs(this.end, this.fps) }\n\n  equalsTimeRange(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n    return range1.frame === range2.frame && range1.frames === range2.frames\n  }\n\n  get lengthSeconds() : number { return Number(this.frames) / Number(this.fps) }\n\n  get position() : number { return Number(this.frame) / Number(this.frames) }\n\n  get startTime() : Time { return Time.fromArgs(this.frame, this.fps) }\n\n  get copy() : TimeRange {\n    return new TimeRange(this.frame, this.fps, this.frames)\n  }\n\n  scale(fps = 1, rounding = \"\") : TimeRange {\n    if (this.fps === fps) return this.copy\n\n    const value = Number(this.frames) / (Number(this.fps) / Number(fps))\n    const time = super.scale(fps, rounding)\n    const frames = Math.max(1, roundWithMethod(value, rounding))\n    return new TimeRange(time.frame, time.fps, frames)\n  }\n\n  intersects(timeRange : TimeRange) : boolean {\n    const [range1, range2] = <TimeRange[]> timeEqualizeRates(this, timeRange)\n\n    if (range1.frame >= range2.end) return false\n\n    return range1.end > range2.frame\n  }\n\n  intersectsTime(time : Time) : boolean {\n    const [time1, scaledTime] = timeEqualizeRates(this, time)\n    const scaledRange = <TimeRange> time1\n    return scaledTime.frame >= scaledRange.frame && scaledTime.frame < scaledRange.end\n\n  }\n\n  minEndTime(endTime : Time) : TimeRange {\n    const [range, time] = <TimeRange[]> timeEqualizeRates(this, endTime)\n    range.frames = Math.min(range.frames, time.frame)\n    return range\n  }\n\n  get times(): Time[] {\n    const { frames, frame, fps } = this\n    return Array.from({ length: frames + 1 }, (_, i) => Time.fromArgs(frame + i, fps))\n  }\n\n  withFrame(frame : number) : TimeRange {\n    const range = this.copy\n    range.frame = frame\n    return range\n  }\n\n  withFrames(frames : number) : TimeRange {\n    const range = this.copy\n    range.frames = frames\n    return range\n  }\n\n  static fromArgs(frame = 0, fps = 1, frames = 1) : TimeRange {\n    return new TimeRange(frame, fps, frames)\n  }\n\n  static fromSeconds(start = 0, duration = 1) : TimeRange {\n    return this.fromArgs(start, 1, duration)\n  }\n\n  static fromTime(time : Time, frames = 1) : TimeRange {\n    return this.fromArgs(time.frame, time.fps, frames)\n  }\n\n  static fromTimes(startTime : Time, endTime : Time) : TimeRange {\n    const [time1, time2] = <TimeRange[]> timeEqualizeRates(startTime, endTime)\n    if (time2.frame <= time1.frame) throw Errors.argument\n\n    const frames = time2.frame - time1.frame\n    return this.fromArgs(time1.frame, time1.fps, frames)\n  }\n}\n\nexport { TimeRange }\n","import { RemoteServer } from \"../declarations\"\n\nconst urlRemoteServer = (): RemoteServer => {\n  const url = new URL(document.baseURI)\n  const { protocol, host, pathname, port } = url\n  return {\n    protocol, host, prefix: pathname, port\n  }\n}\n\nconst urlAbsolute = (url: string): string => (new URL(url, document.baseURI)).href\nconst urlForRemoteServer = (remoteServer?: RemoteServer, suffix? : string):string => {\n  const bits: string[] = []\n  if (remoteServer) {\n    const { host, port, protocol, prefix } = remoteServer\n    if (host) {\n      bits.push(protocol || 'http')\n      bits.push('://')\n      bits.push(host)\n      if (port) {\n        bits.push(':')\n        bits.push(String(port))\n      }\n    }\n    if (prefix) bits.push(prefix)\n  }\n  if (suffix) bits.push(suffix)\n  return urlAbsolute(bits.join(''))\n}\nconst Url = {\n  absolute: urlAbsolute,\n  forRemoteServer: urlForRemoteServer,\n  remoteServer: urlRemoteServer\n}\n\nexport { Url, urlAbsolute, urlForRemoteServer, urlRemoteServer }\n","import { Mash } from \"../Mash\"\nimport { Action } from \"./Action\"\nimport { Is } from \"../Utilities\";\n\ninterface ActionsObject {\n  mash : Mash\n}\n\nclass Actions  {\n\n  constructor(object : ActionsObject) {\n    const { mash } = object\n    this.mash = mash\n  }\n\n  get canRedo() : boolean { return this.index < this.instances.length - 1 }\n\n  get canSave() : boolean { return this.canUndo }\n\n  get canUndo() : boolean { return this.index > -1 }\n\n  get currentAction() : Action { return this.instances[this.index] }\n\n  get currentActionLast() : boolean { return this.canUndo && !this.canRedo }\n\n  destroy() : void {\n    this.index = -1\n    this.instances.splice(0, this.instances.length)\n  }\n\n  add(action : Action) : void {\n    const remove = this.instances.length - (this.index + 1)\n    if (Is.positive(remove)) this.instances.splice(this.index + 1, remove)\n\n    this.instances.push(action)\n  }\n\n  index = -1\n\n  instances : Action[] = []\n\n  mash : Mash\n\n  redo() : Action {\n    this.index += 1\n    const action = this.currentAction\n    action.redo()\n\n    return action\n  }\n\n  save() : void {\n    this.instances.splice(0, this.index + 1)\n    this.index = -1\n  }\n\n  undo() : Action {\n    const action = this.currentAction\n    this.index -= 1\n    action.undo()\n    return action\n  }\n}\n\nexport { Actions }\n","\nimport { Any } from \"../declarations\"\nimport { ContextFactory } from \"../Playing/ContextFactory\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\n\nconst CacheKeyPrefix = 'cachekey'\n\nclass CacheClass {\n\n  add(url : string, value : Any) : void {\n    // console.log(this.constructor.name, \"add\", url, value.constructor.name)\n    const key = this.key(url)\n    this.cachedByKey.set(key, value)\n    this.urlsByKey.set(key, url)\n  }\n\n  audibleContext = ContextFactory.audible()\n\n  cached(url: string): boolean {\n    const object = this.getObject(url)\n    return object && ! (object instanceof Promise)\n  }\n\n  caching(url: string): boolean {\n    const object = this.getObject(url)\n    return object && object instanceof Promise\n  }\n\n  private cachedByKey = new Map<string, Any>()\n\n  flush(retainUrls: string[]) {\n    const keys = [...this.urlsByKey.keys()]\n    const retainKeys = retainUrls.map(url => this.key(url))\n    const removeKeys = keys.filter(key => !retainKeys.includes(key))\n    removeKeys.forEach(key => {\n      const url = this.urlsByKey.get(key)\n      if (url) this.remove(url)\n    })\n  }\n\n  get(url : string) : Any {\n    return this.cachedByKey.get(this.key(url))\n  }\n\n  getObject(url: string): Any {\n     if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    const key = this.key(url)\n    if (!this.cachedByKey.has(key)) return\n\n     return this.cachedByKey.get(key)\n  }\n\n  key(url : string) : string {\n    if (!Is.populatedString(url)) throw Errors.argument + 'url'\n\n    return CacheKeyPrefix + url.replaceAll(/[^a-z0-9]/gi, '')\n  }\n\n  remove(url : string) : void {\n    // console.trace(this.constructor.name, \"remove\", url)\n    const key = this.key(url)\n    this.cachedByKey.delete(key)\n    this.urlsByKey.delete(key)\n  }\n\n  private urlsByKey = new Map<string, string>()\n\n  visibleContext = ContextFactory.visible()\n}\n\nconst Cache = new CacheClass()\nexport { Cache }\n","import { Any, LoadPromise } from \"../declarations\"\nimport { Cache } from \"./Cache\"\n\nclass Loader {\n  arrayBufferPromiseFromUrl(url: string): Promise<ArrayBuffer> {\n    return fetch(url).then(response => response.arrayBuffer())\n  }\n\n  arrayBufferPromiseFromBlob(blob: Blob):Promise<ArrayBuffer> {\n    return new Promise<ArrayBuffer>((resolve, reject) => {\n      const reader = new FileReader()\n      reader.onload = () => { resolve(<ArrayBuffer> reader.result) }\n      reader.onerror = reject\n      reader.readAsArrayBuffer(blob)\n    })\n  }\n\n  audioBufferPromiseFromArrayBuffer(arrayBuffer: ArrayBuffer): Promise<AudioBuffer> {\n    return Cache.audibleContext.decode(arrayBuffer)\n  }\n\n  async loadUrl(url : string) : LoadPromise {\n    if (Cache.cached(url)) {\n      const promiseOrCached = Cache.get(url)\n      if (promiseOrCached instanceof Promise) return promiseOrCached\n      return Promise.resolve()\n    }\n\n    const promise = this.requestUrl(url)\n    Cache.add(url, promise)\n    const processed = await promise\n    Cache.add(url, processed)\n    return processed\n  }\n\n  requestUrl(_url : string) : Promise<Any> { return Promise.resolve() }\n}\n\nexport { Loader }\n","import { LoadAudioPromise } from \"../../declarations\"\nimport { LoadType} from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass AudioLoader extends Loader {\n  async requestUrl(url: string): LoadAudioPromise {\n    const promise: LoadAudioPromise = new Promise((resolve, reject) => {\n      this.arrayBufferPromiseFromUrl(url)\n        .then(arrayBuffer => this.audioBufferPromiseFromArrayBuffer(arrayBuffer))\n        .then(resolve)\n        .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Audio\n}\n\nexport { AudioLoader }\n","import { LoadFontPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\nimport { Cache } from \"../../Loading/Cache\"\n\nclass FontLoader extends Loader {\n  type = LoadType.Font\n\n  requestUrl(url: string): LoadFontPromise {\n    const promise : LoadFontPromise = new Promise((resolve, reject) => {\n      const family = Cache.key(url)\n      this.arrayBufferPromiseFromUrl(url)\n        .then(buffer => {\n          const face = new FontFace(family, buffer)\n          return face.load()\n        }).then(face => {\n          document.fonts.add(face)\n          resolve(face)\n        }).catch(reason => reject(reason))\n    })\n    return promise\n  }\n}\n\nexport { FontLoader }\n","import { LoadImagePromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass ImageLoader extends Loader {\n  type = LoadType.Image\n\n  requestUrl(url : string) : LoadImagePromise {\n    const image = new Image()\n    image.crossOrigin = \"Anonymous\"\n    image.src = url\n    return image.decode().then(() => Promise.resolve(image))\n  }\n}\n\nexport { ImageLoader }\n","import { LoadedVideo, LoadVideoPromise } from \"../../declarations\"\nimport { LoadType } from \"../../Setup/Enums\"\nimport { Loader } from \"../../Loading/Loader\"\n\nclass VideoLoader extends Loader {\n  requestUrl(url: string): LoadVideoPromise {\n    const promise: LoadVideoPromise = new Promise((resolve, reject) => {\n      return this.videoPromiseFromUrl(url).then(video => {\n        return this.arrayBufferPromiseFromUrl(url).then(arrayBuffer => {\n          return this.audioBufferPromiseFromArrayBuffer(arrayBuffer).then(audioBuffer => {\n            resolve({ video, audio: audioBuffer, sequence: [] })\n          })\n        })\n      })\n      .catch(reject)\n    })\n    return promise\n  }\n\n  type = LoadType.Video\n\n  videoPromiseFromUrl(url: string): Promise<LoadedVideo> {\n    return new Promise<LoadedVideo>((resolve, reject) => {\n      const video = this.videoFromUrl(url)\n\n      video.ondurationchange = () => {\n        video.ondurationchange = null\n        video.width = video.videoWidth\n        video.height = video.videoHeight\n        // console.debug(this.constructor.name, \"videoPromiseFromUrl\", 'ondurationchange', video.width, video.height)\n        resolve(video)\n      }\n      video.onerror = reject\n      video.load()\n    })\n  }\n\n  videoFromUrl(url: string): HTMLVideoElement {\n    const video = document.createElement('video')\n    video.crossOrigin = 'anonymous'\n    video.src = url\n    return video\n  }\n}\n\nexport { VideoLoader }\n","import { Loader } from \"./Loader\"\nimport { AudioLoader } from \"../Mash/Audio/AudioLoader\"\nimport { FontLoader } from \"../Mash/Font/FontLoader\"\nimport { ImageLoader } from \"../Mash/Image/ImageLoader\"\nimport { VideoLoader } from \"../Mash/Video/VideoLoader\"\nimport { Capitalize } from \"../Utilities/Capitalize\"\n\ntype LoaderClassType = typeof Loader\n\nconst classes : {[index : string] : LoaderClassType } = {\n  Audio: AudioLoader,\n  Font: FontLoader,\n  Image: ImageLoader,\n  Video: VideoLoader,\n}\n\nclass LoaderClass {\n  audio() { return new classes.Audio() }\n\n  font() { return new classes.Font() }\n\n  image() { return new classes.Image() }\n\n  install(type : string, loader : LoaderClassType) {\n    classes[Capitalize(type)] = loader\n  }\n\n  video() { return new classes.Video()}\n}\n\nconst LoaderFactory = new LoaderClass()\n\nexport { LoaderFactory }\n","import { colorTransparent } from \"../Utilities/Color\"\n\nconst Default = {\n  label: \"Unlabeled\",\n  masher: {\n    buffer: 10,\n    fps: 0,\n    loop: true,\n    volume: 0.75,\n    precision: 3,\n    autoplay: false,\n  },\n  mash: {\n    label: \"Unlabeled Mash\",\n    quantize: 10,\n    backcolor: colorTransparent,\n    gain: 0.75,\n    buffer: 10,\n    output: {\n      width: 320,\n      height: 240,\n      fps: 30,\n      videoBitrate: 2000,\n      audioBitrate: 160,\n      audioCodec: 'aac',\n      videoCodec: 'libx264',\n      audioChannels: 2,\n      audioFrequency: 44100,\n    }\n  },\n  instance: {\n    audio: { gain: 1.0, trim: 0, loop: 1 },\n    video: { speed: 1.0 }\n  },\n  definition: {\n    frame: { duration: 2 },\n    image: { duration: 2 },\n    theme: { duration: 3 },\n    transition: { duration: 1 },\n    video: { fps: 0 },\n    videosequence: { pattern: '%.jpg', fps: 10, increment: 1, begin: 1, padding: 0 },\n    videostream: { duration: 10 },\n  },\n}\n\nexport { Default }\n","import { Is } from \"../../Utilities/Is\"\nimport { Any, AudibleSource, JsonObject, StartOptions } from \"../../declarations\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { AudibleClass, AudibleDefinition, AudibleObject } from \"./Audible\"\nimport { Default } from \"../../Setup/Default\"\n\nconst AudibleGainDelimiter = ','\n\nfunction AudibleMixin<T extends ClipClass>(Base: T) : AudibleClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { gain } = <AudibleObject> object\n\n      if (typeof gain !== \"undefined\") {\n        if (typeof gain === \"string\") {\n          if (gain.includes(AudibleGainDelimiter)){\n            const floats = gain.split(AudibleGainDelimiter).map(string => parseFloat(string))\n            const z = floats.length / 2\n            for (let i = 0; i < z; i += 1) {\n              this.gainPairs.push([floats[i * 2], floats[i * 2 + 1]])\n            }\n            this.gain = -1\n          } else this.gain = Number(gain)\n        } else this.gain = gain\n      }\n    }\n\n    audible = true\n\n    declare definition : AudibleDefinition\n\n    gain = Default.instance.audio.gain\n\n    gainPairs : number[][] = []\n\n\n    loadedAudible():AudibleSource | undefined {\n      return this.definition.loadedAudible()\n    }\n\n    get muted() : boolean {\n      if (this.gain === 0) return true\n      if (Is.positive(this.gain)) return false\n\n      return this.gainPairs === [[0, 0], [1, 0]]\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n      const range = this.timeRange(quantize)\n      let offset = 0\n      let start = range.seconds - seconds\n      let duration = range.lengthSeconds\n\n      if (start < 0) {\n        offset -= start\n        duration += start\n        start = 0\n      }\n      return { start, offset, duration }\n    }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.gain !== Default.instance.audio.gain) object.gain = this.gain\n      return object\n    }\n  }\n}\n\nexport { AudibleMixin }\n","import { Any, ClipState, InputCommand, LoadPromise, Size } from \"../../declarations\"\nimport { TrackType } from \"../../Setup/Enums\"\nimport { Time  } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { InstanceClass } from \"../../Base/Instance\"\nimport { ClipClass, ClipObject, ClipDefinition, Clip } from \"./Clip\"\nimport { Errors } from \"../../Setup/Errors\"\n\nfunction ClipMixin<T extends InstanceClass>(Base: T): ClipClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { frame, frames, track } = <ClipObject> object\n\n      if (typeof frame !== \"undefined\" && Is.positive(frame)) this.frame = frame\n      if (frames && Is.aboveZero(frames)) this.frames = frames\n      if (typeof track !== \"undefined\") this.track = track\n    }\n\n    audible = false\n\n    clipState(quantize: number, time: Time, dimensions: Size): ClipState {\n      const clipState = this.inputCommandAtTimeToSize(time, quantize, dimensions)\n      if (!clipState) throw Errors.internal\n\n      return clipState\n    }\n\n    commandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n      const source = this.definition.inputSource\n      const inputCommand: InputCommand = { sources: { source }, filters: []}\n      return inputCommand\n    }\n\n    get copy(): Clip {\n      const clipObject: ClipObject = this.toJSON()\n      clipObject.id = ''\n      clipObject.track = this.track\n      return <Clip> this.definition.instanceFromObject(clipObject)\n    }\n\n    declare definition: ClipDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      const startTime = this.time(quantize).scale(scaledTime.fps)\n      const endTime = this.endTime(quantize).scale(scaledTime.fps)\n\n      const frame = Math.max(Math.min(scaledTime.frame, endTime.frame), startTime.frame)\n      return scaledTime.withFrame(frame - startTime.frame)\n    }\n\n    get endFrame() { return this.frame + this.frames }\n\n    endTime(quantize : number) : Time {\n      return Time.fromArgs(this.endFrame, quantize)\n    }\n\n    frame = 0\n\n    frames = -1\n\n    inputCommandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n      return\n    }\n\n    loadClip(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.loadDefinition(quantize, startTime, endTime)\n    }\n\n    clipUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.definition.definitionUrls(startTime, endTime)\n    }\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n    time(quantize : number) : Time { return Time.fromArgs(this.frame, quantize) }\n\n    timeRange(quantize : number) : TimeRange {\n      return TimeRange.fromArgs(this.frame, quantize, this.frames)\n    }\n\n    timeRangeRelative(time : Time, quantize : number) : TimeRange {\n      const range = this.timeRange(quantize).scale(time.fps)\n      const frame = Math.max(0, time.frame - range.frame)\n      return range.withFrame(frame)\n    }\n\n    // toJSON() : JsonObject {\n    //   const object = super.toJSON()\n    //   object.id = this.id\n    //   return object\n    // }\n\n    track = -1\n\n    trackType = TrackType.Video\n\n    visible = false\n  }\n}\n\nexport { ClipMixin }\n","import { Any, JsonObject, StartOptions } from \"../../declarations\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { AudibleFileClass, AudibleFileDefinition, AudibleFileObject } from \"./AudibleFile\"\n\nimport { Cache } from \"../../Loading/Cache\"\n\nfunction AudibleFileMixin<T extends AudibleClass>(Base: T): AudibleFileClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { loop, trim } = <AudibleFileObject>object\n\n      if (typeof trim !== \"undefined\" && Is.integer(trim)) this.trim = trim\n      if (typeof loop !== \"undefined\" && Is.integer(loop)) this.loop = loop\n    }\n\n    declare definition : AudibleFileDefinition\n\n    definitionTime(quantize : number, time : Time) : Time {\n      const scaledTime = super.definitionTime(quantize, time)\n      if (!Is.aboveZero(this.trim)) return scaledTime\n\n      const trimTime = this.trimTime(quantize).scale(scaledTime.fps)\n      return scaledTime.withFrame(scaledTime.frame + trimTime.frame)\n    }\n\n    loop = Default.instance.audio.loop\n\n    maxFrames(quantize : number, trim? : number) : number {\n      const space = trim ? trim : this.trim\n      return Math.floor(this.definition.duration * quantize) - space\n    }\n\n    startOptions(seconds: number, quantize: number): StartOptions {\n\n      const range = this.timeRange(quantize)\n      let offset = 0\n      let start = range.seconds - seconds\n      let duration = range.lengthSeconds\n\n      if (this.trim) { offset = Time.fromArgs(this.trim, quantize).seconds }\n\n      if (start < 0) {\n        offset -= start\n        duration += start\n        start = 0\n      }\n\n      const result = { start, offset, duration }\n      // console.log(\"startOptions\", seconds, quantize, result)\n      return result\n    }\n\n    trim = Default.instance.audio.trim\n\n    trimTime(quantize: number): Time { return Time.fromArgs(this.trim, quantize) }\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.trim !== Default.instance.audio.trim) object.trim = this.trim\n      if (this.loop !== Default.instance.audio.loop) object.loop = this.loop\n      return object\n    }\n  }\n}\nexport { AudibleFileMixin }\n","import { TrackType } from \"../../Setup/Enums\"\nimport { AudioDefinition } from \"./Audio\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { AudibleMixin } from \"../../Mixin/Audible/AudibleMixin\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { AudibleFileMixin } from \"../../Mixin/AudibleFile/AudibleFileMixin\"\n\nconst AudioWithClip = ClipMixin(InstanceBase)\nconst AudioWithAudible = AudibleMixin(AudioWithClip)\nconst AudioWithAudibleFile = AudibleFileMixin(AudioWithAudible)\nclass AudioClass extends AudioWithAudibleFile {\n  declare definition : AudioDefinition\n\n  trackType = TrackType.Audio\n}\n\n\nexport { AudioClass }\n","\nimport { Property } from \"../../Setup/Property\"\nimport { Any, ObjectUnknown } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { DefinitionClass } from \"../../Base/Definition\"\nimport { Default } from \"../../Setup/Default\"\nimport { ClipDefinitionClass } from \"./Clip\"\nimport { Time } from \"../../Utilities/Time\"\n\nconst ClipPropertyObjects = [\n  { name: \"frame\", type: DataType.Integer, value: 0 },\n  { name: \"frames\", type: DataType.Integer, value: -1 },\n  { name: \"label\", type: DataType.String, value: \"\" },\n  // { name: \"track\", type: DataType.Integer, value: -1 },\n]\n\nfunction ClipDefinitionMixin<T extends DefinitionClass>(Base: T) : ClipDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const properties = ClipPropertyObjects.map(object => new Property(object))\n      this.properties.push(...properties)\n    }\n\n    audible = false\n\n    // TODO: determine if this is needed!\n    // used by theme, image, frame, transition\n    private _duration? : number\n\n    get duration() : number {\n      if (!this._duration) {\n        const object = <ObjectUnknown> Default.definition\n        this._duration = Number(object[this.type].duration)\n      }\n      return this._duration\n    }\n\n    set duration(value : number) { this._duration = value }\n\n    frames(quantize: number): number {\n      return Time.fromSeconds(this.duration, quantize, 'floor').frame\n    }\n\n    get inputSource(): string { return '' }\n\n    streamable = false\n\n    visible = false\n  }\n}\n\nexport { ClipDefinitionMixin }\n","import { Any, JsonObject, LoadPromise, AudibleSource, LoadedAudio } from \"../../declarations\"\nimport { DataType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { AudibleDefinitionClass, AudibleDefinitionObject } from \"./Audible\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\nfunction AudibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : AudibleDefinitionClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { stream, url, audio, source, waveform } = <AudibleDefinitionObject>object\n\n      const urlAudible = audio || url || source || \"\"\n      if (!urlAudible) throw Errors.invalid.definition.audio\n\n      this.urlAudible = urlAudible\n\n      if (stream) this.stream = true\n      this.source = source || urlAudible\n      if (waveform) this.waveform = waveform\n\n      this.properties.push(new Property({ name: \"gain\", type: DataType.Number, value: 1.0 }))\n    }\n\n    get absoluteUrl(): string { return urlAbsolute(this.urlAudible) }\n\n    audible = true\n\n    get inputSource(): string { return urlAbsolute(this.source) }\n\n    loadDefinition(_quantize: number, _start: Time, end?: Time): LoadPromise | void {\n      if (!end) return\n\n      const url = this.absoluteUrl\n      if (Cache.cached(url)) return\n\n      if (Cache.caching(url)) return Cache.get(url)\n\n      return LoaderFactory.audio().loadUrl(url)\n    }\n\n    definitionUrls() : string[] { return [this.absoluteUrl] }\n\n    loadedAudible(): AudibleSource | undefined {\n\n      const cached: LoadPromise | LoadedAudio | undefined = Cache.get(this.absoluteUrl)\n      if (!cached || cached instanceof Promise) return\n\n      // console.debug(this.constructor.name, \"loadedAudible\", cached.constructor.name)\n      return Cache.audibleContext.createBufferSource(cached)\n    }\n\n    loops = false\n\n    source : string\n\n    stream = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.audio = this.urlAudible\n      if (this.source) object.source = this.source\n      if (this.waveform) object.waveform = this.waveform\n      return object\n    }\n\n    unload(times : Times[] = []) : void {\n      super.unload(times)\n      if (times.length && times.some(maybePair => maybePair.length === 2)) {\n        return // don't unload if any times indicate audio needed\n      }\n      if (!Cache.cached(this.absoluteUrl)) return\n\n      Cache.remove(this.absoluteUrl)\n    }\n\n    urlAudible : string\n\n    waveform? : string\n  }\n}\n\nexport { AudibleDefinitionMixin }\n","import { DataType } from \"../../Setup/Enums\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { AudibleFileDefinitionClass, AudibleFileDefinitionObject } from \"./AudibleFile\"\nimport { Property } from \"../../Setup/Property\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n\nfunction AudibleFileDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : AudibleFileDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { loops, duration } = <AudibleFileDefinitionObject> object\n      if (!duration) throw Errors.invalid.definition.duration\n\n      this.duration = Number(duration)\n      if (loops) {\n        this.properties.push(new Property({ name: \"loop\", type: DataType.Integer, value: 1 }))\n        this.loops = true\n      }\n      this.properties.push(new Property({ name: \"trim\", type: DataType.Integer, value: 0 }))\n    }\n\n    duration : number\n\n    loops = false\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.duration = this.duration\n      if (this.loops) object.loops = true\n      return object\n    }\n  }\n}\n\nexport { AudibleFileDefinitionMixin }\n","import { Any } from \"../../declarations\"\nimport { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { AudioClass } from \"./AudioInstance\"\nimport { Audio, AudioObject } from \"./Audio\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { AudibleFileDefinitionMixin } from \"../../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst AudioDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst AudioDefinitionWithAudible = AudibleDefinitionMixin(AudioDefinitionWithClip)\nconst AudioDefinitionWithAudibleFile = AudibleFileDefinitionMixin(AudioDefinitionWithAudible)\nclass AudioDefinitionClass extends AudioDefinitionWithAudibleFile {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Audio { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : AudioObject) : Audio {\n    // console.log(\"instanceFromObject\", object)\n    const audioObject = { ...this.instanceObject, ...object }\n    // console.log(\"instanceFromObject\", typeof audioObject.gain, audioObject.gain, object)\n    return new AudioClass(audioObject)\n  }\n\n  trackType = TrackType.Audio\n\n  type = DefinitionType.Audio\n}\n\nexport { AudioDefinitionClass }\n","import { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { AudioDefinitionClass } from \"./AudioDefinition\"\nimport { AudioDefinition, AudioDefinitionObject, Audio, AudioObject } from \"./Audio\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n/**\n * @internal\n */\nconst audioDefinition = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id\n\n  if (Definitions.installed(id)) return <AudioDefinition> Definitions.fromId(id)\n\n  return new AudioDefinitionClass(object)\n}\n\n/**\n * @internal\n */\nconst audioDefinitionFromId = (id : string) : AudioDefinition => {\n  return audioDefinition({ id })\n}\n\n/**\n * @internal\n */\nconst audioInstance = (object : AudioObject) : Audio => {\n  const definition = audioDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\n/**\n * @internal\n */\nconst audioFromId = (id : string) : Audio => {\n  return audioInstance({ id })\n}\n\n/**\n * @internal\n */\nconst audioInitialize = () : void => {}\n\n/**\n * @internal\n */\nconst audioDefine = (object : AudioDefinitionObject) : AudioDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return audioDefinition(object)\n}\n\n/**\n * @internal\n */\nconst audioInstall = (object: AudioDefinitionObject): AudioDefinition => {\n  const instance = audioDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst AudioFactoryImplementation = {\n  define: audioDefine,\n  definition: audioDefinition,\n  definitionFromId: audioDefinitionFromId,\n  fromId: audioFromId,\n  initialize: audioInitialize,\n  install: audioInstall,\n  instance: audioInstance,\n}\n\nFactories[DefinitionType.Audio] = AudioFactoryImplementation\n\n\nexport {\n  audioDefine,\n  audioDefinition,\n  audioDefinitionFromId,\n  AudioFactoryImplementation,\n  audioFromId,\n  audioInstall,\n  audioInitialize,\n  audioInstance,\n}\n","import { JsonObject, ScalarValue, ValueObject } from \"../declarations\"\nimport { Errors } from \"./Errors\"\n\ninterface ParameterObject {\n  name? : string\n  value? : ScalarValue | ValueObject[]\n}\n\nclass Parameter {\n  constructor({ name, value } : ParameterObject) {\n    if (!name) throw Errors.invalid.name\n    if (typeof value === \"undefined\") throw Errors.invalid.value\n\n    this.name = String(name)\n    this.value = value\n  }\n\n  name : string\n\n  toJSON() : JsonObject {\n    return { name: this.name, value: this.value }\n  }\n\n  value : ScalarValue | ValueObject[]\n}\n\nexport { Parameter, ParameterObject }\n","import { InstanceBase } from \"../../Base/Instance\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Any, InputFilter, JsonObject, ValueObject } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Evaluator, Is } from \"../../Utilities\"\nimport { FilterDefinition } from \"./Filter\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { FilterObject } from \"./Filter\"\n\nclass FilterClass extends InstanceBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!Is.populatedObject(object)) throw Errors.invalid.object + 'filter'\n\n    const { parameters } = <FilterObject> object\n    if (parameters) {\n      this.parameters.push(...parameters.map(parameter => new Parameter(parameter)))\n    }\n  }\n\n  declare definition : FilterDefinition\n\n  drawFilter(evaluator : Evaluator) : VisibleContext {\n    this.definition.scopeSet(evaluator)\n    const evaluated = this.evaluated(evaluator)\n    return this.definition.draw(evaluator, evaluated)\n  }\n\n  evaluated(evaluator : Evaluator) : ValueObject {\n    const evaluated : ValueObject = {}\n    const parameters = [...this.parameters]\n    // console.log(this.constructor.name, \"evaluated\", this.id, parameters.map(p => p.name))\n    this.definition.parameters.forEach(parameter => {\n      if (parameters.find(p => p.name === parameter.name)) return\n\n      // console.log(this.constructor.name, \"evaluated\", this.id, \"adding\", parameter.name)\n      parameters.push(parameter)\n    })\n\n    if (!Is.populatedArray(parameters)) return evaluated\n\n    parameters.forEach(parameter => {\n      const { name, value } = parameter\n      if (!Is.populatedString(name)) return\n\n      const evaluatedValue = evaluator.evaluate(value)\n      evaluated[name] = evaluatedValue\n      evaluator.set(name, evaluatedValue)\n      return `${name}=>${evaluatedValue}`\n    })\n    return evaluated\n  }\n\n\n  inputFilter(evaluator: Evaluator): InputFilter {\n    this.definition.scopeSet(evaluator)\n    const evaluated = this.evaluated(evaluator)\n    const input = this.definition.input(evaluator, evaluated)\n\n    // console.log(this.constructor.name, \"inputFilter\", input)\n    return input\n  }\n\n  parameters : Parameter[] = []\n\n  toJSON() : JsonObject {\n    const object : JsonObject = { id: this.id }\n    if (this.parameters.length) object.parameters = this.parameters\n    return object\n  }\n}\n\nexport { FilterClass }\n","import { Any, InputFilter, ValueObject } from \"../../declarations\"\nimport { Parameter } from \"../../Setup/Parameter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Filter, FilterObject } from \"./Filter\"\nimport { FilterClass } from \"./FilterInstance\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../../Definitions/Definitions\"\n\n\nclass FilterDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  draw(_evaluator : Evaluator, _evaluated : ValueObject) : VisibleContext {\n    throw Errors.unimplemented + this.id\n  }\n\n  input(_evaluator: Evaluator, _evaluated: ValueObject): InputFilter {\n    throw Errors.unimplemented + this.id\n  }\n\n  get instance() : Filter {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FilterObject) : Filter {\n    const instance = new FilterClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  parameters : Parameter[] = []\n\n  retain = true\n\n  scopeSet(_evaluator : Evaluator) : void {}\n\n  type = DefinitionType.Filter\n}\n\nexport { FilterDefinitionClass }\n","import { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { DataType } from \"../../../Setup/Enums\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Types } from \"../../../Setup/Types\"\n\nclass BlendFilter extends FilterDefinitionClass {\n\n  // eslint-disable-next-line camelcase\n  draw(evaluator : Evaluator, evaluated : { all_mode : string }) : VisibleContext {\n    const { context, mergeContext } = evaluator\n    if (!(context && mergeContext)) throw Errors.invalid.context\n\n    const modes = Types.propertyType(DataType.Mode).values\n    if (typeof modes === \"undefined\") throw Errors.unknown.mode\n\n    const mode = modes.find(object => object.id === evaluated.all_mode)\n    if (typeof mode === \"undefined\") throw Errors.unknown.mode\n\n    const { identifier } = mode\n\n    mergeContext.drawWithComposite(context.drawingSource, identifier)\n    return mergeContext\n  }\n}\n\nexport { BlendFilter }\n","import { Pixels, ValueObject, Yuv } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { Color } from \"../../../Utilities/Color\"\nimport { Pixel } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\n\nclass ChromaKeyFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const { width, height } = context.size\n    const { accurate } = evaluated\n    const similarity = Number(evaluated.similarity)\n    const blend = Number(evaluated.blend)\n\n    const color = String(evaluated.color)\n    const components = color.substr(4, color.length - 5).split(',')\n    const colors = components.map(f => Number(f))\n    const rgb = { r: colors[0], g: colors[1], b: colors[2] }\n    const yuv = Color.rgb2yuv(rgb)\n    const frame = context.imageData\n    const pixelsRgb = frame.data\n    const pixelsYuv = accurate ? (\n      this.yuvsFromPixelsAccurate(pixelsRgb, width, height) // slow!\n    ) : this.yuvsFromPixels(pixelsRgb)\n\n    let offset = 0\n\n    pixelsYuv.reverse().forEach(matrix => {\n      pixelsRgb[offset + 3] = Color.yuvBlend(matrix, yuv, similarity, blend)\n      offset += 4\n    })\n    context.drawImageData(frame)\n    return context\n  }\n\n  // id = 'chromakey'\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"similarity\", value: \"similarity\" }),\n    new Parameter({ name: \"blend\", value: \"blend\" }),\n  ]\n\n  yuvsFromPixels(pixels : Pixels) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      array.push([Color.rgb2yuv(Pixel.rgbaAtIndex(index * 4, pixels))])\n    }\n    return array\n  }\n\n  yuvsFromPixelsAccurate(pixels : Pixels, width : number, height : number) : Yuv[][] {\n    const array = []\n    for (let index = pixels.length / 4 - 1; index > 0; index -= 1) {\n      const size = { width, height }\n      array.push(Pixel.neighboringRgbas(index * 4, pixels, size).map(rgb => Color.rgb2yuv(rgb)))\n    }\n    return array\n  }\n}\n\nexport { ChromaKeyFilter }\n","import { InputFilter, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { isPopulatedString } from \"../../../Utilities/Is\"\nimport { pixelColor } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\n\nclass ColorFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const { color } = evaluated\n    if (!isPopulatedString(color)) return context\n\n    context.drawFill(pixelColor(color))\n    return context\n  }\n\n  input(evaluator: Evaluator, evaluated: ValueObject): InputFilter {\n    const inputFilter: InputFilter = {\n      filter: this.id,\n      options: Object.fromEntries(this.parameters.map(parameter => [\n        parameter.name,\n        evaluated[parameter.name] || String(evaluator.get(parameter.name) || '')\n      ]))\n    }\n    // inputFilter.options.loop = 1\n    return inputFilter\n   }\n\n  parameters = [\n    new Parameter({ name: \"color\", value: \"color\" }),\n    new Parameter({ name: \"size\", value: \"mm_dimensions\" }),\n    // new Parameter({ name: \"duration\", value: \"mm_duration\" }),\n    new Parameter({ name: \"rate\", value: \"mm_fps\" }),\n  ]\n}\n\nexport { ColorFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { Errors } from \"../../../Setup/Errors\"\n\nclass ColorChannelMixerFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const map = Object.fromEntries(Object.entries(evaluated).map(entry => {\n      const [key, value] = entry\n      return [key, Number(value)]\n    }))\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const rgbas = 'rgba'.split('')\n    rgbas.forEach(first => {\n      rgbas.forEach(second => {\n        const key = `${first}${second}`\n        if (map[key] === null) map[key] = first === second ? 1.0 : 0.0\n      })\n    })\n    const { imageData } = context\n    const { data } = imageData\n    data.forEach((r, i) => {\n      const g = data[i + 1]\n      const b = data[i + 2]\n      const a = data[i + 3]\n      data[i] = r * map.rr + g * map.rg + b * map.rb + a * map.ra\n      data[i + 1] = r * map.gr + g * map.gg + b * map.gb + a * map.ga\n      data[i + 2] = r * map.br + g * map.bg + b * map.bb + a * map.ba\n      data[i + 3] = r * map.ar + g * map.ag + b * map.ab + a * map.aa\n    })\n    context.drawImageData(imageData)\n    return context\n  }\n}\n\nexport { ColorChannelMixerFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { UnknownObject, ValueObject } from \"../../../declarations\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { pixelNeighboringRgbas } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { Errors } from \"../../../Setup/Errors\"\n\nconst RBGA = 'rgba'\n\nconst parse = (evaluated : ValueObject) => {\n  const result : Record<string, UnknownObject> = { bias: {}, rdiv: {}, matrix: {} }\n  RBGA.split('').forEach((channel, index) => {\n    const matrixString = <string> evaluated[`${index}m`]\n    const matrix = matrixString.split(' ').map((i : string) => parseInt(i))\n    result.matrix[channel] = matrix\n    result.rdiv[channel] = evaluated[`${index}rdiv`] || 1\n    if (String(result.rdiv[channel]).includes('/')) {\n      const array = String(result.rdiv[channel]).split('/')\n      result.rdiv[channel] = parseFloat(array[0]) / parseFloat(array[1])\n    } else result.rdiv[channel] = parseFloat(String(result.rdiv[channel]))\n    result.bias[channel] = evaluated[`${index}bias`] || 0\n  })\n  // console.log(ConvolutionFilter.name, \"parse\", evaluated, result)\n  return result\n}\n\nclass ConvolutionFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const options = parse(evaluated)\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const { size } = context\n    const { width, height } = size\n    const input = context.imageData\n    // TODO: figure out if we actually need fresh data??\n    const output = context.imageDataFresh\n    const inputData = input.data\n    const outputData = output.data\n    const area = width * height\n    for (let pixel = 0; pixel < area; pixel += 1) {\n      const rgbas = pixelNeighboringRgbas(pixel, inputData, size)\n      RBGA.split('').forEach((channel, index) => {\n        const rdiv = <number> options.rdiv[channel]\n        const matrix = <number[]> options.matrix[channel]\n        const bias = <number> options.bias[channel]\n        let sum = 0\n        for (let y = 0; y < 9; y += 1) sum += rgbas[y][channel] * matrix[y]\n\n        sum = Math.floor(sum * rdiv + bias + 0.5)\n        outputData[pixel * 4 + index] = sum\n      })\n    }\n    context.drawImageData(output)\n    return context\n  }\n\n  // id = 'convolution'\n\n}\n\nexport { ConvolutionFilter }\n","import { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { EvaluatedRect } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass CropFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedRect) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const inSize = evaluator.inputSize\n    let width = evaluated.w || evaluated.out_w || 0\n    let height = evaluated.h || evaluated.out_h || 0\n    // console.log(this.constructor.name, width, height, evaluated)\n\n    if (width + height < 2) throw Errors.eval.outputSize\n\n    if (width === -1) width = inSize.width * (height / inSize.height)\n    if (height === -1) height = inSize.height * (width / inSize.width)\n\n    const fromSize = { width, height }\n    const inRect = { x, y, ...fromSize }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inRect, fromSize)\n\n    drawing.drawInRectFromSize(context.drawingSource, inRect, fromSize)\n    return drawing\n  }\n\n  // id = 'crop'\n\n  scopeSet(evaluator: Evaluator): void {\n    const { context } = evaluator\n    if (!context) return\n\n    evaluator.setInputSize(context.size)\n    evaluator.initialize(\"x\", '((in_w - out_w) / 2)')\n    evaluator.initialize(\"y\", '((in_h - out_h) / 2)')\n  }\n}\n\nexport { CropFilter }\n","import { VisibleContext } from \"../../../Playing\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { isPopulatedString } from \"../../../Utilities/Is\"\nimport { pixelColor } from \"../../../Utilities/Pixel\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\ninterface EvaluatedBox {\n  x? : number\n  y? : number\n  color? : string\n  width? : number\n  height? : number\n}\n\nclass DrawBoxFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedBox) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const color = isPopulatedString(evaluated.color) ? <string> evaluated.color : 'black'\n    const x = evaluated.x || 0\n    const y = evaluated.y || 0\n    const width = evaluated.width || context.size.width\n    const height = evaluated.height || context.size.height\n\n    context.drawFillInRect(pixelColor(color), { x, y, width, height })\n    return context\n  }\n}\n\nexport { DrawBoxFilter }\n","import { InstanceBase } from \"../../Base/Instance\"\nimport { FontDefinition } from \"./Font\"\n\nclass FontClass extends InstanceBase {\n  declare definition : FontDefinition\n}\n\nexport { FontClass }\n","import { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { Font, FontDefinitionObject, FontObject } from \"./Font\"\nimport { FontClass } from \"./FontInstance\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Time } from \"../../Utilities/Time\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\nclass FontDefinitionClass extends DefinitionBase {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { source, url } = <FontDefinitionObject> object\n    if (!(source || url)) throw Errors.invalid.definition.source\n\n    this.source = source || url || ''\n    Definitions.install(this)\n  }\n  get absoluteUrl(): string { return urlAbsolute(this.source) }\n\n  get instance() : Font {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : FontObject) : Font {\n    return new FontClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.font().loadUrl(url)\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] {\n    return [urlAbsolute(this.source)]\n  }\n\n  loadedVisible() : Any { return Cache.get(urlAbsolute(this.source)) }\n\n  retain = true\n\n  source : string\n\n  toJSON() : JsonObject {\n    return { ...super.toJSON(), source: this.source }\n  }\n\n  type = DefinitionType.Font\n}\n\nexport { FontDefinitionClass }\n","import { Definitions } from \"../../Definitions\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { FontDefinitionClass } from \"./FontDefinition\"\nimport { Font, FontDefinition, FontDefinitionObject, FontObject } from \"./Font\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport fontDefaultJson from \"../../Definitions/DefinitionObjects/font/default.json\"\n\nconst fontDefaultId = \"com.moviemasher.font.default\"\n\nconst fontDefinition = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  if (!Definitions.installed(idString)) {\n    new FontDefinitionClass({ ...object, type: DefinitionType.Font, id: idString })\n  }\n  return <FontDefinition> Definitions.fromId(idString)\n}\nconst fontDefinitionFromId = (id : string) : FontDefinition => {\n  return fontDefinition({ id })\n}\n\nconst fontInstance = (object : FontObject) : Font => {\n  return fontDefinition(object).instanceFromObject(object)\n}\n\nconst fontFromId = (id : string) : Font => {\n  return fontInstance({ id })\n}\n\nconst fontInitialize = () : void => {\n  fontDefinition(fontDefaultJson)\n}\nconst fontDefine = (object : FontDefinitionObject) : FontDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : fontDefaultId\n  Definitions.uninstall(idString)\n  return fontDefinition(object)\n}\n\nconst FontFactoryImplementation = {\n  define: fontDefine,\n  install: fontDefine,\n  definition: fontDefinition,\n  definitionFromId: fontDefinitionFromId,\n  fromId: fontFromId,\n  initialize: fontInitialize,\n  instance: fontInstance,\n}\n\nFactories[DefinitionType.Font] = FontFactoryImplementation\n\nexport {\n  fontDefine,\n  fontDefine as fontInstall,\n  fontDefinition,\n  fontDefinitionFromId,\n  FontFactoryImplementation,\n  fontFromId,\n  fontInitialize,\n  fontInstance,\n}\n","import { Cache } from \"../../../Loading\"\nimport { Evaluator, Is } from \"../../../Utilities\"\nimport { Parameter } from \"../../../Setup/Parameter\"\nimport { InputFilter, ScalarValue, TextStyle, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\nimport { VisibleContext } from \"../../../Playing\"\nimport { fontDefinitionFromId } from \"../../Font/FontFactory\"\n\nconst mmFontFile = (id? : ScalarValue) : string => {\n  if (!Is.populatedString(id)) throw Errors.id + id\n\n  return fontDefinitionFromId(<string> id).absoluteUrl\n}\n\nconst mmTextFile = (text? : ScalarValue) : string => String(text)\n\nconst mmFontFamily = (id? : ScalarValue) : string => Cache.key(mmFontFile(id))\n\nclass DrawTextFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : ValueObject) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const fontface = String(evaluator.get(\"fontface\"))\n    const family = mmFontFamily(fontface)\n    const {\n      x, y, fontsize, fontcolor, text, textfile, shadowcolor, shadowx, shadowy\n    } = evaluated\n    if (!(fontsize && Is.aboveZero(fontsize))) throw Errors.eval.number + \" fontsize\"\n\n    const height = Number(fontsize)\n    const textStyle : TextStyle =  {\n      height,\n      family,\n      color: String(fontcolor || 'black'),\n      shadow: String(shadowcolor || \"\"),\n      shadowPoint: { x: Number(shadowx || 0), y: Number(shadowy || 0) },\n    }\n    const point = { x: Number(x || 0), y: Number(y || 0) }\n    const string = String(text || textfile)\n    context.drawTextAtPoint(string, textStyle, point)\n\n    return context\n  }\n\n  input(_evaluator: Evaluator, evaluated: ValueObject): InputFilter {\n    const outWidth = evaluated.w || evaluated.width || 0\n    const outHeight = evaluated.h || evaluated.height || 0\n    const inputFilter: InputFilter = {\n      filter: this.id,\n      options: { width: outWidth, height: outHeight }\n    }\n\n    return inputFilter\n  }\n\n  parameters = [\n    new Parameter({ name: \"fontcolor\", value: \"#000000\" }),\n    new Parameter({ name: \"shadowcolor\", value: \"#FFFFFF\" }),\n    new Parameter({ name: \"fontsize\", value: \"mm_vert(20)\" }),\n    new Parameter({ name: \"x\", value: \"0\" }),\n    new Parameter({ name: \"y\", value: \"0\" }),\n    new Parameter({ name: \"shadowx\", value: \"mm_horz(5)\" }),\n    new Parameter({ name: \"shadowy\", value: \"mm_vert(5)\" }),\n    new Parameter({ name: \"fontfile\", value: \"mmFontFile('com.moviemasher.font.default')\" }),\n    new Parameter({ name: \"textfile\", value: \"Hello World\" }),\n  ]\n\n  scopeSet(evaluator : Evaluator) : void {\n    evaluator.set(\"text_w\", 0) // width of the text to draw\n    evaluator.set(\"text_h\", 0) // height of the text to draw\n    evaluator.set(\"mmFontFamily\", mmFontFamily)\n    evaluator.set(\"mmTextFile\", mmTextFile)\n    evaluator.set(\"mmFontFile\", mmFontFile)\n\n    // support deprecated snake case\n    evaluator.set(\"mm_fontfamily\", mmFontFamily)\n    evaluator.set(\"mm_textfile\", mmTextFile)\n    evaluator.set(\"mm_fontfile\", mmFontFile)\n  }\n}\n\nexport { DrawTextFilter }\n","\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass FadeFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    const drawing = ContextFactory.toSize(context.size)\n    const alpha = Number(evaluator.get('alpha') || evaluator.position)\n    const type = String(evaluator.get('type') || 'in')\n    const typedAlpha = type === 'in' ? alpha : 1.0 - alpha\n    drawing.drawWithAlpha(context.drawingSource, typedAlpha)\n    return drawing\n  }\n}\n\nexport { FadeFilter }\n","\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { EvaluatedPoint, InputFilter, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass OverlayFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedPoint) : VisibleContext {\n    const { x, y } = evaluated\n    const { context, mergeContext } = evaluator\n    if (!(context && mergeContext)) throw Errors.invalid.context\n\n    mergeContext.drawAtPoint(context.drawingSource, { x: x || 0, y: y || 0 })\n    return mergeContext\n  }\n\n  input(_evaluator: Evaluator, evaluated: ValueObject): InputFilter {\n    const { x, y } = evaluated\n    return {\n      filter: this.id,\n      options: { x, y }\n    }\n  }\n\n  scopeSet(evaluator: Evaluator): void {\n    const { context } = evaluator\n    if (!context) return\n\n    const { width, height } = context.size\n    evaluator.set(\"overlay_w\", width)\n    evaluator.set(\"overlay_h\", height)\n  }\n}\n\nexport { OverlayFilter }\n","\nimport { EvaluatedSize, InputFilter, Size, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { ContextFactory } from \"../../../Playing/ContextFactory\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass ScaleFilter extends FilterDefinitionClass {\n  draw(evaluator : Evaluator, evaluated : EvaluatedSize) : VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    let outWidth = evaluated.w || evaluated.width || 0\n    let outHeight = evaluated.h || evaluated.height || 0\n    if (outWidth + outHeight < 2) return context\n\n\n    const inSize : Size = {\n      width: Number(evaluator.get(\"mm_in_w\")), height: Number(evaluator.get(\"mm_in_h\"))\n    }\n    if (outWidth === -1) outWidth = inSize.width * (outHeight / inSize.height)\n    else if (outHeight === -1) outHeight = inSize.height * (outWidth / inSize.width)\n\n    const fromSize = { width: outWidth, height: outHeight }\n    const drawing = ContextFactory.toSize(fromSize)\n    // console.log(this.constructor.name, \"draw\", inSize, fromSize)\n\n    drawing.drawInSizeFromSize(context.drawingSource, inSize, fromSize)\n    return drawing\n  }\n\n  input(_evaluator: Evaluator, evaluated: ValueObject): InputFilter {\n    const outWidth = evaluated.w || evaluated.width || 0\n    const outHeight = evaluated.h || evaluated.height || 0\n    const inputFilter: InputFilter = {\n      filter: this.id,\n      options: { width: outWidth, height: outHeight }\n    }\n\n    return inputFilter\n  }\n\n  scopeSet(evaluator: Evaluator): void {\n    const { context } = evaluator\n    if (!context) return\n\n    const { width, height } = context.size\n    evaluator.set(\"in_h\", height)\n    evaluator.set(\"mm_in_h\", height)\n    evaluator.set(\"in_w\", width)\n    evaluator.set(\"mm_in_w\", width)\n  }\n}\n\nexport { ScaleFilter }\n","import { InputFilter, ValueObject } from \"../../../declarations\"\nimport { Errors } from \"../../../Setup/Errors\"\nimport { VisibleContext } from \"../../../Playing/VisibleContext\"\nimport { Evaluator } from \"../../../Utilities/Evaluator\"\nimport { FilterDefinitionClass } from \"../FilterDefinition\"\n\nclass SetSarFilter extends FilterDefinitionClass {\n  draw(evaluator: Evaluator, _evaluated: ValueObject): VisibleContext {\n    const { context } = evaluator\n    if (!context) throw Errors.invalid.context\n\n    return context\n  }\n\n  input(_evaluator: Evaluator, evaluated: ValueObject): InputFilter {\n    return { filter: this.id, options: { sar: 1, max: 1 } }\n  }\n}\n\nexport { SetSarFilter }\n","import { BlendFilter } from \"./Definitions/BlendFilter\"\nimport { ChromaKeyFilter } from \"./Definitions/ChromaKeyFilter\"\nimport { ColorFilter } from \"./Definitions/ColorFilter\"\nimport { ColorChannelMixerFilter } from \"./Definitions/ColorChannelMixerFilter\"\nimport { ConvolutionFilter } from \"./Definitions/ConvolutionFilter\"\nimport { CropFilter } from \"./Definitions/CropFilter\"\nimport { DrawBoxFilter } from \"./Definitions/DrawBoxFilter\"\nimport { DrawTextFilter } from \"./Definitions/DrawTextFilter\"\nimport { FadeFilter } from \"./Definitions/FadeFilter\"\nimport { OverlayFilter } from \"./Definitions/OverlayFilter\"\nimport { ScaleFilter } from \"./Definitions/ScaleFilter\"\nimport { SetSarFilter } from \"./Definitions/SetSarFilter\"\nimport { Definitions } from \"../../Definitions\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { FilterDefinition, Filter, FilterDefinitionObject } from \"./Filter\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\n\nconst filterDefinition = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <FilterDefinition> Definitions.fromId(id)\n\n  throw Errors.invalid.definition.id + ' filterDefinition ' + id\n}\n\nconst filterDefinitionFromId = (id : string) : FilterDefinition => {\n  return filterDefinition({ id })\n}\n\nconst filterInstance = (object : FilterDefinitionObject) : Filter => {\n  return filterDefinition(object).instanceFromObject(object)\n}\n\nconst filterFromId = (id : string) : Filter => { return filterInstance({ id }) }\n\nconst filterInitialize = () : void => {\n  new ConvolutionFilter({ id: 'convolution', type: DefinitionType.Filter })\n  new SetSarFilter({ id: 'setsar', type: DefinitionType.Filter })\n  new BlendFilter({ id: 'blend', type: DefinitionType.Filter })\n  new ChromaKeyFilter({ id: 'chromakey', type: DefinitionType.Filter })\n  new ColorFilter({ id: 'color', type: DefinitionType.Filter })\n  new ColorChannelMixerFilter({ id: 'colorchannelmixer', type: DefinitionType.Filter })\n  new CropFilter({ id: 'crop', type: DefinitionType.Filter })\n  new DrawBoxFilter({ id: 'drawbox', type: DefinitionType.Filter })\n  new DrawTextFilter({ id: 'drawtext', type: DefinitionType.Filter })\n  new FadeFilter({ id: 'fade', type: DefinitionType.Filter })\n  new OverlayFilter({ id: 'overlay', type: DefinitionType.Filter })\n  new ScaleFilter({ id: 'scale', type: DefinitionType.Filter })\n}\n\nconst filterDefine = (object : FilterDefinitionObject) : FilterDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.invalid.definition.id + 'filterDefine'\n\n  Definitions.uninstall(id)\n  return filterDefinition(object)\n}\n\nconst FilterFactoryImplementation = {\n  define: filterDefine,\n  install: filterDefine,\n  definition: filterDefinition,\n  definitionFromId: filterDefinitionFromId,\n  fromId: filterFromId,\n  initialize: filterInitialize,\n  instance: filterInstance,\n}\n\nFactories[DefinitionType.Filter] = FilterFactoryImplementation\n\nexport {\n  filterDefine,\n  filterDefine as filterInstall,\n  filterDefinition,\n  filterDefinitionFromId,\n  FilterFactoryImplementation,\n  filterFromId,\n  filterInitialize,\n  filterInstance,\n}\n","import { Modular, ModularDefinitionClass, ModularDefinitionObject } from \"./Modular\"\nimport { Property, PropertyObject } from \"../../Setup/Property\"\nimport { Any, InputFilter, JsonObject, ScalarValue, Size } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Is } from \"../../Utilities/Is\"\nimport { VisibleContext } from \"../../Playing\"\nimport { DefinitionClass } from \"../../Base/Definition\"\nimport { Filter } from \"../../Mash/Filter/Filter\"\nimport { Evaluator } from \"../../Utilities/Evaluator\"\nimport { filterInstance } from \"../../Mash/Filter\"\n\nfunction ModularDefinitionMixin<T extends DefinitionClass>(Base: T) : ModularDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { properties, filters } = <ModularDefinitionObject> object\n      if (properties) {\n        const propertyInstances = Object.entries(properties).map(entry => {\n          const [name, propertyObject] = entry\n          if (!Is.object(propertyObject)) throw Errors.invalid.property + \"name \" + name\n\n          const property : PropertyObject = Object.assign(propertyObject, { name, custom: true })\n          return new Property(property)\n        })\n        this.properties.push(...propertyInstances)\n      }\n      if (filters) {\n        const filterInstances = filters.map(filter => {\n          const { id } = filter\n          if (!id) throw Errors.id + JSON.stringify(filter)\n\n          return filterInstance(filter)\n        })\n        this.filters.push(...filterInstances)\n      }\n\n    }\n\n    drawFilters(modular: Modular, range : TimeRange, context : VisibleContext, size : Size, outContext?: VisibleContext) : VisibleContext {\n     // range's frame is offset of draw time in clip = frames is duration\n      let contextFiltered = context\n      this.filters.forEach(filter => {\n        const evaluator = this.evaluator(modular, range, size, contextFiltered, outContext)\n        contextFiltered = filter.drawFilter(evaluator)\n      })\n      return contextFiltered\n    }\n\n    evaluator(modular: Modular, range : TimeRange, size : Size, context? : VisibleContext, mergerContext? : VisibleContext) : Evaluator {\n      const instance = new Evaluator(range, size, context, mergerContext)\n      this.propertiesCustom.forEach(property => {\n        const value = <ScalarValue> modular.value(property.name)\n        instance.set(property.name, value)\n      })\n      return instance\n    }\n\n    filters : Filter[] = []\n\n    inputFilters(modular: Modular, range: TimeRange, size: Size): InputFilter[] {\n      // range's frame is offset of draw time in clip = frames is duration\n      const inputFilters = this.filters.map(filter => {\n        const evaluator = this.evaluator(modular, range, size)\n        return filter.inputFilter(evaluator)\n      })\n\n      // console.log(this.constructor.name, \"inputFilters\", this.id, inputFilters)\n      return inputFilters\n    }\n\n    get propertiesCustom() : Property[] {\n      return this.properties.filter(property => property.custom)\n    }\n\n    retain = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.filters.length) object.filters = this.filters\n      const entries = this.propertiesCustom.map(property => [property.name, property])\n      if (entries.length) object.properties = Object.fromEntries(entries)\n\n      return object\n    }\n  }\n}\n\nexport { ModularDefinitionMixin }\n","import { Any, LoadPromise, Size } from \"../../declarations\"\nimport { Definition } from \"../../Base/Definition\"\nimport { ModularClass, ModularDefinition } from \"./Modular\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { InstanceClass } from \"../../Base/Instance\"\nimport { Time } from \"../../Utilities/Time\"\n\n\nfunction ModularMixin<T extends InstanceClass>(Base: T) : ModularClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      this.constructProperties(object)\n    }\n\n    constructProperties(object : Any = {}) : void {\n      // console.log(this.constructor.name, \"constructProperties\", object, this.propertyNames)\n      this.definition.properties.forEach(property => {\n        const { name } = property\n        if (typeof object[name] !== \"undefined\") this[name] = object[name]\n        else if (typeof this[name] === \"undefined\") this[name] = property.value\n      })\n    }\n\n    declare definition : ModularDefinition\n\n    get definitions() : Definition[] {\n      return [...super.definitions, ...this.modularDefinitions]\n    }\n\n    loadModular(quantize : number, start : Time, end? : Time) : LoadPromise | void {\n      const promises: LoadPromise[] = []\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      this.modularDefinitions.forEach(definition => {\n        const promise = definition.loadDefinition(quantize, startTime, endTime)\n        if (promise) promises.push(promise)\n      })\n      return Promise.all(promises).then()\n    }\n\n    modularUrls(quantize : number, start : Time, end? : Time) : string[] {\n      const startTime = this.definitionTime(quantize, start)\n      const endTime = end ? this.definitionTime(quantize, end) : end\n      return this.modularDefinitions.flatMap(definition =>\n        definition.definitionUrls(startTime, endTime)\n      )\n    }\n\n    get modularDefinitions() : Definition[] {\n      const modular = this.definition.propertiesModular\n      const ids = modular.map(property => String(this.value(property.name)))\n      return ids.map(id => Definitions.fromId(id))\n    }\n  }\n}\n\nexport { ModularMixin }\n","import { EffectDefinition } from \"./Effect\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ModularMixin } from \"../../Mixin/Modular/ModularMixin\"\nimport { JsonObject } from \"../../declarations\"\n\nconst EffectWithModular = ModularMixin(InstanceBase)\nclass EffectClass extends EffectWithModular {\n  declare definition : EffectDefinition\n\n  // toJSON() : JsonObject {\n  //   const object = super.toJSON()\n  //   object.id = this.id\n  //   return object\n  // }\n}\n\nexport { EffectClass }\n","import { DefinitionBase } from \"../../Base/Definition\"\nimport { Effect, EffectObject } from \"./Effect\"\nimport { ModularDefinitionMixin } from \"../../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { EffectClass } from \"./EffectInstance\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Property } from \"../../Setup/Property\"\n\nconst EffectDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass EffectDefinitionClass extends EffectDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n\n    this.properties.push(new Property({ name: \"label\", type: DataType.String, value: \"\" }))\n\n    Definitions.install(this)\n  }\n\n  get instance() : Effect { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : EffectObject) : Effect {\n    return new EffectClass({ ...this.instanceObject, ...object })\n  }\n\n  type = DefinitionType.Effect\n}\n\nexport { EffectDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { EffectDefinitionClass } from \"./EffectDefinition\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Effect, EffectDefinition, EffectObject, EffectDefinitionObject } from \"./Effect\"\n\nimport effectBlurJson from \"../../Definitions/DefinitionObjects/effect/blur.json\"\nimport effectChromaKeyJson from \"../../Definitions/DefinitionObjects/effect/chromakey.json\"\nimport effectEmbossJson from \"../../Definitions/DefinitionObjects/effect/emboss.json\"\nimport effectGrayscaleJson from \"../../Definitions/DefinitionObjects/effect/grayscale.json\"\nimport effectSepiaJson from \"../../Definitions/DefinitionObjects/effect/sepia.json\"\nimport effectSharpenJson from \"../../Definitions/DefinitionObjects/effect/sharpen.json\"\nimport effectTextJson from \"../../Definitions/DefinitionObjects/effect/text.json\"\n\n\nconst effectDefinition = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <EffectDefinition> Definitions.fromId(id)\n\n  return new EffectDefinitionClass({...object, type: DefinitionType.Effect })\n}\n\nconst effectDefinitionFromId = (id : string) : EffectDefinition => {\n  return effectDefinition({ id })\n}\n\nconst effectInstance = (object : EffectObject) : Effect => {\n  const definition = effectDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst effectFromId = (id : string) : Effect => {\n  return effectInstance({ id })\n}\n\nconst effectInitialize = () : void => {\n  new EffectDefinitionClass(effectBlurJson)\n  new EffectDefinitionClass(effectChromaKeyJson)\n  new EffectDefinitionClass(effectEmbossJson)\n  new EffectDefinitionClass(effectGrayscaleJson)\n  new EffectDefinitionClass(effectSepiaJson)\n  new EffectDefinitionClass(effectSharpenJson)\n  new EffectDefinitionClass(effectTextJson)\n}\n\nconst effectDefine = (object : EffectDefinitionObject) : EffectDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return effectDefinition(object)\n}\n\nconst EffectFactoryImplementation = {\n  define: effectDefine,\n  definition: effectDefinition,\n  definitionFromId: effectDefinitionFromId,\n  fromId: effectFromId,\n  initialize: effectInitialize,\n  install: effectDefine,\n  instance: effectInstance,\n}\n\nFactories[DefinitionType.Effect] = EffectFactoryImplementation\n\nexport {\n  effectDefine,\n  effectDefinition,\n  effectDefinitionFromId,\n  EffectFactoryImplementation,\n  effectFromId,\n  effectDefine as effectInstall,\n  effectInitialize,\n  effectInstance,\n}\n","import { MergerDefinition } from \"./Merger\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ModularMixin } from \"../../Mixin/Modular/ModularMixin\"\nimport { Factory } from \"../../Definitions/Factory/Factory\"\n\n\nconst MergerWithModular = ModularMixin(InstanceBase)\nclass MergerClass extends MergerWithModular {\n  declare definition : MergerDefinition\n\n  // get id() : string { return this.definition.id }\n\n  // set id(value : string) {\n  //   this.definition = Factory.merger.definitionFromId(value)\n  //   this.constructProperties()\n  // }\n}\n\nexport { MergerClass }\n","import { MergerClass } from \"./MergerInstance\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { Merger, MergerObject } from \"./Merger\"\nimport { ModularDefinitionMixin } from \"../../Mixin/Modular/ModularDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { DefinitionType } from \"../../Setup/Enums\"\n\nimport { Definitions } from \"../../Definitions/Definitions\"\n\nconst MergerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass MergerDefinitionClass extends MergerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    // this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Merger {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : MergerObject) : Merger {\n    const instance = new MergerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n  retain = true\n\n  type = DefinitionType.Merger\n}\n\nexport { MergerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { MergerDefinitionClass } from \"../Merger/MergerDefinition\"\nimport { Definitions } from \"../../Definitions\"\nimport mergerBlendJson from \"../../Definitions/DefinitionObjects/merger/blend.json\"\nimport mergerCenterJson from \"../../Definitions/DefinitionObjects/merger/center.json\"\nimport mergerConstrainedJson from \"../../Definitions/DefinitionObjects/merger/constrained.json\"\nimport mergerDefaultJson from \"../../Definitions/DefinitionObjects/merger/default.json\"\nimport mergerOverlayJson from \"../../Definitions/DefinitionObjects/merger/overlay.json\"\nimport {\n  Merger,\n  MergerObject,\n  MergerDefinition,\n  MergerDefinitionObject,\n  MergerFactory\n} from \"../Merger/Merger\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { Is } from \"../../Utilities/Is\"\n\n\nconst mergerDefaultId = \"com.moviemasher.merger.default\"\n\nconst mergerDefinition = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  if (Definitions.installed(idString)) return <MergerDefinition> Definitions.fromId(idString)\n\n  return new MergerDefinitionClass({ ...object, type: DefinitionType.Merger, id: idString })\n}\n\nconst mergerDefinitionFromId = (id : string) : MergerDefinition => {\n  return mergerDefinition({ id })\n}\n\nconst mergerInstance = (object: MergerObject): Merger => {\n  const { definitionId } = object\n\n  const definition = mergerDefinition({ id: definitionId })\n  return definition.instanceFromObject(object)\n}\n\nconst mergerFromId = (definitionId : string) : Merger => {\n  return mergerInstance({ definitionId })\n}\n\nconst mergerInitialize = () : void => {\n  new MergerDefinitionClass(mergerBlendJson)\n  new MergerDefinitionClass(mergerCenterJson)\n  new MergerDefinitionClass(mergerConstrainedJson)\n  new MergerDefinitionClass(mergerDefaultJson)\n  new MergerDefinitionClass(mergerOverlayJson)\n}\n\nconst mergerDefine = (object : MergerDefinitionObject) : MergerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : mergerDefaultId\n  Definitions.uninstall(idString)\n  return mergerDefinition(object)\n}\n\n\nconst MergerFactoryImplementation : MergerFactory = {\n  define: mergerDefine,\n  install: mergerDefine,\n  definition: mergerDefinition,\n  definitionFromId: mergerDefinitionFromId,\n  fromId: mergerFromId,\n  initialize: mergerInitialize,\n  instance: mergerInstance,\n}\n\nFactories[DefinitionType.Merger] = MergerFactoryImplementation\n\nexport {\n  mergerDefine,\n  mergerDefine as mergerInstall,\n  mergerDefaultId,\n  mergerDefinition,\n  mergerDefinitionFromId,\n  MergerFactoryImplementation,\n  mergerFromId,\n  mergerInitialize,\n  mergerInstance,\n}\n","import { ScalerDefinition } from \"./Scaler\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ModularMixin } from \"../../Mixin/Modular/ModularMixin\"\n\nconst ScalerWithModular = ModularMixin(InstanceBase)\nclass ScalerClass extends ScalerWithModular { declare definition : ScalerDefinition }\n\nexport { ScalerClass }\n","import { Scaler, ScalerObject } from \"./Scaler\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { ModularDefinitionMixin } from \"../../Mixin/Modular/ModularDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Any } from \"../../declarations\"\nimport { ScalerClass } from \"./ScalerInstance\"\n// import { Property } from \"../../Setup/Property\"\n\nconst ScalerDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nclass ScalerDefinitionClass extends ScalerDefinitionWithModular {\n  constructor(...args : Any[]) {\n    super(...args)\n    // this.properties.push(new Property({ name: \"id\", type: DataType.String, value: \"\" }))\n    Definitions.install(this)\n  }\n\n  get instance() : Scaler {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ScalerObject) : Scaler {\n    const instance = new ScalerClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  retain = true\n\n  type = DefinitionType.Scaler\n}\n\nexport { ScalerDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { ScalerDefinitionClass } from \"../Scaler/ScalerDefinition\"\nimport {\n  Scaler, ScalerDefinition, ScalerDefinitionObject, ScalerObject\n} from \"../Scaler/Scaler\"\n\nimport scalerDefaultJson from \"../../Definitions/DefinitionObjects/scaler/default.json\"\nimport scalerPanJson from \"../../Definitions/DefinitionObjects/scaler/pan.json\"\nimport scalerScaleJson from \"../../Definitions/DefinitionObjects/scaler/scale.json\"\n\nconst scalerDefaultId = \"com.moviemasher.scaler.default\"\n\nconst scalerDefinition = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n  if (Definitions.installed(idString)) return <ScalerDefinition> Definitions.fromId(idString)\n\n  return new ScalerDefinitionClass({ ...object, type: DefinitionType.Scaler, id: idString })\n}\n\nconst scalerDefinitionFromId = (id : string) : ScalerDefinition => {\n  return scalerDefinition({ id })\n}\n\nconst scalerInstance = (object: ScalerObject): Scaler => {\n  const { definitionId } = object\n\n  const definition = scalerDefinition({ id: definitionId })\n  return definition.instanceFromObject(object)\n}\n\nconst scalerFromId = (definitionId : string) : Scaler => {\n  return scalerInstance({ definitionId })\n}\n\nconst scalerInitialize = () : void => {\n  new ScalerDefinitionClass(scalerDefaultJson)\n  new ScalerDefinitionClass(scalerPanJson)\n  new ScalerDefinitionClass(scalerScaleJson)\n}\n\nconst scalerDefine = (object : ScalerDefinitionObject) : ScalerDefinition => {\n  const { id } = object\n  const idString = id && Is.populatedString(id) ? id : scalerDefaultId\n\n  Definitions.uninstall(idString)\n  return scalerDefinition(object)\n}\n\nconst ScalerFactoryImplementation = {\n  define: scalerDefine,\n  install: scalerDefine,\n  definitionFromId: scalerDefinitionFromId,\n  definition: scalerDefinition,\n  instance: scalerInstance,\n  fromId: scalerFromId,\n  initialize: scalerInitialize,\n}\n\nFactories[DefinitionType.Scaler] = ScalerFactoryImplementation\n\nexport {\n  scalerDefine,\n  scalerDefine as scalerInstall,\n  scalerDefaultId,\n  scalerDefinition,\n  scalerDefinitionFromId,\n  ScalerFactoryImplementation,\n  scalerFromId,\n  scalerInitialize,\n  scalerInstance,\n}\n","import { Any, InputCommand, JsonObject, LoadPromise, Size } from \"../../declarations\"\nimport { Merger } from \"../../Mash/Merger/Merger\"\nimport { Effect } from \"../../Mash/Effect/Effect\"\nimport { Scaler } from \"../../Mash/Scaler/Scaler\"\nimport { VisibleClass } from \"../Visible/Visible\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { Definition } from \"../../Base/Definition\"\nimport { TransformableClass, TransformableObject } from \"./Transformable\"\nimport { mergerInstance } from \"../../Mash/Merger/MergerFactory\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Is } from \"../../Utilities/Is\"\nimport { effectInstance } from \"../../Mash/Effect\"\nimport { scalerInstance } from \"../../Mash/Scaler\"\n\nfunction TransformableMixin<T extends VisibleClass>(Base: T): TransformableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      // console.log(\"TransformableMixin\", object)\n      const { merger, effects, scaler } = <TransformableObject>object\n\n      this.merger = mergerInstance(merger || {})\n      this.scaler = scalerInstance(scaler || {})\n\n      if (effects) {\n        const effectInstances = effects.map(effect => effectInstance(effect))\n        this.effects.push(...effectInstances)\n      }\n    }\n\n    get definitions(): Definition[] {\n      return [\n        ...super.definitions,\n        ...this.merger.definitions,\n        ...this.scaler.definitions,\n        ...this.effects.flatMap(effect => effect.definitions)\n      ]\n    }\n\n    effectedCommandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n      const scaledCommand = this.scaledCommandAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledCommand) {\n        // console.log(this.constructor.name, \"effectedCommandAtTimeToSize scaledCommandAtTimeToSize falsey\")\n        return\n      }\n\n      if (!this.effects) return scaledCommand\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) {\n        // console.log(this.constructor.name, \"effectedCommandAtTimeToSize timeRangeRelative falsey\")\n        return\n      }\n\n      this.effects.reverse().every(effect => (\n        scaledCommand.filters.push(...effect.definition.inputFilters(effect, clipTimeRange, dimensions))\n      ))\n      return scaledCommand\n    }\n\n    effectedContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const scaledContext = this.scaledContextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!scaledContext) return\n\n      let context = scaledContext\n      if (!this.effects) return context\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (!clipTimeRange) return\n\n      this.effects.reverse().every(effect => (\n        context = effect.definition.drawFilters(effect, clipTimeRange, context, dimensions)\n      ))\n      return context\n    }\n\n    effects: Effect[] = []\n\n\n    inputCommandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n      const effected = this.effectedCommandAtTimeToSize(mashTime, quantize, dimensions)\n      if (!effected) {\n        // console.log(this.constructor.name, \"inputCommandAtTimeToSize effectedCommandAtTimeToSize falsey\")\n        return\n      }\n      const range = this.timeRangeRelative(mashTime, quantize)\n      effected.merger = this.merger.definition.inputFilters(this.merger, range, dimensions)[0]\n\n      // console.log(this.constructor.name, \"inputCommandAtTimeToSize\", effected)\n      return effected\n    }\n\n    loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        super.loadClip(quantize, start, end),\n        this.loadTransformable(quantize, start, end)\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    loadTransformable(quantize: number, start: Time, end?: Time): LoadPromise | void {\n      const loads = [\n        this.merger.loadModular(quantize, start, end),\n        this.scaler.loadModular(quantize, start, end),\n        ...this.effects.map(effect => effect.loadModular(quantize, start, end))\n      ]\n      const promises = loads.filter(Boolean)\n      switch (promises.length) {\n        case 0: return\n        case 1: return promises[0]\n        default: return Promise.all(promises).then()\n      }\n    }\n\n    mergeContextAtTime(mashTime: Time, quantize: number, context: VisibleContext): void {\n      const effected = this.effectedContextAtTimeToSize(mashTime, quantize, context.size)\n      if (!effected) return\n\n      const range = this.timeRangeRelative(mashTime, quantize)\n      this.merger.definition.drawFilters(this.merger, range, effected, context.size, context)\n    }\n\n    merger: Merger\n\n    scaledCommandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n      const command = this.commandAtTimeToSize(mashTime, quantize, dimensions)\n      if (!command) {\n        // console.log(this.constructor.name, \"scaledCommandAtTimeToSize super falsey\")\n        return\n      }\n\n      // console.log(this.constructor.name, \"scaledCommandAtTimeToSize command\", command)\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) {\n        // console.log(this.constructor.name, \"scaledCommandAtTimeToSize timeRangeRelative falsey\")\n        return command\n      }\n      command.filters.push(...this.scaler.definition.inputFilters(this.scaler, clipTimeRange, dimensions))\n\n      // console.log(this.constructor.name, \"scaledCommandAtTimeToSize\", command)\n\n      return command\n    }\n\n    scaledContextAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): VisibleContext | undefined {\n      const context = this.contextAtTimeToSize(mashTime, quantize, dimensions)\n      if (!context) return\n\n      const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n      if (Is.undefined(clipTimeRange)) return context\n      // console.log(this.constructor.name, \"scaledContextAtTimeToSize\", clipTimeRange)\n      return this.scaler.definition.drawFilters(this.scaler, clipTimeRange, context, dimensions)\n    }\n\n    scaler: Scaler\n\n    toJSON(): JsonObject {\n      const object = super.toJSON()\n      // console.log(this.constructor.name, \"toJSON\", object)\n      object.merger = this.merger\n      object.scaler = this.scaler\n      object.effects = this.effects\n      return object\n    }\n  }\n}\n\nexport { TransformableMixin }\n","import { ContextFactory } from \"../../Playing/ContextFactory\"\nimport { VisibleContext } from \"../../Playing/VisibleContext\"\nimport { VisibleSource, Size } from \"../../declarations\"\nimport { TrackType } from \"../../Setup/Enums\"\nimport { Time  } from \"../../Utilities/Time\"\nimport { ClipClass } from \"../Clip/Clip\"\nimport { VisibleClass, VisibleDefinition } from \"./Visible\"\n\nfunction VisibleMixin<T extends ClipClass>(Base: T) : VisibleClass & T {\n  return class extends Base {\n\n    contextAtTimeToSize(mashTime : Time, quantize: number, _dimensions : Size) : VisibleContext | undefined {\n      const definitionTime = this.definitionTime(quantize, mashTime)\n      // console.debug(this.constructor.name, \"contextAtTimeToSize\", definitionTime.toString(), mashTime.toString())\n      const image = this.loadedVisible(quantize, definitionTime)\n      if (!image) {\n        console.error(this.constructor.name, \"contextAtTimeToSize not loaded\", this.id)\n        return\n      }\n      const width = Number(image.width)\n      const height = Number(image.height)\n\n      const context = ContextFactory.toSize({ width, height })\n      context.draw(image)\n      return context\n    }\n\n    declare definition: VisibleDefinition\n\n\n    loadedVisible(quantize: number, definitionTime:Time):VisibleSource | undefined {\n      return this.definition.loadedVisible(quantize, definitionTime)\n    }\n\n    mergeContextAtTime(_time : Time, _quantize: number, _context : VisibleContext) : void {}\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\nexport { VisibleMixin }\n","import { InstanceBase } from \"../../Base/Instance\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../../Mixin/Transformable/TransformableMixin\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\nimport { ImageDefinition } from \"./Image\"\n\nconst ImageWithClip = ClipMixin(InstanceBase)\nconst ImageWithVisible = VisibleMixin(ImageWithClip)\nconst ImageWithTransformable = TransformableMixin(ImageWithVisible)\nclass ImageClass extends ImageWithTransformable {\n  declare definition : ImageDefinition\n}\n\nexport { ImageClass }\n","import { VisibleSource } from \"../../declarations\"\nimport { TrackType } from \"../../Setup/Enums\"\nimport { ClipDefinitionClass } from \"../Clip/Clip\"\nimport { VisibleDefinitionClass } from \"./Visible\"\n\nfunction VisibleDefinitionMixin<T extends ClipDefinitionClass>(Base: T) : VisibleDefinitionClass & T {\n  return class extends Base {\n    loadedVisible(): VisibleSource | undefined { return }\n\n    trackType = TrackType.Video\n\n    visible = true\n  }\n}\n\nexport { VisibleDefinitionMixin }\n","import { DefinitionBase } from \"../../Base/Definition\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { Image, ImageDefinitionObject, ImageObject } from \"./Image\"\nimport { ImageClass } from \"./ImageInstance\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { Cache } from \"../../Loading\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\n\n\nconst ImageDefinitionWithClip = ClipDefinitionMixin(DefinitionBase)\nconst ImageDefinitionWithVisible = VisibleDefinitionMixin(ImageDefinitionWithClip)\nconst ImageDefinitionWithTransformable = VisibleDefinitionMixin(ImageDefinitionWithVisible)\n\nclass ImageDefinitionClass extends ImageDefinitionWithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    if (!object) throw Errors.unknown.definition\n    // console.log(\"ImageDefinition\", object)\n    const { url, source } = <ImageDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.urlVisible = url\n    this.source = source || url\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.urlVisible) }\n\n  get inputSource(): string { return urlAbsolute(this.source) }\n\n  get instance() : Image {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object : ImageObject) : Image {\n    const instance = new ImageClass({ ...this.instanceObject, ...object })\n    return instance\n  }\n\n  loadDefinition(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const definitionPromise = super.loadDefinition(quantize, start, end)\n    if (definitionPromise) promises.push(definitionPromise)\n    const url = this.absoluteUrl\n    if (!Cache.cached(url)) {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    }\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  definitionUrls(_start : Time, _end? : Time) : string[] { return [this.absoluteUrl] }\n\n  loadedVisible(): VisibleSource | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  type = DefinitionType.Image\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.urlVisible\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times : Times[] = []) : void {\n    super.unload(times)\n    if (times.length) return // don't unload since any times indicate image needed\n\n    if (!Cache.cached(this.urlVisible)) return // we're not loaded\n\n    Cache.remove(this.urlVisible)\n  }\n\n  urlVisible : string\n}\n\nexport { ImageDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { ImageDefinitionClass } from \"../Image/ImageDefinition\"\nimport { Image, ImageDefinition, ImageDefinitionObject, ImageObject } from \"./Image\"\n\nconst imageDefinition = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!id) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <ImageDefinition> Definitions.fromId(id)\n\n  return new ImageDefinitionClass(object)\n}\n\nconst imageDefinitionFromId = (id : string) : ImageDefinition => {\n  return imageDefinition({ id })\n}\n\nconst imageInstance = (object : ImageObject) : Image => {\n  const definition = imageDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst imageFromId = (id : string) : Image => {\n  return imageInstance({ id })\n}\n\nconst imageInitialize = () : void => {}\n\nconst imageDefine = (object : ImageDefinitionObject) : ImageDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id\n\n  Definitions.uninstall(id)\n  return imageDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst imageInstall = (object: ImageDefinitionObject): ImageDefinition => {\n  const instance = imageDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\nconst ImageFactoryImplementation = {\n  define: imageDefine,\n  install: imageInstall,\n  definition: imageDefinition,\n  definitionFromId: imageDefinitionFromId,\n  fromId: imageFromId,\n  initialize: imageInitialize,\n  instance: imageInstance,\n}\n\nFactories[DefinitionType.Image] = ImageFactoryImplementation\n\nexport {\n  imageInstall,\n  imageDefine,\n  imageDefinition,\n  imageDefinitionFromId,\n  ImageFactoryImplementation,\n  imageFromId,\n  imageInitialize,\n  imageInstance,\n}\n","import { Errors} from \"../Setup/Errors\"\nimport { Default } from \"../Setup/Default\"\nimport { DefinitionType, EventType } from \"../Setup/Enums\"\nimport { pixelColor } from \"../Utilities/Pixel\"\nimport { sortByTrack } from \"../Utilities/Sort\"\nimport { Is } from \"../Utilities/Is\"\nimport { Time } from \"../Utilities/Time\"\nimport { Audible } from \"../Mixin/Audible/Audible\"\nimport { Visible } from \"../Mixin/Visible/Visible\"\nimport { Transition } from \"../Mash/Transition/Transition\"\nimport { Cache } from \"../Loading/Cache\"\nimport { Emitter } from \"../Utilities/Emitter\"\nimport { Track } from \"../Mash/Track/Track\"\n\ninterface CompositionObject {\n  buffer? : number\n  gain? : number\n  quantize? : number\n  backcolor?: string\n  emitter?: Emitter\n}\n\nclass Composition {\n  constructor(object : CompositionObject) {\n    const { emitter, backcolor, buffer, gain, quantize } = object\n    if (backcolor) this.backcolor = backcolor\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (typeof gain !== \"undefined\" && Is.positive(gain)) this._gain = gain\n    if (buffer && Is.aboveZero(buffer)) this.buffer = buffer\n    if (emitter) this.emitter = emitter\n  }\n\n  adjustSourceGain(clip : Audible) : void {\n    const source = Cache.audibleContext.getSource(clip.id)\n    if (!source) {\n      // console.log(this.constructor.name, \"adjustSourceGain no source\", clip.id)\n      return\n    }\n\n    const { gainNode } = source\n    if (this.gain === 0.0) {\n      gainNode.gain.value = 0.0\n      return\n    }\n\n    const gain = clip.gain\n\n    if (Is.positive(gain)) {\n      gainNode.gain.value = this.gain * gain\n      return\n    }\n\n    // position/gain pairs...\n    const timing = clip.startOptions(this.seconds, this.quantize)\n    const { start, duration } = timing\n\n    gainNode.gain.cancelScheduledValues(0)\n    clip.gainPairs.forEach(pair => {\n      const [position, value] = pair\n      gainNode.gain.linearRampToValueAtTime(this.gain * value, start + position * duration)\n    })\n  }\n\n  backcolor? : string\n\n  buffer = Default.mash.buffer\n\n  private bufferSource? : AudioBufferSourceNode\n\n  compositeAudible(clips: Audible[]): boolean {\n    // console.log(this.constructor.name, \"compositeAudible\", clips.length)\n    if (!this.createSources(clips)) {\n      // if (clips.length) console.log(this.constructor.name, \"compositeAudible didn't createSources\")\n      return false\n    }\n\n    this.destroySources(clips)\n    return true\n  }\n\n  compositeVisible(time: Time, clips: Visible[]): void {\n    this.drawBackground() // clear and fill with mash background color if defined\n\n    const clipsByTrack = new Map<number, Visible>()\n    const transitionsByTrack = new Map<number, Transition>()\n    const transitioningTracks: number[] = []\n\n    const transitionClips: Transition[] = []\n    const visibleTracks: number[] = []\n    clips.sort(sortByTrack).forEach(clip => {\n      const { type } = clip\n      if (type === DefinitionType.Transition) {\n        const transition = <Transition>clip\n        transitionsByTrack.set(transition.fromTrack, transition)\n        transitionsByTrack.set(transition.toTrack, transition)\n\n        transitioningTracks.push(transition.fromTrack, transition.toTrack)\n        transitionClips.push(transition)\n      } else {\n        visibleTracks.push(clip.track)\n        clipsByTrack.set(clip.track, clip)\n      }\n    })\n\n    visibleTracks.forEach(track => {\n      if (transitioningTracks.includes(track)) {\n        const transition = transitionsByTrack.get(track)\n        if (!transition) throw Errors.internal\n\n        const { fromTrack, toTrack } = transition\n        const transitioned: Visible[] = []\n        const fromClip = clipsByTrack.get(fromTrack)\n        if (fromClip) transitioned.push(fromClip)\n        const toClip = clipsByTrack.get(toTrack)\n        if (toClip) transitioned.push(toClip)\n\n        if (!transitioned.length) return\n\n        // console.log(\"drawing clips at track\", transitioned.map(clip => clip.track), track)\n        transition.mergeClipsIntoContextAtTime(\n          transitioned, Cache.visibleContext, time, this.quantize, this.backcolor\n        )\n        clipsByTrack.delete(fromTrack)\n        clipsByTrack.delete(toTrack)\n        return\n      }\n      const clip = clipsByTrack.get(track)\n      if (clip) {\n        // console.log(\"drawing clip at track\", clip.track, track)\n        clip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n      }\n    })\n\n\n\n\n\n    // const main = clips.filter(clip => clip.track === 0)\n    // if (main.length > 1) {\n    //   const transitionClip = main.find(clip => clip.type === DefinitionType.Transition)\n    //   if (!transitionClip) throw Errors.mainTrackOverlap\n\n    //   const transitioned = main.filter(clip => clip.type !== DefinitionType.Transition)\n    //   const transition = <Transition> transitionClip\n\n    //   transition.mergeClipsIntoContextAtTime(\n    //     transitioned, Cache.visibleContext, time, this.quantize, this.backcolor\n    //   )\n    // } else {\n    //   const [mainClip] = main\n    //   if (mainClip) mainClip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    // }\n    // const tracked = clips.filter(clip => !main.includes(clip)).sort(sortByTrack)\n    // tracked.forEach(clip => {\n    //   clip.mergeContextAtTime(time, this.quantize, Cache.visibleContext)\n    // })\n\n\n    this.emitter?.emit(EventType.Draw)\n  }\n\n  compositeVisibleRequest(time : Time, clips : Visible[]) : void {\n    requestAnimationFrame(() => this.compositeVisible(time, clips))\n  }\n\n\n  private createSources(clips: Audible[], time?:Time): boolean {\n    const filtered = clips.filter(clip => !Cache.audibleContext.hasSource(clip.id))\n    // if (filtered.length) console.log(\"Composition.createSources\", filtered.length, \"of\", clips.length, \"need audio source\")\n    return filtered.every(clip => {\n      const sourceNode = clip.loadedAudible()\n      if (!sourceNode) {\n        console.debug(this.constructor.name, \"createSources loadedAudible undefined\", clip.id)\n        return false\n      }\n      if (!this.playing && !time) return\n\n      const startSeconds = this.playing ? this.seconds : time?.seconds || 0\n      const timing = clip.startOptions(startSeconds, this.quantize)\n      const { start, duration, offset } = timing\n      // console.log(this.constructor.name, \"createSources\", clip.label, timing, this.contextSecondsWhenStarted - this.startedMashAt, this.quantize)\n      if (Is.positive(start) && Is.aboveZero(duration)) {\n        const { definition, id } = clip\n        const { loops } = definition\n        Cache.audibleContext.startAt(id, sourceNode, start, duration, offset, loops)\n        this.playingClips.push(clip)\n        this.adjustSourceGain(clip)\n      }\n      return true\n    })\n  }\n\n  private destroySources(clipsToKeep: Audible[] = []): void {\n    const sourceClips = [...this.playingClips]\n    const clipsToRemove = sourceClips.filter(clip => !clipsToKeep.includes(clip))\n\n    clipsToRemove.forEach(clip => Cache.audibleContext.deleteSource(clip.id))\n    this.playingClips = clipsToKeep\n    // console.log(this.constructor.name, \"destroySources removed\", clipsToRemove.length, \"kept\", this.playingClips.length)\n  }\n\n  private drawBackground() : void {\n    Cache.visibleContext.clear()\n    if (!this.backcolor) return\n\n    Cache.visibleContext.drawFill(pixelColor(this.backcolor))\n  }\n\n  emitter?: Emitter\n\n  private _gain = Default.mash.gain\n\n  get gain() : number { return this._gain }\n\n  set gain(value : number) {\n    if (this._gain === value) return\n\n    this._gain = value\n\n    if (this.playing) {\n      this.playingClips.forEach(clip => this.adjustSourceGain(clip))\n    }\n    this.emitter?.emit(EventType.Volume)\n  }\n\n  private playing = false\n\n  private playingClips: Audible[] = []\n\n  quantize = Default.mash.quantize\n\n  get seconds(): number {\n    const ellapsed = Cache.audibleContext.currentTime - this.contextSecondsWhenStarted\n    const started = ellapsed + this.startedMashAt\n    // console.log(\"seconds\", started, \"=\", this.startedMashAt, \"+\", ellapsed, '=', Cache.audibleContext.currentTime, '-', this.contextSecondsWhenStarted)\n    return started\n  }\n\n  startContext(): void {\n    // console.log(this.constructor.name, \"startContext\")\n    if (this.bufferSource) throw Errors.internal + 'bufferSource startContext'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const buffer = Cache.audibleContext.createBuffer(this.buffer)\n    this.bufferSource = Cache.audibleContext.createBufferSource(buffer)\n    this.bufferSource.loop = true\n    this.bufferSource.connect(Cache.audibleContext.destination)\n    this.bufferSource.start(0)\n  }\n\n  // called when playhead starts moving\n  startPlaying(time : Time, clips: Audible[]) : boolean {\n    if (!this.bufferSource) throw Errors.internal + 'bufferSource startPlaying'\n    if (this.playing) throw Errors.internal + 'playing'\n\n    const { seconds } = time\n    this.playing = true\n    this.startedMashAt = seconds\n    this.contextSecondsWhenStarted = Cache.audibleContext.currentTime\n    // console.log(this.constructor.name, \"startPlaying\", \"startedMashAt\", this.startedMashAt, \"contextSecondsWhenStarted\", this.contextSecondsWhenStarted)\n\n    if (!this.createSources(clips, time)) {\n      this.stopPlaying()\n      return false\n    }\n    // console.log(this.constructor.name, \"startPlaying\", this.startedMashAt, this.contextSecondsWhenStarted)\n    return true\n  }\n\n  // position of masher (in seconds) when startPlaying called\n  private startedMashAt = 0\n\n  // currentTime of context (in seconds) was created when startPlaying called\n  private contextSecondsWhenStarted = 0\n\n  stopPlaying(): void {\n    // console.log(this.constructor.name, \"stopPlaying\")\n    if (!this.playing) return\n\n    this.playing = false\n    if (this.bufferSource) this.bufferSource.stop()\n\n    this.destroySources()\n    this.startedMashAt = 0\n    this.contextSecondsWhenStarted = 0\n\n    if (!this.bufferSource) return\n\n    this.bufferSource.disconnect(Cache.audibleContext.destination)\n    delete this.bufferSource\n  }\n}\n\nexport { Composition }\n","import {\n  Any, InputCommandsPromise, InputCommands, Interval, JsonObject, LoadPromise, Size,\n  MashState, MashStatePromise, ClipState, InputFilter, UnknownObject\n} from \"../../declarations\"\nimport { CommandType, EventType, TrackType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { Is } from \"../../Utilities/Is\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { Time } from \"../../Utilities/Time\"\nimport { Track, TrackObject } from \"../Track/Track\"\nimport { Definition, DefinitionTimes } from \"../../Base/Definition\"\nimport { Clip, ClipDefinition } from \"../../Mixin/Clip/Clip\"\nimport { Visible } from \"../../Mixin/Visible/Visible\"\nimport { Audible } from \"../../Mixin/Audible/Audible\"\nimport { Composition } from \"../../Playing/Composition\"\nimport { ChangeAction } from \"../../Editing/Action/ChangeAction\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { idGenerate } from \"../../Utilities/Id\"\nimport { Action } from \"../../Editing/Action/Action\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { Emitter } from \"../../Utilities/Emitter\"\nimport { sortByLayer } from \"../../Utilities/Sort\"\nimport { Job } from \"../../Job/Job\"\nimport { urlRemoteServer } from \"../../Utilities/Url\"\nimport { Factory } from \"../../Definitions/Factory/Factory\"\n\ninterface TimeRangeClips {\n  clips: Clip[]\n  timeRange: TimeRange\n}\n\nclass MashClass implements Mash {\n  constructor(...args: Any[]) {\n    const object = args[0] || {}\n    const {\n      createdAt,\n      tracks,\n      backcolor,\n      id,\n      label,\n      media,\n      quantize,\n      ...rest\n    } = <MashObject>object\n\n    if (id) this._id = id\n    Object.assign(this.data, rest)\n\n    if (quantize && Is.aboveZero(quantize)) this.quantize = quantize\n    if (label && Is.populatedString(label)) this.label = label\n    if (backcolor && Is.populatedString(backcolor)) this._backcolor = backcolor\n    if (createdAt) this.createdAt = createdAt\n\n\n    if (tracks) tracks.forEach(track => {\n      track.layer = this.trackCount(track.trackType)\n      const instance = Factory.track.instance(track)\n      this.assureClipsHaveFrames(instance.clips)\n      this.tracks.push(instance)\n    })\n\n    this.assureTrackOfType(TrackType.Video)\n    this.assureTrackOfType(TrackType.Audio)\n    this.tracks.sort(sortByLayer)\n\n    this.setDrawInterval()\n  }\n\n  addClipToTrack(clip: Clip, trackIndex = 0, insertIndex = 0, frame? : number): void {\n    // console.log(this.constructor.name, \"addClipToTrack\", trackIndex, insertIndex, frame)\n    this.assureClipsHaveFrames([clip])\n    const newTrack = this.clipTrackAtIndex(clip, trackIndex)\n    if (!newTrack) throw Errors.invalid.track\n    // console.log(this.constructor.name, \"addClipToTrack\", newTrack)\n\n    const oldTrack = Is.positive(clip.track) && this.clipTrack(clip)\n\n    console.log(\"addClipToTrack\", newTrack.layer, oldTrack && oldTrack.layer )\n    this.emitIfFramesChange(() => {\n      if (oldTrack && oldTrack !== newTrack) {\n        oldTrack.removeClip(clip)\n      }\n      if (typeof frame !== 'undefined') clip.frame = frame\n      newTrack.addClip(clip, insertIndex)\n    })\n  }\n\n  addTrack(trackType: TrackType): Track {\n    const options : TrackObject = { trackType: trackType, layer: this.trackCount(trackType) }\n    const track = Factory.track.instance(options)\n    console.log(this.constructor.name, \"addTrack\", track)\n    this.tracks.push(track)\n    this.tracks.sort(sortByLayer)\n    this.emitter?.emit(EventType.Track)\n    return track\n  }\n\n  private assureClipsHaveFrames(clips: Clip[]): void {\n    clips.filter(clip => !Is.positive(clip.frames)).forEach(clip => {\n      const definition = <ClipDefinition>clip.definition\n      clip.frames = definition.frames(this.quantize)\n    })\n  }\n\n  private assureTrackOfType(trackType: TrackType): void {\n     if (!this.trackCount(trackType)) {\n      this.tracks.push(Factory.track.instance({ trackType: trackType }))\n    }\n  }\n\n  private _backcolor = Default.mash.backcolor\n\n  get backcolor(): string { return this._backcolor }\n\n  set backcolor(value: string) {\n    this._backcolor = value\n    if (this._composition) this.composition.backcolor = value\n  }\n\n  private _buffer = Default.mash.buffer\n\n  get buffer(): number { return this._buffer }\n\n  set buffer(value: number) {\n    if (!Is.aboveZero(value)) throw Errors.invalid.argument + 'buffer ' + value\n\n    if (this._buffer !== value) {\n      this._buffer = value\n      if (this._composition) this.composition.buffer = value\n    }\n  }\n\n  get bufferFrames(): number { return this.buffer * this.quantize }\n\n  private bufferStart() {\n    if (this._bufferTimer) return\n\n    this._bufferTimer = setInterval(() => {\n      // console.debug(this.constructor.name, \"bufferTimer calling load\")\n      this.loadPromise\n    }, Math.round((this.buffer * 1000) / 2))\n  }\n\n  private bufferStop() {\n    if (!this._bufferTimer) return\n\n    clearInterval(this._bufferTimer)\n    delete this._bufferTimer\n  }\n\n  private get bufferTime(): Time { return Time.fromSeconds(this.buffer) }\n\n  private _bufferTimer?: Interval\n\n  changeClipFrames(clip: Clip, value: number): void {\n    let limitedValue = Math.max(1, value) // frames value must be > 0\n\n    const max = clip.maxFrames(this.quantize) // only audible returns nonzero\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.frames = limitedValue\n      track.sortClips(track.clips)\n    })\n  }\n\n  changeClipTrimAndFrames(clip: Audible, value: number, frames: number): void {\n    let limitedValue = Math.max(0, value)\n\n    const max = clip.maxFrames(this.quantize, 1) // do not remove last frame\n    if (Is.aboveZero(max)) limitedValue = Math.min(max, limitedValue)\n\n    const newFrames = frames - limitedValue\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => {\n      clip.trim = limitedValue\n      clip.frames = newFrames\n      track.sortClips(track.clips)\n    })\n  }\n\n  clearDrawInterval():void {\n    if (this.drawInterval) {\n      clearInterval(this.drawInterval)\n      this.drawInterval = undefined\n    }\n  }\n\n  clipIntersects(clip: Clip, range: TimeRange): boolean {\n    return clip.timeRange(this.quantize).intersects(range)\n  }\n\n  clipTrack(clip: Clip): Track {\n    return this.clipTrackAtIndex(clip, clip.track)\n  }\n\n  clipTrackAtIndex(clip: Clip, index = 0): Track {\n    return this.trackOfTypeAtIndex(clip.trackType, index)\n  }\n\n  get clips(): Clip[] { return this.clipsInTracks() }\n\n  private clipsAtTimes(start: Time, end?: Time): Clip[] {\n    const objects: Clip[] = this.clipsVisible(start, end)\n    if (end) objects.push(...this.clipsAudible(start, end))\n    return [...new Set(objects)]\n  }\n\n  private clipsAudible(start: Time, end?: Time): Audible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsAudibleInTracks.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsInTracks(tracks?: Track[]): Clip[] {\n    const clipTracks = tracks || this.tracks\n    return clipTracks.map(track => track.clips).flat()\n  }\n\n  private filterIntersecting(clips: Clip[], timeRange: TimeRange): Clip[] {\n    const range = timeRange.scale(this.quantize)\n    return clips.filter(clip => this.clipIntersects(clip, range))\n\n  }\n  private get clipsAudibleInTracks(): Audible[] {\n    return <Audible[]> this.clipsInTracks().filter(clip => clip.audible && !clip.muted)\n  }\n\n  private clipsAudibleInTimeRange(timeRange: TimeRange): Audible[] {\n    return <Audible[]> this.filterIntersecting(this.clipsAudibleInTracks, timeRange)\n  }\n\n  private get clipsVideo(): Visible[] {\n    const tracks = this.tracks.filter(track => track.trackType !== TrackType.Audio)\n    return <Visible[]>tracks.flatMap(track => track.clips)\n  }\n\n  clipsVisible(start: Time, end?: Time): Visible[] {\n    const range = end && TimeRange.fromTimes(start, end)\n    return this.clipsVideo.filter(clip => {\n      const clipRange = clip.timeRange(this.quantize)\n      if (range) return clipRange.intersects(range)\n\n      return clipRange.intersectsTime(start)\n    })\n  }\n\n  private clipsVisibleAtTime(time: Time): Visible[] {\n    return this.clipsVisibleInTimeRange(TimeRange.fromTime(time))\n  }\n\n  private clipsVisibleInTimeRange(timeRange: TimeRange): Visible[] {\n    const range = timeRange.scale(this.quantize)\n    return this.clipsVideo.filter(clip => this.clipIntersects(clip, range))\n  }\n\n  private compositeAudibleClips(clips: Clip[]): void {\n    if (this._paused) return\n\n    const audibleClips = clips.filter(clip => clip.audible && !clip.muted)\n    if (audibleClips.length) {\n      this.composition.compositeAudible(<Audible[]>audibleClips)\n    }\n  }\n\n  private _composition?: Composition\n\n  get composition(): Composition {\n    if (!this._composition) {\n      const options = {\n        backcolor: this.backcolor,\n        buffer: this.buffer,\n        gain: this.gain,\n        quantize: this.quantize,\n        emitter: this.emitter,\n      }\n      this._composition = new Composition(options)\n    }\n    return this._composition\n  }\n\n  compositeVisible(): void {\n    const { time } = this\n    this.composition.compositeVisible(time, this.clipsVisibleAtTime(time))\n  }\n\n  compositeVisibleRequest(): void {\n    const { time, composition } = this\n    composition.compositeVisibleRequest(time, this.clipsVisibleAtTime(time))\n  }\n\n  createdAt = ''\n\n  data: UnknownObject = {}\n\n  get definitions() : Definition[] {\n    return [...new Set(this.clipsInTracks().flatMap(clip => clip.definitions))]\n  }\n\n  destroy(): void {\n    this.paused = true\n    this.clearDrawInterval()\n    delete this._composition\n  }\n\n  private drawInterval?: Interval\n\n  private drawTime(time: Time): void {\n    const timeChange = time !== this.time\n    this.drawnTime = time\n    this.compositeVisibleRequest()\n    this.emitter?.emit(timeChange ? EventType.Time : EventType.Loaded)\n  }\n\n  private drawWhileNotPlaying() {\n    const now = performance.now()\n    const ellapsed = now - this.drawnSeconds\n    if (ellapsed < 1.0 / this.quantize) return\n\n    this.drawnSeconds = now\n    const { time } = this\n    const clips = this.clipsVisible(time)\n    const streamableClips = clips.filter(clip => clip.definition.streamable)\n    if (!streamableClips.length) return\n\n    const loading = clips.some(clip => clip.clipUrls(this.quantize, time).some(url =>\n      !Cache.cached(url)\n    ))\n    if (loading) return\n\n    this.compositeVisibleRequest()\n  }\n\n  private drawWhilePlaying() {\n    // what time does the audio context think it is?\n    const { seconds } = this.composition\n\n    // what time would masher consider to be in next frame?\n    const nextFrameTime = this.time.withFrame(this.time.frame + 1)\n\n    // are we beyond the end of mash?\n    if (seconds >= this.endTime.seconds) {\n\n      // should we loop back to beginning?\n      if (this.loop) this.seekToTime(this.time.withFrame(0))\n      else {\n        this.paused = true\n        this.emitter?.emit(EventType.Ended)\n      }\n    } else {\n\n      // are we at or beyond the next frame?\n      if (seconds >= nextFrameTime.seconds) {\n\n        const compositionTime = Time.fromSeconds(seconds, this.time.fps)\n        // const difference = compositionTime.frame - this.time.frame\n        // if (difference > 1) console.debug(this.constructor.name, \"drawWhilePlaying dropped frames\", difference - 1)\n        // go to where the audio context thinks we are\n        this.drawTime(compositionTime)\n      }\n    }\n  }\n\n  drawnSeconds = 0\n\n  drawnTime?: Time\n\n  get duration(): number { return this.endTime.seconds }\n\n  private emitIfFramesChange(method: () => void): void {\n    const origFrames = this.frames\n    method()\n    const { frames } = this\n    if (origFrames !== frames) {\n      this.emitter?.emit(EventType.Duration)\n      if (this.frame > frames) this.seekToTime(Time.fromArgs(frames, this.quantize))\n    }\n  }\n\n  _emitter?: Emitter\n\n  get emitter(): Emitter | undefined { return this._emitter }\n\n  set emitter(value: Emitter | undefined) {\n    this._emitter = value\n    if (this._composition) this._composition.emitter = value\n  }\n\n  get endTime(): Time { return Time.fromArgs(this.frames, this.quantize) }\n\n  get frame(): number { return this.time.scale(this.quantize, \"floor\").frame }\n\n  get frames(): number {\n    return Math.max(0, ...this.tracks.map(track => track.frames))\n  }\n\n  private _gain = Default.mash.gain\n\n  get gain(): number { return this._gain }\n\n  set gain(value: number) {\n    if (!Is.positive(value)) throw Errors.invalid.argument + 'gain ' + value\n\n    if (this._gain !== value) {\n      this._gain = value\n      if (this._composition) this.composition.gain = value\n    }\n  }\n\n  handleAction(action: Action): void {\n    this.emitter?.emit(EventType.Action)\n\n    if (action instanceof ChangeAction) {\n      const changeAction = <ChangeAction>action\n      const { property } = changeAction\n      if (property === \"gain\") {\n        if (this.playing && Is.aboveZero(this.gain)) {\n          this.composition.adjustSourceGain(<Audible>changeAction.target)\n        }\n        return\n      }\n    }\n    this.stopLoadAndDraw()\n  }\n\n  private handleDrawInterval(): void {\n    if (this._playing) this.drawWhilePlaying()\n    else this.drawWhileNotPlaying()\n  }\n\n  private seqmentsAtTimes(type: CommandType, start: Time, end?: Time): TimeRangeClips[] {\n    const fullRangeClips = this.clipsAtTimes(start, end)\n    const startTime = start.scale(this.quantize)\n    if (!end) return [{ clips: fullRangeClips, timeRange: TimeRange.fromTime(startTime) }]\n\n    const result: TimeRangeClips[] = []\n\n    const endTime = end.scale(this.quantize)\n    const fullRange = TimeRange.fromTimes(startTime, endTime)\n    const { times } = fullRange\n    let identifiers = '~'\n    let timeRangeClips: TimeRangeClips\n\n    times.forEach(time => {\n      const timeRange = TimeRange.fromTime(time)\n      const clips = this.filterIntersecting(fullRangeClips, timeRange)\n      const ids = clips.map(clip => clip.id).join('~')\n      if (identifiers === ids) {\n        timeRangeClips.timeRange = timeRangeClips.timeRange.addFrames(1)\n      } else {\n        identifiers = ids\n        timeRangeClips = { timeRange, clips }\n        result.push(timeRangeClips)\n      }\n    })\n    return result\n  }\n\n  private _id = ''\n\n  get id(): string {\n    // console.trace(this.constructor.name, \"id\")\n    return this._id ||= idGenerate()\n  }\n\n  private inputCommand(type: CommandType, size: Size, start: Time, end?: Time): InputCommands[] {\n    const segments = this.seqmentsAtTimes(type, start, end)\n    return segments.map(({ clips, timeRange }) => {\n      return clips.map(clip => {\n        const inputCommand = clip.inputCommandAtTimeToSize(timeRange.startTime, this.quantize, size)\n        if (!inputCommand) throw Errors.invalid.object\n\n        return inputCommand\n      })\n    })\n  }\n\n  inputCommandPromise(type: CommandType, size: Size, start: Time, end?: Time): InputCommandsPromise {\n    const promise: InputCommandsPromise = new Promise(resolve => {\n      const clips = this.clipsAtTimes(start, end)\n      const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n      const promises = loads.filter(Boolean)\n      if (promises.length) Promise.all(promises).then(() => {\n        resolve(this.inputCommand(type, size, start, end))\n      })\n      else resolve(this.inputCommand(type, size, start, end))\n    })\n    return promise\n  }\n\n  get job(): Job {\n    return {\n      definitions: this.definitions,\n      mash: this,\n      remoteServer: urlRemoteServer(),\n      outputs: []\n    }\n  }\n\n  label = ''\n\n  get loadPromise(): LoadPromise | undefined {\n    const [start, end] = this.startAndEnd\n    // console.log(this.constructor.name, \"load\", start, end)\n    const clips = this.clipsAtTimes(start, end)\n    const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n    const promises = loads.filter(Boolean)\n\n    if (promises.length) return Promise.all(promises).then(() => {\n      this.compositeAudibleClips(clips)\n    })\n    this.compositeAudibleClips(clips)\n\n    // switch (promises.length) {\n    //   case 0: return\n    //   case 1: return promises[0] || undefined\n    //   default: return Promise.all(promises).then()\n    // }\n  }\n\n  loadPromiseAtTimes(start: Time, end?: Time): LoadPromise | undefined {\n    const clips = this.clipsAtTimes(start, end)\n    const loads = clips.map(clip => clip.loadClip(this.quantize, start, end))\n    const promises = loads.filter(Boolean)\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0] || undefined\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  get loadUrls(): string[] {\n    const [start, end] = this.startAndEnd\n    const clips = this.clipsAtTimes(start, end)\n    return clips.flatMap(clip => clip.clipUrls(this.quantize, start, end))\n  }\n\n  get loadedDefinitions(): DefinitionTimes {\n    const map = <DefinitionTimes>new Map()\n    const [start, end] = this.startAndEnd\n    this.clipsAtTimes(start, end).forEach(clip => {\n      const { definitions } = clip\n      const times = [clip.definitionTime(this.quantize, start)]\n      if (end) times.push(clip.definitionTime(this.quantize, end))\n\n      definitions.forEach(definition => {\n        if (!map.has(definition)) map.set(definition, [])\n        const definitionTimes = map.get(definition)\n        if (!definitionTimes) throw Errors.internal\n\n        definitionTimes.push(times)\n      })\n    })\n    return map\n  }\n\n  loop = false\n\n  mashState(time: Time, dimensions: Size): MashState {\n    const state: MashState = []\n    const size = `${dimensions.width}x${dimensions.height}`\n    const colorFilter: InputFilter = { filter: 'color', options: { color: this.backcolor, size }}\n\n    const clipState: ClipState = { filters:[ colorFilter ]}\n    state.push(clipState)\n    state.push(...this.clipsAtTimes(time).map(clip => clip.clipState(this.quantize, time, dimensions)))\n    return state\n  }\n\n  mashStatePromise(time: Time, dimensions: Size): MashStatePromise {\n    const promise = this.loadPromiseAtTimes(time)\n    if (promise) return promise.then(() => this.mashState(time, dimensions))\n    return Promise.resolve(this.mashState(time, dimensions))\n  }\n\n  private _paused = true\n\n  get paused() : boolean { return this._paused }\n\n  set paused(value : boolean) {\n    const forcedValue = value || !this.frames\n    // console.log(this.constructor.name, \"set paused\", forcedValue)\n    if (this._paused === forcedValue) return\n\n    this._paused = forcedValue\n    if (forcedValue) {\n      this.playing = false\n      this.bufferStop()\n      if (this._bufferTimer) {\n        clearInterval(this._bufferTimer)\n        delete this._bufferTimer\n      }\n      this.emitter?.emit(EventType.Pause)\n    } else {\n      this.composition.startContext()\n      this.bufferStart()\n      const promise = this.loadPromise\n      if (promise) promise.then(() => { this.playing = true })\n      else this.playing = true\n      // console.log(\"Mash emit\", EventType.Play)\n      this.emitter?.emit(EventType.Play)\n    }\n  }\n\n  private _playing = false\n\n  get playing() : boolean { return this._playing }\n\n  set playing(value : boolean) {\n    // console.trace(this.constructor.name, \"set playing\", value)\n    if (this._playing !== value) {\n      this._playing = value\n      if (value) {\n        const clips = this.clipsAudibleInTimeRange(this.timeRangeToBuffer)\n        // console.log(\"playing\", value, this.time)\n        if (!this.composition.startPlaying(this.time, clips)) {\n          // console.log(this.constructor.name, \"set playing\", value, \"audio not cached\", this.time, clips.length)\n          // audio was not cached\n\n          this._playing = false\n          return\n        }\n        this.emitter?.emit(EventType.Playing)\n      } else this.composition.stopPlaying()\n    }\n  }\n\n  removeClipFromTrack(clip : Clip) : void {\n    const track = this.clipTrack(clip)\n    this.emitIfFramesChange(() => { track.removeClip(clip) })\n  }\n\n  removeTrack(trackType: TrackType): void {\n    const track = this.trackOfTypeAtIndex(trackType, this.trackCount(trackType) - 1)\n    const index = this.tracks.indexOf(track)\n    if (!Is.positive(index)) throw Errors.internal\n\n    this.emitIfFramesChange(() => { this.tracks.splice(index, 1) })\n    this.emitter?.emit(EventType.Track)\n  }\n\n  private restartAfterStop(time:Time, paused:boolean, seeking?: boolean): void {\n     if (time === this.time) { // otherwise we must have gotten a seek call\n        if (seeking) {\n          delete this.seekTime\n          this.emitter?.emit(EventType.Seeked)\n        }\n        this.drawTime(time)\n        if (!paused) {\n          this.composition.startContext()\n          this.playing = true\n        }\n      }\n  }\n\n  quantize = Default.mash.quantize\n\n  private seekTime? : Time\n\n  seekToTime(time: Time): LoadPromise | undefined {\n    // console.debug(this.constructor.name, \"seekToTime\", time)\n    if (this.seekTime !== time) {\n      this.seekTime = time\n      this.emitter?.emit(EventType.Seeking)\n      this.emitter?.emit(EventType.Time)\n    }\n    return this.stopLoadAndDraw(true)\n  }\n\n  setDrawInterval():void {\n    this.clearDrawInterval()\n    this.drawInterval = setInterval(() => { this.handleDrawInterval()}, 500 / this.time.fps)\n  }\n\n  get stalled() : boolean { return !this.paused && !this.playing }\n\n  get startAndEnd(): Time[] {\n    const { time } = this\n    const times = [time]\n    if (!this.paused) times.push(time.add(this.bufferTime))\n    return times\n  }\n\n  private stopLoadAndDraw(seeking? : boolean) : LoadPromise | undefined {\n    const { time, paused, playing } = this\n\n    if (playing) this.playing = false\n    const promise = this.loadPromise\n    if (promise) return promise.then(() => { this.restartAfterStop(time, paused, seeking) })\n    this.restartAfterStop(time, paused, seeking)\n  }\n\n  get time() : Time {\n    return this.seekTime || this.drawnTime || Time.fromArgs(0, this.quantize)\n  }\n\n  get timeRange(): TimeRange {\n    return TimeRange.fromTime(this.time, this.endTime.scale(this.time.fps).frame)\n  }\n\n  get timeRangeToBuffer() : TimeRange {\n    const { time, quantize, buffer, paused } = this\n    if (paused) {\n      const singleFrame = TimeRange.fromArgs(time.scale(quantize, 'floor').frame, quantize, 1)\n      // console.log(this.constructor.name, \"timeRangeToBuffer paused\", singleFrame)\n      return singleFrame\n    }\n\n    const frames = TimeRange.fromTimes(time, Time.fromSeconds(buffer + time.seconds, time.fps))\n    // console.log(this.constructor.name, \"timeRangeToBuffer !PAUSED\", frames)\n\n    return frames\n  }\n\n  toJSON() : JsonObject {\n    return {\n      label: this.label,\n      quantize: this.quantize,\n      backcolor: this.backcolor,\n      id: this.id,\n      tracks: this.tracks,\n      createdAt: this.createdAt,\n      ...this.data,\n    }\n  }\n\n  trackCount(type?: TrackType): number {\n    if (type) return this.tracksOfType(type).length\n\n    return this.tracks.length\n  }\n\n  trackOfTypeAtIndex(type : TrackType, index = 0) : Track {\n    if (!Is.positive(index)) {\n      console.error(Errors.invalid.track, index, index?.constructor.name)\n      throw Errors.invalid.track\n    }\n\n    return this.tracksOfType(type)[index]\n  }\n\n  tracks: Track[] = []\n\n  private tracksOfType(trackType: TrackType): Track[] {\n    return this.tracks.filter(track => track.trackType === trackType)\n  }\n}\n\nexport { MashClass }\n","import { Factory } from \"../../Definitions/Factory/Factory\"\nimport { DefinitionType, DefinitionTypes } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { isPopulatedString } from \"../../Utilities/Is\"\nimport { DefinitionObject } from \"../../Base/Definition\"\nimport { Mash, MashObject } from \"./Mash\"\nimport { MashClass } from \"./MashInstance\"\n\n\nclass MashFactoryImplementation {\n  instance(object: MashObject = {}, definitions?: DefinitionObject[]): Mash {\n    if (definitions) definitions.forEach(definition => {\n      const { id: definitionId, type } = definition\n      if (!(type && isPopulatedString(type))) throw Errors.type\n\n      const definitionType = <DefinitionType>type\n      if (!DefinitionTypes.includes(definitionType)) throw Errors.type + definitionType\n\n      if (!(definitionId && isPopulatedString(definitionId))) {\n        throw Errors.invalid.definition.id + JSON.stringify(definition)\n      }\n      // installs our definition\n      Factory[definitionType].definition(definition)\n    })\n\n    return new MashClass(object)\n  }\n}\n\nconst MashFactory = new MashFactoryImplementation()\n\nexport { MashFactory }\n","import { InputCommand, Size } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { ThemeDefinition } from \"./Theme\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ModularMixin } from \"../../Mixin/Modular/ModularMixin\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\nimport { TransformableMixin } from \"../../Mixin/Transformable/TransformableMixin\"\nimport { LoadPromise } from \"../..\"\n\n\nconst ThemeWithModular = ModularMixin(InstanceBase)\nconst ThemeWithClip = ClipMixin(ThemeWithModular)\nconst ThemeWithVisible = VisibleMixin(ThemeWithClip)\nconst ThemeWithTransformable = TransformableMixin(ThemeWithVisible)\nclass ThemeClass extends ThemeWithTransformable {\n  commandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n    const source = this.definition.inputSource\n    const inputCommand: InputCommand = { sources: { source }, filters: []}\n    return inputCommand\n  }\n\n  contextAtTimeToSize(mashTime : Time, quantize: number, dimensions : Size) : VisibleContext | undefined {\n    const context = ContextFactory.toSize(dimensions)\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n    return this.definition.drawFilters(this, clipTimeRange, context, dimensions)\n  }\n\n  clipUrls(quantize: number, start: Time): string[] {\n    const urls = super.clipUrls(quantize, start) // urls from my effects, etc.\n    urls.push(...this.modularUrls(quantize, start)) // urls from my modular properties\n    return urls\n  }\n\n  declare definition: ThemeDefinition\n\n  inputCommandAtTimeToSize(mashTime: Time, quantize: number, dimensions: Size): InputCommand | undefined {\n    // console.log(this.constructor.name, \"inputCommandAtTimeToSize\", this.id)\n    const inputCommand = super.inputCommandAtTimeToSize(mashTime, quantize, dimensions)\n    if (!inputCommand) return inputCommand\n\n    const clipTimeRange = this.timeRangeRelative(mashTime, quantize)\n\n    inputCommand.filters = this.definition.inputFilters(this, clipTimeRange, dimensions)\n\n    return inputCommand\n  }\n\n  loadClip(quantize: number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const transformablePromise = super.loadClip(quantize, start, end) // my effects, etc.\n    if (transformablePromise) promises.push(transformablePromise)\n    const modularPromise = this.loadModular(quantize, start, end) // my modular properties\n    if (modularPromise) promises.push(modularPromise)\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n}\n\nexport { ThemeClass }\n","import { Any } from \"../../declarations\"\n// import { DataType } from \"../../../Setup/Enums\"\n// import { Property } from \"../../../Setup/Property\"\nimport { VisibleDefinitionClass } from \"../Visible/Visible\"\nimport { TransformableDefinitionClass } from \"./Transformable\"\n\nfunction TransformableDefinitionMixin<T extends VisibleDefinitionClass>(Base: T): TransformableDefinitionClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      // this.properties.push(new Property({ name: \"scaler\", type: DataType.Object, value: {} }))\n      // this.properties.push(new Property({ name: \"merger\", type: DataType.Object, value: {} }))\n    }\n  }\n}\nexport { TransformableDefinitionMixin }\n","import { Theme, ThemeObject } from \"./Theme\"\nimport { ThemeClass } from \"./ThemeInstance\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { ModularDefinitionMixin } from \"../../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { Any } from \"../../declarations\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { DefinitionType } from \"../../Setup/Enums\"\nimport { TransformableDefinitionMixin } from \"../../Mixin/Transformable/TransformableDefintiionMixin\"\n\nconst WithModular = ModularDefinitionMixin(DefinitionBase)\nconst WithClip = ClipDefinitionMixin(WithModular)\nconst WithVisible = VisibleDefinitionMixin(WithClip)\nconst WithTransformable = TransformableDefinitionMixin(WithVisible)\n\nclass ThemeDefinitionClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    Definitions.install(this)\n  }\n\n  get instance() : Theme {\n    return this.instanceFromObject(this.instanceObject)\n  }\n\n  instanceFromObject(object: ThemeObject): Theme {\n    const { instanceObject } = this\n    const options = { ...instanceObject, ...object }\n    // console.log(this.constructor.name, \"instanceFromObject\", instanceObject, object)\n    const instance = new ThemeClass(options)\n    return instance\n  }\n\n  type = DefinitionType.Theme\n}\n\nexport { ThemeDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { ThemeDefinitionClass } from \"./ThemeDefinition\"\nimport { Theme, ThemeDefinition, ThemeDefinitionObject, ThemeObject } from \"./Theme\"\n\nimport themeColorJson from \"../../Definitions/DefinitionObjects/theme/color.json\"\nimport themeTextJson from \"../../Definitions/DefinitionObjects/theme/text.json\"\n\nconst themeDefinition = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <ThemeDefinition> Definitions.fromId(id)\n\n  return new ThemeDefinitionClass({...object, type: DefinitionType.Theme })\n}\n\nconst themeDefinitionFromId = (id : string) : ThemeDefinition => {\n  return themeDefinition({ id })\n}\n\nconst themeInstance = (object : ThemeObject) : Theme => {\n  const definition = themeDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst themeFromId = (id : string) : Theme => {\n  return themeInstance({ id })\n}\n\nconst themeInitialize = () : void => {\n  new ThemeDefinitionClass(themeColorJson)\n  new ThemeDefinitionClass(themeTextJson)\n}\n\nconst themeDefine = (object : ThemeDefinitionObject) : ThemeDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  Definitions.uninstall(id)\n  return themeDefinition(object)\n}\n\nconst ThemeFactoryImplementation = {\n  define: themeDefine,\n  install: themeDefine,\n  definition: themeDefinition,\n  definitionFromId: themeDefinitionFromId,\n  fromId: themeFromId,\n  initialize: themeInitialize,\n  instance: themeInstance,\n}\n\nFactories[DefinitionType.Theme] = ThemeFactoryImplementation\n\nexport {\n  themeDefine,\n  themeDefine as themeInstall,\n  themeDefinition,\n  themeDefinitionFromId,\n  ThemeFactoryImplementation,\n  themeFromId,\n  themeInitialize,\n  themeInstance,\n}\n","import { TrackType } from \"../../Setup/Enums\"\nimport { Is, Time } from \"../../Utilities\"\nimport { VisibleContext } from \"../../Playing\"\nimport { Transition, TransitionDefinition, TransitionObject } from \"./Transition\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ModularMixin } from \"../../Mixin/Modular/ModularMixin\"\nimport { Visible } from \"../../Mixin/Visible\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { Any, Size } from \"../../declarations\"\n\nconst TransitionWithModular = ModularMixin(InstanceBase)\nconst TransitionWithClip = ClipMixin(TransitionWithModular)\nconst TransitionWithVisible = VisibleMixin(TransitionWithClip)\n\nclass TransitionClass extends TransitionWithVisible implements Transition {\n  constructor(...args: Any[]) {\n    super(...args)\n    const [object] = args\n    const { fromTrack, toTrack } = <TransitionObject>object\n    if (typeof fromTrack !== 'undefined') this.fromTrack = fromTrack\n    if (typeof toTrack !== 'undefined') this.toTrack = toTrack\n  }\n\n  contextAtTimeToSize(_time : Time, _quantize: number, _dimensions : Size) : VisibleContext | undefined {\n    return\n  }\n\n  declare definition : TransitionDefinition\n\n  fromTrack = 0\n\n  mergeClipsIntoContextAtTime(clips : Visible[], context : VisibleContext, time : Time, quantize : number, color? : string) : void {\n    // console.log(this.constructor.name, \"mergeClipsIntoContextAtTime\", clips.length, time, quantize, color)\n    if (!Is.aboveZero(clips.length)) return\n\n    this.definition.drawVisibleFilters(clips, this, time, quantize, context, color)\n  }\n\n  toTrack = 1\n\n  trackType = TrackType.Transition\n}\n\nexport { TransitionClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { DataType, DefinitionType } from \"../../Setup/Enums\"\nimport { Time } from \"../../Utilities/Time\"\nimport { sortByFrame } from \"../../Utilities/Sort\"\nimport { ContextFactory, VisibleContext } from \"../../Playing\"\nimport { TransitionClass } from \"./TransitionInstance\"\nimport { Transition, TransitionObject } from \"./Transition\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { Filter } from \"../Filter/Filter\"\nimport { Visible } from \"../../Mixin/Visible/Visible\"\nimport { ModularDefinitionMixin } from \"../../Mixin/Modular/ModularDefinitionMixin\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { TransitionDefinitionObject } from \"./Transition\"\nimport { filterInstance } from \"../Filter\"\nimport { mergerInstance } from \"../Merger/MergerFactory\"\nimport { scalerInstance } from \"../Scaler/ScalerFactory\"\nimport { Property } from \"../../Setup/Property\"\n\nconst TransitionDefinitionWithModular = ModularDefinitionMixin(DefinitionBase)\nconst TransitionDefinitionWithClip = ClipDefinitionMixin(TransitionDefinitionWithModular)\nconst TransitionDefinitionWithVisible = VisibleDefinitionMixin(TransitionDefinitionWithClip)\nclass TransitionDefinitionClass extends TransitionDefinitionWithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n\n    const { to, from } = <TransitionDefinitionObject> object\n\n    if (to) {\n      const { filters, merger, scaler } = to\n      if (filters) {\n        this.toFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.toMerger = mergerInstance(merger)\n      if (scaler) this.toScaler = scalerInstance(scaler)\n    }\n\n    if (from) {\n      const { filters, merger, scaler } = from\n      if (filters) {\n        this.fromFilters.push(...filters.map(filter => filterInstance(filter)))\n      }\n      if (merger) this.fromMerger = mergerInstance(merger)\n      if (scaler) this.fromScaler = scalerInstance(scaler)\n    }\n    this.properties.push(\n      new Property({ name: \"fromTrack\", type: DataType.Number, value: 0 }),\n      new Property({ name: \"toTrack\", type: DataType.Number, value: 1 }),\n    )\n    Definitions.install(this)\n  }\n\n  drawVisibleFilters(clips : Visible[], transition : Transition, time : Time, quantize: number, context : VisibleContext, color? : string) : void {\n    // console.log(this.constructor.name, \"drawVisibleFilters\", clips.length, transition.id)\n    const { size } = context\n    const sorted = [...clips].sort(sortByFrame)\n    let fromClip : Visible | undefined = sorted[0]\n    let toClip : Visible | undefined = sorted[1]\n\n    if (!toClip && fromClip.frame >= transition.frame) {\n      toClip = fromClip\n      fromClip = undefined\n    }\n\n    let fromDrawing = ContextFactory.toSize(size)\n    let toDrawing = ContextFactory.toSize(size)\n    if (color) {\n      fromDrawing.drawFill(color)\n      toDrawing.drawFill(color)\n    }\n\n    const range = transition.timeRangeRelative(time, quantize)\n\n    if (fromClip) fromClip.mergeContextAtTime(time, quantize, fromDrawing)\n    this.filters = this.fromFilters\n    fromDrawing = this.drawFilters(transition, range, fromDrawing, size)\n\n    if (toClip) toClip.mergeContextAtTime(time, quantize, toDrawing)\n    this.filters = this.toFilters\n    toDrawing = this.drawFilters(transition, range, toDrawing, size)\n\n    fromDrawing = this.fromScaler.definition.drawFilters(this.fromScaler, range, fromDrawing, size)\n    this.fromMerger.definition.drawFilters(this.fromMerger, range, fromDrawing, size, context)\n    toDrawing = this.toScaler.definition.drawFilters(this.toScaler, range, toDrawing, size)\n    this.toMerger.definition.drawFilters(this.toMerger, range, toDrawing, size, context)\n  }\n\n\n\n  private fromFilters : Filter[] = []\n\n  private fromMerger = mergerInstance({})\n\n  private fromScaler = scalerInstance({})\n\n  get instance() : Transition { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : TransitionObject) : Transition {\n    return new TransitionClass({ ...this.instanceObject, ...object })\n  }\n\n  private toFilters : Filter[] = []\n\n  private toMerger = mergerInstance({})\n\n  private toScaler = scalerInstance({})\n\n  toJSON() : JsonObject {\n    return {\n      ...super.toJSON(),\n      to: { filters: this.toFilters },\n      from: { filters: this.fromFilters },\n    }\n  }\n\n  type = DefinitionType.Transition\n}\n\nexport { TransitionDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { TransitionDefinitionClass } from \"./TransitionDefinition\"\nimport {\n  Transition, TransitionDefinition, TransitionDefinitionObject, TransitionObject\n} from \"./Transition\"\n\nimport transitionCrossfadeJson from \"../../Definitions/DefinitionObjects/transition/crossfade.json\"\n\nconst transitionDefinition = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <TransitionDefinition> Definitions.fromId(id)\n\n  return new TransitionDefinitionClass(object)\n}\n\nconst transitionDefinitionFromId = (id : string) : TransitionDefinition => {\n  return transitionDefinition({ id })\n}\n\nconst transitionInstance = (object : TransitionObject) : Transition => {\n  const definition = transitionDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst transitionFromId = (id : string) : Transition => {\n  return transitionInstance({ id })\n}\n\nconst transitionInitialize = () : void => {\n  transitionDefinition(transitionCrossfadeJson)\n}\n\nconst transitionDefine = (object : TransitionDefinitionObject) : TransitionDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  Definitions.uninstall(id)\n  return transitionDefinition(object)\n}\n\nconst TransitionFactoryImplementation = {\n  define: transitionDefine,\n  install: transitionDefine,\n  definition: transitionDefinition,\n  definitionFromId: transitionDefinitionFromId,\n  fromId: transitionFromId,\n  initialize: transitionInitialize,\n  instance: transitionInstance,\n}\n\nFactories[DefinitionType.Transition] = TransitionFactoryImplementation\n\nexport {\n  transitionDefine,\n  transitionDefine as transitionInstall,\n  transitionDefinition,\n  transitionDefinitionFromId,\n  TransitionFactoryImplementation,\n  transitionFromId,\n  transitionInitialize,\n  transitionInstance,\n}\n","import { Video, VideoClass, VideoDefinition, VideoObject } from \"./Video\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\n// import { Errors } from \"../../Setup/Errors\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nconst VideoClassImplementation: VideoClass = class extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  // private loadedAudio? : LoadedAudio\n\n  get copy() : Video { return <Video> super.copy }\n\n  declare definition : VideoDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoClassImplementation }\n","import { AudibleSource, VisibleSource, Any, JsonObject, LoadPromise, LoadVideoResult } from \"../../declarations\"\nimport { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { TimeRange } from \"../../Utilities/TimeRange\"\nimport { urlAbsolute } from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { VideoClassImplementation } from \"./VideoInstance\"\nimport { Video, VideoDefinitionClass, VideoDefinitionObject, VideoObject } from \"./Video\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { AudibleDefinitionMixin } from \"../../Mixin/Audible/AudibleDefinitionMixin\"\nimport { AudibleFileDefinitionMixin } from \"../../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\nimport { ContextFactory } from \"../../Playing/ContextFactory\"\n\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nconst VideoDefinitionClassImplementation: VideoDefinitionClass = class extends WithVisible {\n  constructor(...args: Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, fps, source } = <VideoDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n\n    this.source = source || url\n    if (fps) this.fps = fps\n\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  get cachedOrThrow(): LoadVideoResult {\n    const cached = Cache.get(this.absoluteUrl)\n    if (!cached) throw Errors.internal\n\n    return <LoadVideoResult> cached\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  fps = Default.definition.video.fps\n\n  get inputSource(): string { return urlAbsolute(this.source) }\n\n  get instance(): Video { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object: VideoObject): Video {\n    return new VideoClassImplementation({ ...this.instanceObject, ...object })\n  }\n\n  framePromise(time: Time, cached: LoadVideoResult): LoadPromise {\n    const { video, sequence } = cached\n    const sourceOrPromise = sequence[time.frame]\n    if (sourceOrPromise instanceof Promise) return sourceOrPromise\n\n    if (sourceOrPromise) return Promise.resolve()\n\n    // console.debug(this.constructor.name, \"framePromise\", time)\n\n    const promise = this.seekPromise(time, video).then(() => {\n      // make sure we don't already have this frame\n      if (sequence[time.frame] && !(sequence[time.frame] instanceof Promise)) {\n        // console.debug(this.constructor.name, \"framePromise already captured\", time.toString())\n        return\n      }\n\n      const context = ContextFactory.toSize(video)\n      context.draw(video)\n      sequence[time.frame] = context.canvas\n      // console.debug(this.constructor.name, \"framePromise capturing\", time.toString())\n    })\n    sequence[time.frame] = promise\n    return promise\n  }\n\n  needTimes(cached: LoadVideoResult, start: Time, end?: Time): Time[] {\n    const { sequence } = cached\n    const times = end ? TimeRange.fromTimes(start, end).times : [start]\n    return times.filter(time =>\n      !sequence[time.frame] || sequence[time.frame] instanceof Promise\n    )\n  }\n\n  framesPromise(start: Time, end?: Time): LoadPromise {\n    const cached = this.cachedOrThrow\n    const timesNeeded = this.needTimes(cached, start, end)\n    return this.timesPromise(timesNeeded)\n  }\n\n\n  timesPromise(timesNeeded: Time[]): LoadPromise {\n    if (!timesNeeded.length) return Promise.resolve()\n\n    const cached = this.cachedOrThrow\n    // const promises:LoadPromise[] = timesNeeded.map(time => this.framePromise(time, cached))\n\n\n    // return Promise.all(promises).then(() => {})\n    const time = timesNeeded.shift()\n    if (!time) throw Errors.internal\n\n    const first = this.framePromise(time, cached)\n    let framePromise = first\n\n    timesNeeded.forEach(time => {\n      framePromise = framePromise.then(() => this.framePromise(time, cached))\n    })\n    return framePromise\n  }\n\n  loadDefinition(quantize: number, startTime: Time, endTime?: Time): LoadPromise | void {\n    const rate = this.fps || quantize\n    const start = startTime.scale(rate)\n    const end = endTime ? endTime.scale(rate) : endTime\n\n    // console.trace(start)\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) {\n      const cached = this.cachedOrThrow\n      const times = this.needTimes(cached, start, end)\n      if (!times.length) {\n        // console.debug(this.constructor.name, \"loadDefinition cached and no times needed\")\n        return\n      }\n      // console.debug(this.constructor.name, \"loadDefinition cached and returning promises\", times.join(', '))\n      return this.timesPromise(times)\n    }\n\n    const promise: LoadPromise = Cache.caching(url) ? Cache.get(url) : LoaderFactory.video().loadUrl(url)\n    // if (Cache.caching(url)) console.debug(this.constructor.name, \"loadDefinition caching and returning framesPromise\", start, end)\n    // else console.debug(this.constructor.name, \"loadDefinition uncached and returning framesPromise\", start, end)\n\n    return promise.then(() => this.framesPromise(start, end))\n  }\n\n  loadedAudible(): AudibleSource | undefined {\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) return\n\n    const { audio } = cached\n    return Cache.audibleContext.createBufferSource(audio)\n  }\n\n  loadedVisible(quantize: number, startTime: Time): VisibleSource | undefined {\n    const rate = this.fps || quantize\n    const time = startTime.scale(rate)\n\n    // console.debug(this.constructor.name, \"loadedVisible\", time.toString(), startTime.toString())\n\n    const cached: LoadVideoResult | undefined = Cache.get(this.absoluteUrl)\n    if (!cached) {\n      // console.debug(this.constructor.name, \"loadedVisible no cached\")\n      return\n    }\n\n    const { sequence } = cached\n    const source = sequence[time.frame]\n    if (!source || source instanceof Promise) {\n      // console.debug(this.constructor.name, \"loadedVisible source issue\", source)\n      return\n    }\n\n    return source\n  }\n\n  pattern = '%.jpg'\n\n  private seek(definitionTime: Time, video:HTMLVideoElement): void {\n    if (!video) throw Errors.internal\n\n    video.currentTime = definitionTime.seconds\n  }\n\n  private seekNeeded(definitionTime: Time, video:HTMLVideoElement): boolean {\n    const { currentTime } = video\n    const videoTime = Time.fromSeconds(currentTime, definitionTime.fps)\n    return !videoTime.equalsTime(definitionTime)\n  }\n\n  private seekPromise(definitionTime: Time, video:HTMLVideoElement): LoadPromise {\n    const promise:LoadPromise = new Promise(resolve => {\n      if (!this.seekNeeded(definitionTime, video)) return resolve()\n\n      video.onseeked = () => {\n        video.onseeked = null\n        resolve()\n      }\n      this.seek(definitionTime, video)\n    })\n    return promise\n  }\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.fps !== Default.definition.video.fps) object.fps = this.fps\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.Video\n\n  unload(times?: Times[]): void {\n    // const zeroTime = Time.fromArgs(0, this.fps)\n    // const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    // const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    // if (times) {\n    //   times.forEach(maybePair => {\n    //     const [start, end] = maybePair\n    //     const frames = this.framesArray(start, end)\n    //     const urls = frames.map(frame => this.urlForFrame(frame))\n    //     const needed = urls.filter(url => deleting.has(url))\n    //     needed.forEach(url => { deleting.delete(url) })\n    //   })\n    // }\n    // deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  // private urlForFrame(frame : number) : string {\n  //   let s = String((frame * this.increment) + this.begin)\n  //   if (this.padding) s = s.padStart(this.padding, '0')\n  //   return (this.url + this.pattern).replaceAll('%', s)\n  // }\n\n  // private urls(start : Time, end? : Time) : string[] {\n  //   return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  // }\n\n}\n\nexport { VideoDefinitionClassImplementation }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { VideoDefinitionClassImplementation } from \"../Video/VideoDefinition\"\nimport { Video, VideoDefinition, VideoDefinitionObject, VideoObject } from \"./Video\"\n\nconst videoDefinition = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <VideoDefinition> Definitions.fromId(id)\n\n  return new VideoDefinitionClassImplementation(object)\n}\n\nconst videoDefinitionFromId = (id : string) : VideoDefinition => {\n  return videoDefinition({ id })\n}\n\nconst videoInstance = (object : VideoObject) : Video => {\n  const definition = videoDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoFromId = (id : string) : Video => {\n  return videoInstance({ id })\n}\n\nconst videoInitialize = () : void => {}\n\nconst videoDefine = (object : VideoDefinitionObject) : VideoDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  Definitions.uninstall(id)\n  return videoDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoInstall = (object: VideoDefinitionObject): VideoDefinition => {\n  const instance = videoDefine(object)\n  instance.retain = true\n  return instance\n}\n\n\n\nconst VideoFactoryImplementation = {\n  define: videoDefine,\n  install: videoInstall,\n  definition: videoDefinition,\n  definitionFromId: videoDefinitionFromId,\n  fromId: videoFromId,\n  initialize: videoInitialize,\n  instance: videoInstance,\n}\n\nFactories[DefinitionType.Video] = VideoFactoryImplementation\n\nexport {\n  videoInstall,\n  videoDefine,\n  videoDefinition,\n  videoDefinitionFromId,\n  VideoFactoryImplementation,\n  videoFromId,\n  videoInitialize,\n  videoInstance,\n}\n","import { Any, JsonObject } from \"../../declarations\"\nimport { AudibleClass } from \"../Audible/Audible\"\nimport { StreamableClass, StreamableDefinition, StreamableObject } from \"./Streamable\"\n\n\nfunction StreamableMixin<T extends AudibleClass>(Base: T): StreamableClass & T {\n  return class extends Base {\n    constructor(...args: Any[]) {\n      super(...args)\n      const [object] = args\n      const { something } = <StreamableObject>object\n\n      if (something) this.something = something\n    }\n\n    declare definition : StreamableDefinition\n\n\n    something?: string\n\n    maxFrames(_quantize : number, _trim? : number) : number { return 0 }\n\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      if (this.something) object.something = this.something\n      return object\n    }\n  }\n}\nexport { StreamableMixin }\n","import { VideoStream, VideoStreamDefinition, VideoStreamObject } from \"./VideoStream\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../../Mixin/Audible/AudibleMixin\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\nimport { StreamableMixin } from \"../../Mixin/Streamable/StreamableMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithStreamable = StreamableMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithStreamable)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoStreamClass extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    // const [object] = args\n    // const { speed } = <VideoStreamObject> object\n  }\n\n  get copy() : VideoStream { return <VideoStream> super.copy }\n\n  declare definition : VideoStreamDefinition\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    // if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoStreamClass }\n","import { Any, JsonObject } from \"../../declarations\"\nimport { StreamableDefinitionClass, StreamableDefinitionObject } from \"./Streamable\"\nimport { AudibleDefinitionClass } from \"../Audible/Audible\"\n// import { DataType } from \"../../../Setup/Enums\"\n// import { Property } from \"../../../Setup/Property\"\n\nfunction StreamableDefinitionMixin<T extends AudibleDefinitionClass>(Base: T) : StreamableDefinitionClass & T {\n  return class extends Base {\n    constructor(...args : Any[]) {\n      super(...args)\n      const [object] = args\n      const { format } = <StreamableDefinitionObject> object\n      if (format) this.format = format\n\n    //  this.properties.push(new Property({ name: \"something\", type: DataType.String, value: '' }))\n    }\n\n    format = 'hls'\n\n    streamable = true\n\n    toJSON() : JsonObject {\n      const object = super.toJSON()\n      object.format = true\n      return object\n    }\n  }\n}\n\nexport { StreamableDefinitionMixin }\n","import { DefinitionType, TrackType } from \"../../Setup/Enums\"\nimport { Time, Times} from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { VideoStreamClass } from \"./VideoStreamInstance\"\nimport { VideoStream, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Any, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../../Mixin/Audible/AudibleDefinitionMixin\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { StreamableDefinitionMixin } from \"../../Mixin/Streamable/StreamableDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithVisible = VisibleDefinitionMixin(WithAudible)\nconst WithStreamable = StreamableDefinitionMixin(WithVisible)\nclass VideoStreamDefinitionClass extends WithStreamable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { url, source } = <VideoStreamDefinitionObject> object\n    if (!url) throw Errors.invalid.definition.url\n\n    this.url = url\n    this.source = source || url\n\n    // this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  get absoluteUrl(): string { return urlAbsolute(this.url) }\n\n  frames(quantize: number): number {\n    return Time.fromSeconds(Default.definition.videostream.duration, quantize, 'floor').frame\n  }\n\n  get inputSource(): string { return urlAbsolute(this.source) }\n\n  get instance() : VideoStream { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoStreamObject) : VideoStream {\n    return new VideoStreamClass({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(): LoadPromise | void {\n    const url = this.absoluteUrl\n    if (Cache.cached(url)) return\n\n    if (Cache.caching(url)) return Cache.get(url)\n\n    return LoaderFactory.video().loadUrl(url)\n  }\n\n  definitionUrls(_start: Time, _end?: Time): string[] { return [this.absoluteUrl] }\n\n  loadedVisible() : HTMLVideoElement | undefined { return Cache.get(this.absoluteUrl) }\n\n  source = ''\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoStream\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    return object\n  }\n\n  unload(times?: Times[]): void {\n    if (!times && Cache.cached(this.url)) Cache.remove(this.url)\n  }\n\n  url : string\n}\n\nexport { VideoStreamDefinitionClass }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { VideoStreamDefinitionClass } from \"../VideoStream/VideoStreamDefinition\"\nimport { VideoStream, VideoStreamDefinition, VideoStreamDefinitionObject, VideoStreamObject } from \"./VideoStream\"\n\nconst videoStreamDefinition = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <VideoStreamDefinition> Definitions.fromId(id)\n\n  return new VideoStreamDefinitionClass(object)\n}\n\nconst videoStreamDefinitionFromId = (id : string) : VideoStreamDefinition => {\n  return videoStreamDefinition({ id })\n}\n\nconst videoStreamInstance = (object : VideoStreamObject) : VideoStream => {\n  const definition = videoStreamDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoStreamFromId = (id : string) : VideoStream => {\n  return videoStreamInstance({ id })\n}\n\nconst videoStreamInitialize = (): void => {}\n\nconst videoStreamDefine = (object : VideoStreamDefinitionObject) : VideoStreamDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  Definitions.uninstall(id)\n  return videoStreamDefinition(object)\n}\n\n/**\n * @internal\n */\nconst videoStreamInstall = (object: VideoStreamDefinitionObject): VideoStreamDefinition => {\n  const instance = videoStreamDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoStreamFactoryImplementation = {\n  define: videoStreamDefine,\n  install: videoStreamInstall,\n  definition: videoStreamDefinition,\n  definitionFromId: videoStreamDefinitionFromId,\n  fromId: videoStreamFromId,\n  initialize: videoStreamInitialize,\n  instance: videoStreamInstance,\n}\n\nFactories[DefinitionType.VideoStream] = VideoStreamFactoryImplementation\n\nexport {\n  videoStreamInstall,\n  videoStreamDefine,\n  videoStreamDefinition,\n  videoStreamDefinitionFromId,\n  VideoStreamFactoryImplementation,\n  videoStreamFromId,\n  videoStreamInitialize,\n  videoStreamInstance,\n}\n","import { VideoSequence, VideoSequenceDefinition, VideoSequenceObject } from \"./VideoSequence\"\nimport { InstanceBase } from \"../../Base/Instance\"\nimport { ClipMixin } from \"../../Mixin/Clip/ClipMixin\"\nimport { TransformableMixin } from \"../../Mixin/Transformable/TransformableMixin\"\nimport { AudibleMixin } from \"../../Mixin/Audible/AudibleMixin\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Default } from \"../../Setup/Default\"\nimport { Any, JsonObject } from \"../../declarations\"\nimport { Time } from \"../../Utilities/Time\"\nimport { AudibleFileMixin } from \"../../Mixin/AudibleFile/AudibleFileMixin\"\nimport { VisibleMixin } from \"../../Mixin/Visible/VisibleMixin\"\n\nconst WithClip = ClipMixin(InstanceBase)\nconst WithAudible = AudibleMixin(WithClip)\nconst WithAudibleFile = AudibleFileMixin(WithAudible)\nconst WithVisible = VisibleMixin(WithAudibleFile)\nconst WithTransformable = TransformableMixin(WithVisible)\n\nclass VideoSequenceClassImplementation extends WithTransformable {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const { speed } = <VideoSequenceObject> object\n    if (speed && Is.aboveZero(speed)) this.speed = speed\n  }\n\n  get copy() : VideoSequence { return <VideoSequence> super.copy }\n\n  declare definition : VideoSequenceDefinition\n\n  definitionTime(quantize : number, time : Time) : Time {\n    const scaledTime = super.definitionTime(quantize, time)\n    if (this.speed === Default.instance.video.speed) return scaledTime\n\n    return scaledTime.divide(this.speed) //, 'ceil')\n  }\n\n  speed = Default.instance.video.speed\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    if (this.speed !== Default.instance.video.speed) object.speed = this.speed\n    return object\n  }\n}\n\nexport { VideoSequenceClassImplementation }\n","import { DefinitionType, TrackType, DataType } from \"../../Setup/Enums\"\nimport { Any, VisibleSource, JsonObject, LoadPromise } from \"../../declarations\"\nimport { Time, Times } from \"../../Utilities/Time\"\nimport { urlAbsolute} from \"../../Utilities/Url\"\nimport { Cache } from \"../../Loading/Cache\"\nimport { DefinitionBase } from \"../../Base/Definition\"\nimport { VideoSequenceClassImplementation } from \"./VideoSequenceInstance\"\nimport { VideoSequence, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\nimport { ClipDefinitionMixin } from \"../../Mixin/Clip/ClipDefinitionMixin\"\nimport { VisibleDefinitionMixin } from \"../../Mixin/Visible/VisibleDefinitionMixin\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Definitions } from \"../../Definitions/Definitions\"\nimport { AudibleDefinitionMixin } from \"../../Mixin/Audible/AudibleDefinitionMixin\"\nimport { Default } from \"../../Setup/Default\"\nimport { Property } from \"../../Setup/Property\"\nimport { LoaderFactory } from \"../../Loading/LoaderFactory\"\nimport { AudibleFileDefinitionMixin } from \"../../Mixin/AudibleFile/AudibleFileDefinitionMixin\"\n\nconst WithClip = ClipDefinitionMixin(DefinitionBase)\nconst WithAudible = AudibleDefinitionMixin(WithClip)\nconst WithAudibleFile = AudibleFileDefinitionMixin(WithAudible)\nconst WithVisible = VisibleDefinitionMixin(WithAudibleFile)\n\nclass VideoSequenceDefinitionClassImplementation extends WithVisible {\n  constructor(...args : Any[]) {\n    super(...args)\n    const [object] = args\n    const {\n      padding, url, begin, fps, increment, pattern, source\n    } = <VideoSequenceDefinitionObject>object\n    if (!url) throw Errors.invalid.definition.url\n    this.url = url\n\n    if (source) this.source = source\n    if (typeof begin !== \"undefined\") this.begin = begin\n    if (fps) this.fps = fps\n    if (increment) this.increment = increment\n    if (pattern) this.pattern = pattern\n    if (padding) this.padding = padding\n    else {\n      const lastFrame = this.begin + (this.increment * this.framesMax - this.begin)\n      this.padding = String(lastFrame).length\n    }\n    this.properties.push(new Property({ name: \"speed\", type: DataType.Number, value: 1.0 }))\n    Definitions.install(this)\n  }\n\n  begin = Default.definition.videosequence.begin\n\n  definitionUrls(start: Time, end?: Time): string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  fps = Default.definition.videosequence.fps\n\n  private framesArray(start : Time, end? : Time) : number[] {\n    const frames : number[] = []\n    const startFrame = Math.min(this.framesMax, start.scale(this.fps, \"floor\").frame)\n    if (end) {\n      const endFrame = Math.min(this.framesMax, end.scale(this.fps, \"ceil\").frame)\n      for (let frame = startFrame; frame <= endFrame; frame += 1) {\n        frames.push(frame)\n      }\n    } else frames.push(startFrame)\n    return frames\n  }\n\n  private get framesMax() : number { return Math.floor(this.fps * this.duration) - 2 }\n\n  increment = Default.definition.videosequence.increment\n\n  get inputSource(): string { return urlAbsolute(this.source) }\n\n  get instance() : VideoSequence { return this.instanceFromObject(this.instanceObject) }\n\n  instanceFromObject(object : VideoSequenceObject) : VideoSequence {\n    return new VideoSequenceClassImplementation({ ...this.instanceObject, ...object })\n  }\n\n  loadDefinition(quantize:number, start: Time, end?: Time): LoadPromise | void {\n    const promises: LoadPromise[] = []\n    const clipDefinitionPromise = end ? super.loadDefinition(quantize, start, end) : null\n    if (clipDefinitionPromise) promises.push(clipDefinitionPromise)\n    const urls = this.definitionUrls(start, end)\n    const uncachedUrls = urls.filter(url => !Cache.cached(url))\n    uncachedUrls.forEach(url => {\n      if (Cache.caching(url)) promises.push(Cache.get(url))\n      else promises.push(LoaderFactory.image().loadUrl(url))\n    })\n    switch (promises.length) {\n      case 0: return\n      case 1: return promises[0]\n      default: return Promise.all(promises).then()\n    }\n  }\n\n  loadedVisible(_quantize: number, time : Time) : VisibleSource | undefined {\n    const [url] = this.urls(time)\n    return Cache.get(url)\n  }\n\n  pattern = '%.jpg'\n\n  source = ''\n\n  toJSON() : JsonObject {\n    const object = super.toJSON()\n    object.url = this.url\n    if (this.source) object.source = this.source\n    if (this.pattern !== Default.definition.videosequence.pattern) object.pattern = this.pattern\n    if (this.increment !== Default.definition.videosequence.increment) object.increment = this.increment\n    if (this.begin !== Default.definition.videosequence.begin) object.begin = this.begin\n    if (this.fps !== Default.definition.videosequence.fps) object.fps = this.fps\n    if (this.padding !== Default.definition.videosequence.padding) object.padding = this.padding\n    return object\n  }\n\n  trackType = TrackType.Video\n\n  type = DefinitionType.VideoSequence\n\n  unload(times?: Times[]): void {\n    const zeroTime = Time.fromArgs(0, this.fps)\n    const allUrls = this.urls(zeroTime, zeroTime.withFrame(this.framesMax))\n    const deleting = new Set(allUrls.filter(url => Cache.cached(url)))\n    if (times) {\n      times.forEach(maybePair => {\n        const [start, end] = maybePair\n        const frames = this.framesArray(start, end)\n        const urls = frames.map(frame => this.urlForFrame(frame))\n        const needed = urls.filter(url => deleting.has(url))\n        needed.forEach(url => { deleting.delete(url) })\n      })\n    }\n    deleting.forEach(url => { Cache.remove(url) })\n  }\n\n  url : string\n\n  private urlForFrame(frame : number) : string {\n    let s = String((frame * this.increment) + this.begin)\n    if (this.padding) s = s.padStart(this.padding, '0')\n    return urlAbsolute((this.url + this.pattern).replaceAll('%', s))\n  }\n\n  private urls(start : Time, end? : Time) : string[] {\n    return this.framesArray(start, end).map(frame => this.urlForFrame(frame))\n  }\n\n  padding : number\n}\n\nexport { VideoSequenceDefinitionClassImplementation }\n","import { DefinitionType } from \"../../Setup/Enums\"\nimport { Errors } from \"../../Setup/Errors\"\nimport { Is } from \"../../Utilities/Is\"\nimport { Definitions } from \"../../Definitions\"\nimport { Factories } from \"../../Definitions/Factories\"\nimport { VideoSequenceDefinitionClassImplementation } from \"../VideoSequence/VideoSequenceDefinition\"\nimport { VideoSequence, VideoSequenceDefinition, VideoSequenceDefinitionObject, VideoSequenceObject } from \"./VideoSequence\"\n\nconst videoSequenceDefinition = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  if (Definitions.installed(id)) return <VideoSequenceDefinition> Definitions.fromId(id)\n\n  return new VideoSequenceDefinitionClassImplementation(object)\n}\n\nconst videoSequenceDefinitionFromId = (id : string) : VideoSequenceDefinition => {\n  return videoSequenceDefinition({ id })\n}\n\nconst videoSequenceInstance = (object : VideoSequenceObject) : VideoSequence => {\n  const definition = videoSequenceDefinition(object)\n  const instance = definition.instanceFromObject(object)\n  return instance\n}\n\nconst videoSequenceFromId = (id : string) : VideoSequence => {\n  return videoSequenceInstance({ id })\n}\n\nconst videoSequenceInitialize = () : void => {}\n\nconst videoSequenceDefine = (object : VideoSequenceDefinitionObject) : VideoSequenceDefinition => {\n  const { id } = object\n  if (!(id && Is.populatedString(id))) throw Errors.id + JSON.stringify(object)\n\n  Definitions.uninstall(id)\n  return videoSequenceDefinition(object)\n}\n\n\n/**\n * @internal\n */\nconst videoSequenceInstall = (object: VideoSequenceDefinitionObject): VideoSequenceDefinition => {\n  const instance = videoSequenceDefine(object)\n  instance.retain = true\n  return instance\n}\n\nconst VideoSequenceFactoryImplementation = {\n  define: videoSequenceDefine,\n  install: videoSequenceInstall,\n  definition: videoSequenceDefinition,\n  definitionFromId: videoSequenceDefinitionFromId,\n  fromId: videoSequenceFromId,\n  initialize: videoSequenceInitialize,\n  instance: videoSequenceInstance,\n}\n\nFactories[DefinitionType.VideoSequence] = VideoSequenceFactoryImplementation\n\nexport {\n  videoSequenceInstall,\n  videoSequenceDefine,\n  videoSequenceDefinition,\n  videoSequenceDefinitionFromId,\n  VideoSequenceFactoryImplementation,\n  videoSequenceFromId,\n  videoSequenceInitialize,\n  videoSequenceInstance,\n}\n","import {\n  Any,\n  LoadPromise,\n  SelectionValue,\n  ScalarValue,\n  UnknownObject,\n  ContextData,\n  Size,\n} from \"../declarations\"\nimport {\n  ActionType,\n  ClipType,\n  ClipTypes,\n  DefinitionType,\n  EventType,\n  MasherAction,\n  TrackType,\n  TransformType,\n  TransformTypes,\n} from \"../Setup/Enums\"\nimport { Errors } from \"../Setup/Errors\"\nimport { Is } from \"../Utilities/Is\"\nimport { sortByFrame } from \"../Utilities/Sort\"\nimport { Time } from \"../Utilities/Time\"\nimport { TimeRange } from \"../Utilities/TimeRange\"\nimport { Action } from \"../Editing/Action/Action\"\nimport { ActionFactory } from \"../Editing/Action/ActionFactory\"\nimport { ChangeAction } from \"../Editing/Action/ChangeAction\"\nimport { Actions } from \"../Editing/Actions\"\nimport { Factory } from \"../Definitions/Factory/Factory\"\nimport { DefinitionObject, DefinitionTimes } from \"../Base/Definition\"\nimport { Definitions } from \"../Definitions\"\nimport { Effect } from \"../Mash/Effect/Effect\"\nimport { EffectClass } from \"../Mash/Effect/EffectInstance\"\nimport { Mash } from \"../Mash/Mash/Mash\"\nimport { AudibleFile } from \"../Mixin/AudibleFile/AudibleFile\"\nimport { Clip } from \"../Mixin/Clip/Clip\"\nimport { Transformable } from \"../Mixin/Transformable/Transformable\"\nimport { Video } from \"../Mash/Video/Video\"\nimport { ClipOrEffect, Masher, MasherAddPromise, MasherObject, Selection } from \"./Masher\"\nimport { Default } from \"../Setup/Default\"\nimport { Cache } from \"../Loading/Cache\"\nimport { Emitter } from \"../Utilities/Emitter\"\nimport { MashFactory } from \"../Mash/Mash/MashFactory\"\nimport { Track } from \"../Mash/Track/Track\"\n\n\nclass MasherClass implements Masher {\n  [index : string] : unknown\n  constructor(...args: Any[]) {\n\n    const [object] = args\n    const {\n      autoplay,\n      precision,\n      loop,\n      fps,\n      volume,\n      buffer,\n      mash,\n    } = <MasherObject> object\n    if (typeof autoplay !== \"undefined\") this.autoplay = autoplay\n    if (typeof precision !== \"undefined\") this.precision = precision\n    if (typeof loop !== \"undefined\") this._loop = loop\n    if (typeof fps !== \"undefined\") this._fps = fps\n    if (typeof volume !== \"undefined\") this._volume = volume\n    if (typeof buffer !== \"undefined\") this._buffer = buffer\n    if (mash) this.mash = mash\n  }\n\n  private actionCreate(object : UnknownObject) : void {\n    const mash = object.mash || this.mash\n    const actions = object.actions || this.actions\n    const undoSelection = object.undoSelection || { ...this.selection }\n    const redoSelection = object.redoSelection  || { ...this.selection }\n\n    const clone : UnknownObject = {\n      ...object,\n      actions,\n      mash,\n      undoSelection,\n      redoSelection,\n    }\n    const action = ActionFactory.createFromObject(clone)\n    this.actions.add(action)\n    this.handleAction(this.actions.redo())\n  }\n\n  private _actions? : Actions\n\n  private get actions() : Actions {\n    if (!this._actions) {\n      this._actions = new Actions({ mash: this.mash })\n    }\n    return this._actions\n  }\n\n\n  add(object : DefinitionObject, frameOrIndex = 0, trackIndex = 0) : MasherAddPromise {\n    if (!Is.populatedObject(object)) throw Errors.argument + 'add'\n    const { id } = object\n    const definitionFromId = id && Definitions.installed(id) ? Definitions.fromId(id) : false\n    const type = object.type || (definitionFromId && definitionFromId.type)\n    if (!type) throw Errors.type + 'Masher.add ' + id + JSON.stringify(definitionFromId)\n\n    if (type === DefinitionType.Effect) {\n      const effectDefinition = Factory.effect.definition(object)\n      const effect = effectDefinition.instance\n      return this.addEffect(effect, frameOrIndex).then(() => effect)\n    }\n    const clipType = <ClipType> type\n\n    if (!ClipTypes.includes(clipType)) throw Errors.type + type\n\n    const definitionType = <DefinitionType> type\n    const definition = Factory[definitionType].definition(object)\n\n    const clip = <Clip> definition.instance //FromObject(object)\n\n    return this.addClip(clip, frameOrIndex, trackIndex).then(() => clip)\n  }\n\n  addClip(clip : Clip, frameOrIndex = 0, trackIndex = 0) : LoadPromise {\n    const { trackType } = clip\n\n    const options : UnknownObject = {\n      clip,\n      type: ActionType.AddClipToTrack,\n      redoSelection: { clip: clip },\n      trackType,\n    }\n    const tracksOfType = this.mash.tracks.filter(track => track.trackType === trackType)\n    const track = tracksOfType[trackIndex]\n    const trackCount = tracksOfType.length\n    if (track.dense) {\n      options.insertIndex = frameOrIndex\n      options.createTracks = Math.min(1, Math.max(0, 1 - trackCount))\n    } else {\n      options.trackIndex = trackIndex\n      clip.frame = track.frameForClipNearFrame(clip, frameOrIndex)\n      options.createTracks = Math.max(0, trackIndex + 1 - trackCount)\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addEffect(effect : Effect, insertIndex = 0) : LoadPromise {\n    // console.log(this.constructor.name, \"addEffect\", object, index)\n    const { clip } = this.selection\n    if (!clip) throw Errors.selection\n\n    const { effects } = <Transformable> clip\n    if (!effects) throw Errors.selection\n\n    const undoEffects = [...effects]\n    const redoEffects = [...effects]\n    redoEffects.splice(insertIndex, 0, effect)\n    const options = {\n      effects,\n      undoEffects,\n      redoEffects,\n      redoSelection: { ...this.selection, effect },\n      type: ActionType.MoveEffect\n    }\n    this.actionCreate(options)\n    return this.loadMashAndDraw()\n  }\n\n  addTrack(trackType = TrackType.Video) : void {\n    this.actionCreate({ trackType, type: ActionType.AddTrack })\n  }\n\n  autoplay = Default.masher.autoplay\n\n  private _buffer = Default.masher.buffer\n\n  get buffer() : number { return this._buffer }\n\n  set buffer(value: number) {\n    const number = Number(value)\n    if (this._buffer !== number) {\n      this._buffer = number\n      this.mash.buffer = number\n    }\n  }\n\n  can(method : MasherAction) : boolean {\n    // const z = this._selectedClips.length\n    const { track, clip, effect } = this.selection\n    switch (method) {\n      case MasherAction.Save: return this.actions.canSave\n      case MasherAction.Undo: return this.actions.canUndo\n      case MasherAction.Redo: return this.actions.canRedo\n      case MasherAction.Remove: return !!(\n        effect\n        || clip\n        || (track && this.mash.trackCount(track.trackType) === track.layer + 1)\n      )\n      case MasherAction.Split: return !!clip && this.clipCanBeSplit(clip, this.time, this.mash.quantize)\n      case MasherAction.Freeze: return (\n        !!clip\n        && DefinitionType.Video === clip.type\n        && this.clipCanBeSplit(clip, this.time, this.mash.quantize)\n      )\n      default: throw Errors.argument\n    }\n  }\n\n  change(property: string, value?: SelectionValue): void {\n    if (this.selection.track) {\n      if (this.selection.clip) {\n        if (this.selection.effect) {\n          this.changeEffect(property, value, this.selection.effect)\n        } else this.changeClip(property, value, this.selection.clip)\n      } else this.changeTrack(property, value, this.selection.track)\n    } else throw Errors.selection\n    //else this.changeMash(property, value)\n  }\n\n  changeClip(property : string, value? : SelectionValue, clip? : Clip) : void {\n    // console.log(this.constructor.name, \"changeClip\", property)\n    if (!Is.populatedString(property)) throw Errors.property + \"changeClip \" + property\n\n    const [transform, transformProperty] = property.split(\".\")\n    if (transformProperty) {\n      this.changeTransformer(transform, transformProperty, value)\n      return\n    }\n    const target = clip || this.selection.clip\n    if (!target) throw Errors.selection\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(<ScalarValue> redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = target.value(property) //typeof value === \"undefined\" ? this.pristineOrThrow[property] : target.value(property)\n    const options : UnknownObject = { property, target, redoValue, undoValue }\n\n    switch (options.property) {\n      case 'frames': {\n        options.type = ActionType.ChangeFrames\n        break\n      }\n      case 'trim': {\n        options.type = ActionType.ChangeTrim\n        // TODO: make sure there's a test for this\n        // not sure where this was derived from - using original clip??\n        options.frames = target.frames + <number> options.undoValue\n        break\n      }\n      default: options.type = ActionType.Change\n    }\n    this.actionCreate(options)\n  }\n\n  changeEffect(property : string, value? : SelectionValue, effect? : Effect) : void {\n    // console.log(this.constructor.name, \"changeEffect\", property)\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = effect || this.selection.effect\n    if (!target) throw Errors.selection\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = target.value(property) // typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeTrack(property: string, value?: SelectionValue, track?: Track): void {\n    if (!Is.populatedString(property)) throw Errors.property\n\n    const target = track || this.selection.track\n    if (!target) throw Errors.selection\n\n    const redoValue = typeof value === \"undefined\" ? target.value(property) : value\n    if (this.currentActionReusable(target, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    const undoValue = target.value(property) // typeof value === \"undefined\" ? this.pristineEffectOrThrow[property] : target.value(property)\n    const options = {\n      type: ActionType.Change, target, property, redoValue, undoValue\n    }\n    this.actionCreate(options)\n  }\n\n  changeTransformer(type : string, property : string, value?: SelectionValue) : void {\n    // console.log(this.constructor.name, \"changeTransformer\", type, property)\n    if (!Is.populatedString(type)) throw Errors.type + \"changeTransformer \" + type\n    if (!Is.populatedString(property)) throw Errors.property + \"changeTransformer \" + property\n    // if (!this._pristine) throw Errors.internal + \"changeTransformer _pristine\"\n\n    const target = this.selection.clip\n    if (!target) throw Errors.selection\n\n    const transformType = <TransformType> type\n\n    const transformable = <Transformable> target\n\n    // make sure first component is merger or scaler\n    if (!TransformTypes.includes(transformType)) throw Errors.property + \"type \" + type\n    const transformTarget = transformable[transformType]\n    const redoValue = typeof value === \"undefined\" ? transformTarget.value(property)  : value\n    // const pristineTarget = this._pristine[transformType] ! replaced with transformTarget\n    if (typeof transformTarget !== \"object\") throw Errors.internal + JSON.stringify(this._pristine)\n\n    const undoValue = transformTarget[property]\n    if (typeof undoValue === \"undefined\") throw Errors.property + 'pristine ' + property + JSON.stringify(transformTarget)\n\n    const options : UnknownObject = { property, target: transformTarget, redoValue, undoValue, type: ActionType.Change }\n\n\n    if (this.currentActionReusable(transformTarget, property)) {\n      const changeAction = <ChangeAction> this.actions.currentAction\n      changeAction.updateAction(redoValue)\n      this.handleAction(changeAction)\n      return\n    }\n    this.actionCreate(options)\n  }\n\n  private clipCanBeSplit(clip : Clip, time : Time, quantize : number) : boolean {\n    if (!Is.object(clip)) return false\n\n    // true if now intersects clip time, but is not start or end frame\n    const range = TimeRange.fromTime(time)\n    const clipRange = clip.timeRange(quantize)\n\n    // ranges must intersect\n    if (!clipRange.intersects(range)) return false\n\n    const scaled = range.scale(clipRange.fps)\n    if (scaled.frame === clipRange.frame) return false\n    if (scaled.end === clipRange.end) return false\n\n    return true\n  }\n\n  get clips(): Clip[] { return this.mash.clips }\n\n  private currentActionReusable(target : unknown, property : string) : boolean {\n    if (!this.actions.currentActionLast) return false\n\n    const action = this.actions.currentAction\n    if (!(action instanceof ChangeAction)) return false\n\n    return action.target === target && action.property === property\n  }\n\n  get currentTime() : number { return this.mash.drawnTime ? this.mash.drawnTime.seconds : 0 }\n\n  get duration() : number { return this.mash.duration }\n\n  private get endTime() : Time { return this.mash.endTime.scale(this.fps, 'floor') }\n\n  eventTarget  = new Emitter()\n\n  private _fps = Default.masher.fps\n\n  get fps() : number { return this._fps || this.mash.quantize }\n\n  set fps(value: number) {\n    const number = Number(value)\n    // setting to zero means fallback to mash rate\n    if (this._fps !== number) {\n      this._fps = number\n      this.eventTarget.emit(EventType.Fps)\n      this.time = this.time.scale(this.fps)\n    }\n  }\n\n  get frame() : number { return this.time.frame }\n\n  set frame(value : number) { this.goToTime(Time.fromArgs(Number(value), this.fps)) }\n\n  get frames() : number { return this.endTime.frame }\n\n  freeze() : void {\n    const { clip } = this.selection\n    if (!clip) throw Errors.selection\n\n    if (!this.clipCanBeSplit(clip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n    if (DefinitionType.Video !== clip.type) {\n      throw Errors.invalid.action\n    }\n    const freezeClip = <Video> clip\n    const scaled = this.time.scale(this.mash.quantize)\n    const trackClips = this.mash.clipTrack(freezeClip).clips\n    const insertClip = freezeClip.copy\n    const frozenClip = freezeClip.copy\n\n    const options = {\n      frames: freezeClip.frames - (scaled.frame - freezeClip.frame),\n      freezeClip,\n      frozenClip,\n      insertClip,\n      trackClips,\n      redoSelection: { clip: frozenClip },\n      index: 1 + trackClips.indexOf(freezeClip),\n      type: ActionType.Freeze,\n    }\n\n    frozenClip.frame = scaled.frame\n    frozenClip.frames = 1\n    frozenClip.trim = freezeClip.trim + (scaled.frame - freezeClip.frame)\n    insertClip.frame = scaled.frame + 1\n    insertClip.frames = options.frames - 1\n    insertClip.trim = frozenClip.trim + 1\n\n    this.actionCreate(options)\n  }\n\n  private get gain() : number { return this.muted ? 0.0 : this.volume }\n\n  goToTime(value?: Time): LoadPromise {\n    const { fps } = this\n    const time = value ? value.scaleToFps(fps) : Time.fromArgs(0, fps)\n    const min = time.min(this.endTime)\n    if (value && min.equalsTime(this.time)) return Promise.resolve()\n\n    const promise = this.mash.seekToTime(min)\n    if (promise) return promise\n\n    return Promise.resolve()\n  }\n\n  private handleAction(action: Action): void {\n    this.selection = action.selection\n    this.mash.handleAction(action)\n  }\n\n  get imageData() : ContextData { return Cache.visibleContext.imageData }\n\n  get imageSize() : Size { return Cache.visibleContext.size }\n\n  set imageSize(value : Size) {\n    const { width, height } = value\n    if (!(Is.aboveZero(width) && Is.aboveZero(height))) throw Errors.invalid.size\n\n    Cache.visibleContext.size = value\n    this.loadMashAndDraw()\n  }\n\n  private loadMashAndDraw(): LoadPromise {\n    const promise = this.mash.loadPromise\n    if (promise) return promise.then(() => {\n      this.mash.compositeVisible()\n    })\n\n    this.mash.compositeVisible()\n    return Promise.resolve()\n  }\n\n  get loadedDefinitions() : DefinitionTimes { return this.mash.loadedDefinitions }\n\n  private _loop = Default.masher.loop\n\n  get loop() : boolean { return this._loop }\n\n  set loop(value: boolean) {\n    const boolean = !!value\n    this._loop = boolean\n    if (this._mash) this.mash.loop = boolean\n  }\n\n  private _mash? : Mash\n\n  get mash() : Mash {\n    if (this._mash) return this._mash\n\n    const instance = MashFactory.instance()\n    this.mash =instance\n    return instance\n  }\n\n  set mash(object: Mash) {\n    if (this._mash === object) return\n    this.paused = true\n    if (this._mash) this._mash.destroy()\n\n    this._selectedEffects = []\n    this._mash = object\n    this._mash.buffer = this.buffer\n    this._mash.gain = this.gain\n    this._mash.loop = this.loop\n    this._mash.emitter = this.eventTarget\n    if (this._actions) {\n      this._actions.destroy()\n      this._actions.mash = this._mash\n    }\n\n    this.selectedClips = [] // so mash gets copied into _pristine\n\n    this.eventTarget.emit(EventType.Mash)\n    this.eventTarget.emit(EventType.Track)\n    this.eventTarget.emit(EventType.Duration)\n    this.eventTarget.emit(EventType.Action)\n\n    this.goToTime()\n    if (this.autoplay) this.paused = false\n  }\n\n  move(object: ClipOrEffect, frameOrIndex = 0, trackIndex = 0) : void {\n    if (!Is.object(object)) throw Errors.argument\n    const { type } = object\n    if (type === DefinitionType.Effect) {\n      this.moveEffect(<Effect> object, frameOrIndex)\n      return\n    }\n\n    this.moveClip(<Clip>object, frameOrIndex, trackIndex)\n  }\n\n  moveClip(clip: Clip, frameOrIndex = 0, trackIndex = 0) : void {\n    // console.log(\"moveClip\", \"frameOrIndex\", frameOrIndex, \"trackIndex\", trackIndex)\n    if (!Is.positive(frameOrIndex)) throw Errors.argument + 'moveClip frameOrIndex'\n    if (!Is.positive(trackIndex)) throw Errors.argument + 'moveClip trackIndex'\n\n    const { trackType, track: undoTrackIndex } = clip\n    const options : Any = {\n      clip,\n      trackType,\n      trackIndex,\n      undoTrackIndex,\n      type: ActionType.MoveClip\n    }\n\n    const redoTrack = this.mash.trackOfTypeAtIndex(trackType, trackIndex)\n    const undoTrack = this.mash.trackOfTypeAtIndex(trackType, undoTrackIndex)\n    const currentIndex = redoTrack.clips.indexOf(clip)\n\n    if (redoTrack.dense) options.insertIndex = frameOrIndex\n    if (undoTrack.dense) {\n      options.undoInsertIndex = currentIndex\n      if (frameOrIndex < currentIndex) options.undoInsertIndex += 1\n    }\n\n    if (!(redoTrack.dense && undoTrack.dense)) {\n      const { frame } = clip\n      const insertFrame = redoTrack.frameForClipNearFrame(clip, frameOrIndex)\n      const offset = insertFrame - frame\n      if (!offset) return // because there would be no change\n\n      options.undoFrame = frame\n      options.redoFrame = frame + offset\n    }\n    this.actionCreate(options)\n  }\n\n  moveEffect(effect: Effect, index = 0) : void {\n    // console.log(this.constructor.name, \"moveEffects\", effectOrArray, index)\n    if (!Is.positive(index)) throw Errors.argument\n\n    const { clip } = this.selection\n    if (!clip) throw Errors.selection\n\n    const { effects } = <Transformable> clip\n    const undoEffects = [...effects]\n\n    const redoEffects : Effect[] = []\n    undoEffects.forEach((other, i) => {\n      if (i === index) redoEffects.push(effect)\n      if (effect === other) return\n\n      redoEffects.push(other)\n    })\n\n    const options = {\n      effects, undoEffects, redoEffects, type: ActionType.MoveEffect\n    }\n    // console.log(this.constructor.name, \"moveEffects\", options)\n    this.actionCreate(options)\n  }\n\n  private _muted = false\n\n  get muted() : boolean { return this._muted }\n\n  set muted(value: boolean) {\n    const boolean = !!value\n    if (this._muted !== boolean) {\n      this._muted = boolean\n      this.mash.gain = this.gain\n    }\n  }\n\n  pause() : void { this.paused = true }\n\n  get paused() : boolean { return this.mash.paused }\n\n  set paused(value : boolean) { if (this._mash) this.mash.paused = !!value }\n\n  play() : void { this.paused = false }\n\n  get position() : number {\n    let per = 0\n    if (this.time.frame) {\n      per = this.time.seconds / this.duration\n      if (per !== 1) per = parseFloat(per.toFixed(this.precision))\n    }\n    return per\n  }\n\n  set position(value : number) {\n    this.goToTime(Time.fromSeconds(this.duration * Number(value), this.fps))\n  }\n\n  get positionStep() : number {\n    return parseFloat(`0.${\"0\".repeat(this.precision - 1)}1`)\n  }\n\n  precision = Default.masher.precision\n\n  redo() : void { if (this.actions.canRedo) this.handleAction(this.actions.redo()) }\n\n  remove(): void {\n    if (this.selection.effect) this.removeEffect(this.selection.effect)\n    else if (this.selection.clip) this.removeClip(this.selection.clip)\n    else if (this.selection.track) this.removeTrack(this.selection.track)\n    else throw Errors.selection\n  }\n\n  removeClip(clip : Clip) : void {\n    const track = this.mash.clipTrack(clip)\n    const options = {\n      redoSelection: {},\n      clip,\n      track,\n      index: track.clips.indexOf(clip),\n      type: ActionType.RemoveClip\n    }\n    this.actionCreate(options)\n  }\n\n  removeEffect(effect: Effect) : void {\n    const { clip } = this.selection\n    if (!clip) throw Errors.selection\n\n    const { effects } = <Transformable> clip\n    const undoEffects = [...effects]\n    const redoEffects = effects.filter(other => other !== effect)\n\n    const options = {\n      redoSelection: { clip: this.selection.clip },\n      effects,\n      undoEffects,\n      redoEffects,\n      type: ActionType.MoveEffect\n    }\n    this.actionCreate(options)\n  }\n\n  removeTrack(track: Track): void {\n    // TODO: create remove track action...\n    console.debug(this.constructor.name, \"removeTrack coming soon...\")\n  }\n\n  save() : void { this.actions.save() }\n\n  selectClip(clip: Clip | undefined): void {\n    const track = clip ? this.mash.clipTrack(clip) : this.selection.track\n    this.selection = { track, clip }\n  }\n\n  selectEffect(effect: Effect | undefined): void {\n    this.selection = { ...this.selection, effect }\n  }\n\n  selectTrack(track: Track | undefined): void {\n    this.selection = { track }\n  }\n\n  private _selection: Selection = {}\n\n  get selection(): Selection { return this._selection }\n\n  set selection(value: Selection) {\n    if (!value) {\n      console.trace(this.constructor.name, \"selection with no value\")\n      throw Errors.internal\n    }\n    const { clip, track, effect } = value\n\n    this.selection.effect = effect\n    this.selection.clip = clip\n    this.selection.track = track || (clip ? this.mash.clipTrack(clip) : undefined)\n    this.eventTarget.emit(EventType.Selection)\n  }\n\n  split() : void {\n    const splitClip = this.selection.clip\n    if (!splitClip) throw Errors.selection\n\n    if (!this.clipCanBeSplit(splitClip, this.time, this.mash.quantize)) {\n      throw Errors.invalid.action\n    }\n\n    const scaled = this.time.scale(this.mash.quantize)\n    const undoFrames = splitClip.frames\n    const redoFrames = scaled.frame - splitClip.frame\n    const insertClip = splitClip.copy\n    insertClip.frames = undoFrames - redoFrames\n    insertClip.frame = scaled.frame\n    if (splitClip.propertyNames.includes(\"trim\")) {\n      (<AudibleFile> insertClip).trim += redoFrames\n    }\n    const trackClips = this.mash.clipTrack(splitClip).clips\n    const options = {\n      type: ActionType.Split,\n      splitClip,\n      insertClip,\n      trackClips,\n      redoFrames,\n      undoFrames,\n      index: 1 + trackClips.indexOf(splitClip),\n      redoSelection: { clip: insertClip },\n      undoSelection: { clip: splitClip },\n    }\n    this.actionCreate(options)\n  }\n\n  get time() : Time { return this.mash.time }\n\n  set time(value: Time) { this.goToTime(value) }\n\n  get timeRange() : TimeRange { return this.mash.timeRange }\n\n  undo() : void { if (this.actions.canUndo) this.handleAction(this.actions.undo()) }\n\n  private _volume = Default.masher.volume\n\n  get volume() : number { return this._volume }\n\n  set volume(value: number) {\n    const number = Number(value)\n    if (this._volume !== number) {\n      if (!Is.positive(number)) throw Errors.invalid.volume\n      this._volume = number\n      if (Is.aboveZero(number)) this.muted = false\n\n      this.mash.gain = this.gain\n    }\n  }\n}\n\nexport { MasherClass }\n","import { Default } from \"../Setup/Default\"\nimport { Definitions } from \"../Definitions/Definitions\"\nimport { Masher, MasherObject } from \"./Masher\"\nimport { MasherClass } from \"./MasherInstance\"\n\nimport { Cache } from \"../Loading/Cache\"\nimport { Interval } from \"../declarations\"\n\nconst MasherFactoryTics = 10 * 1000\nclass MasherFactoryImplementation {\n  private addMasher(masher : Masher): void {\n    if (!this.mashers.length) this.masherStart()\n    this.mashers.push(masher)\n  }\n\n  // call when masher removed\n  destroy(masher : Masher) : void {\n    const index = this.mashers.indexOf(masher)\n    if (index < 0) return\n\n    this.mashers.splice(index, 1)\n    if (!this.mashers.length) this.masherStop()\n  }\n\n  private handleInterval() {\n    const urls = this.mashers.flatMap(masher => masher.mash.loadUrls)\n    Cache.flush(urls)\n\n    const definitions = this.mashers.flatMap(masher => masher.mash.definitions)\n\n    Definitions.map.forEach(definition => {\n      if (definitions.includes(definition) || definition.retain) return\n\n      Definitions.uninstall(definition.id)\n    })\n  }\n\n  instance(object: MasherObject = {}): Masher {\n    object.autoplay ||= Default.masher.autoplay\n    object.precision ||= Default.masher.precision\n    object.loop ||= Default.masher.loop\n    object.fps ||= Default.masher.fps\n    object.volume ||= Default.masher.volume\n    object.buffer ||= Default.masher.buffer\n    const instance = new MasherClass(object)\n    this.addMasher(instance)\n    return instance\n  }\n\n  private interval : Interval | undefined\n\n  private masherStart(): void {\n    if (this.interval) return\n\n    this.interval = setInterval(() => this.handleInterval(), MasherFactoryTics)\n  }\n\n  private masherStop(): void {\n    if (!this.interval) return\n\n    clearInterval(this.interval)\n    this.interval = undefined\n  }\n\n  private mashers : Masher[] = []\n\n}\nconst MasherFactory = new MasherFactoryImplementation()\n\nexport { MasherFactory }\n","import { Factory } from \"../Definitions/Factory\"\nimport { DefinitionTypes } from \"../Setup/Enums\"\n\nDefinitionTypes.forEach(type => { Factory[type].initialize() })\n","\nconst Seconds = (seconds : number, fps : number, duration : number) : string => {\n  let time, pad, do_rest, s = ''\n  if (! duration) duration = seconds\n  time = 60 * 60 // an hour\n  pad = 2\n  if (duration >= time) {\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 60 // a minute\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00:'\n  }\n  time = 1 // a second\n  if (do_rest || (duration >= time)) {\n    if (do_rest) s += ':'\n    if (seconds >= time) {\n      s += String(Math.floor(seconds / time)).padStart(pad, '0')\n      do_rest = true\n      seconds = seconds % time\n    } else s += '00'\n  } else s += '00'\n  if (fps > 1) {\n    if (fps === 10) pad = 1\n    s += '.'\n    if (seconds) {\n      if (pad === 1) seconds = Math.floor(seconds * 10) / 10\n      else seconds = Math.floor(100 * seconds) / 100\n      seconds = Number(String(seconds).substr(2, 2))\n      s += String(seconds).padStart(pad, '0')\n    } else s += '0'.padStart(pad, '0')\n  }\n  return s\n}\n\nexport { Seconds }\n"],"names":["$invalidArgument","$invalidProperty","$internal","Errors","eval","sourceRect","outputSize","conditionTruth","conditionValue","number","get","composition","mashUndefined","audibleContext","mash","action","actions","internal","argument","invalid","canvas","context","definition","duration","audio","url","source","id","object","size","track","trackType","name","value","type","property","factory","volume","selection","unknown","merger","effect","filter","font","scaler","mode","uncached","array","media","frame","frames","fps","seconds","time","timeRange","mainTrackOverlap","unknownMash","unimplemented","wrongClass","objectType","stringType","undefinedType","numberType","booleanType","methodType","isDefined","isNan","Number","isNaN","isInteger","isFloat","isPositive","isAboveZero","isNumber","isArray","Array","length","isPopulatedString","String","isPopulatedObject","Object","keys","isPopulatedArray","Is","aboveZero","boolean","defined","float","integer","method","nan","populatedArray","populatedObject","populatedString","positive","string","undefined","idGenerate","components","idPrefix","push","Date","now","toString","Math","random","substr","join","idPrefixSet","prefix","Id","generate","prefixSet","ActionType","TrackType","TrackTypes","values","ClipType","ClipTypes","DefinitionType","DefinitionTypes","EventType","ModuleType","ModuleTypes","LoadType","MoveType","DataType","DataTypes","TransformType","TransformTypes","MasherAction","MasherActions","CommandType","CommandTypes","OutputFormat","OutputFormats","TypeValue","[object Object]","identifier","label","this","rgbValue","min","max","floor","rgbNumeric","rgb","r","g","b","yuvNumeric","y","u","v","colorYuv2rgb","yuv","floats","colorRgb2hex","colorYuvBlend","yuvs","match","blend","diff","blendYuv","forEach","yuvObject","numericYuv","du","dv","sqrt","colorRgb2yuv","ints","colorStrip","color","toLowerCase","replaceAll","colorValid","colorStripped","style","Option","styleStripped","startsWith","colorTransparent","Color","valid","yuvBlend","rgb2yuv","yuv2rgb","rgb2hex","transparent","strip","DefinitionsMap","Map","DefinitionsByType","definitionsByType","list","definitionsList","set","definitionsClear","clear","definitionsFont","Font","definitionsFromId","definitionsInstalled","console","trace","definitionsInstall","has","definitionsMerger","Merger","definitionsScaler","Scaler","definitionsUninstall","delete","definitions","index","indexOf","splice","Definitions","byType","fromId","install","installed","map","uninstall","Type","modular","JSON","stringify","Boolean","Fontsize","Pixel","Integer","round","Rgb","Rgba","Direction4","Direction8","Mode","find","Types","entries","entry","key","dataType","includes","propertyTypes","instance","propertyType","isObject","dataTypesJson","Property","custom","PropertiedClass","_args","properties","_properties","coerced","coerce","error","constructor","InstanceBase","args","super","definitionId","definitionObject","_id","_label","copy","instanceFromObject","toJSON","quantize","scaleToFps","propertyNames","propertyValues","fromEntries","DefinitionBase","icon","instanceObject","_quantize","_start","_end","propertiesModular","_times","Factories","AudibleContext","sourcesByClipId","_context","Klass","AudioContext","window","webkitAudioContext","createBuffer","buffer","sourceNode","createBufferSource","createGain","currentTime","Promise","resolve","reject","decodeAudioData","audioData","getSource","gainSource","gainNode","disconnect","destination","stop","clipId","start","offset","loops","loop","connect","addSource","Point0","x","VisibleContext","context2d","_context2d","alpha","globalAlpha","getContext","clearSize","clearRect","rect","width","height","composite","globalCompositeOperation","globalThis","document","createElement","dataUrl","toDataURL","drawAtPoint","point","drawImage","fill","drawFillToSize","fillOriginal","fillRect","drawFillInRect","data","drawImageDataAtPoint","putImageData","inRect","fromRect","xIn","yIn","wIn","hIn","w","h","sourceWidth","sourceHeight","drawInRectFromRect","inSize","fromSize","text","drawTextAtPoint","family","shadow","shadowPoint","fontOriginal","shadowOriginal","shadowPointOriginal","fillText","drawInRect","original","result","draw","fillStyle","imageData","imageDataFromSize","imageDataFresh","createImageData","getImageData","imageDataFromRect","drawingSource","shadowColor","shadowOffsetX","shadowOffsetY","ContextTypes","ContextType","ContextFactory","visible","types","sortByFrame","a","sortByLayer","layer","sortByTrack","sortByLabel","Sort","byFrame","byLabel","byTrack","byLayer","TrackClass","Video","clips","dense","clip","clipWithTrack","insertIndex","clipIndex","origIndex","spliceClips","other","moving","sortClips","others","endFrame","startFrame","lastFrame","i","isTransition","Transition","sort","TrackFactory","Factory","static","Audio","Effect","Filter","Image","Theme","VideoSequence","VideoStream","Action","redoSelection","undoSelection","redoAction","done","undoAction","Capitalize","toUpperCase","AddTrackAction","addTrack","removeTrack","AddClipToTrackAction","createTracks","trackIndex","trackOfTypeAtIndex","addClipToTrack","removeClipFromTrack","MoveClipAction","redoFrame","undoFrame","undoInsertIndex","undoTrackIndex","addClip","AddEffectAction","effects","ChangeAction","redoValue","target","undoValue","redoValueNumeric","undoValueNumeric","setValue","redo","ChangeFramesAction","changeClipFrames","ChangeTrimAction","audibleClip","changeClipTrimAndFrames","SplitAction","insertClip","redoFrames","splitClip","trackClips","undoFrames","FreezeAction","freezeClip","frozenClip","MoveEffectAction","redoEffects","undoEffects","RemoveClipAction","classes","AddTrack","AddClipToTrack","MoveClip","AddEffect","Change","ChangeFrames","ChangeTrim","Split","Freeze","MoveEffect","RemoveClip","ActionFactory","ElementScrollProps","elementScrollMetrics","element","getComputedStyle","getPropertyValue","slice","scrollLeft","scrollTop","getBoundingClientRect","Element","scrollMetrics","Emitter","EventTarget","dispatchEvent","CustomEvent","KEYS_SIZED","KEYS_GETTERS","KEYS","$evaluator","conditionalExpression","conditional","condition","is","elements","in","split","arrayFromElements","strings","Evaluator","mergeContext","ceil","setInputSize","conditionals","trueConditional","expression","replaceOperators","evaluateExpression","lengthSeconds","conditionalValue","script","replaceKeys","Function","exception","bind","inputSize","Set","mm_dimensions","mm_width","mm_height","mm_duration","mm_fps","proud","sized","mm_t","position","expressions","RegExp","regExp","vertical","scale","parseFloat","sizedKey","sizedValue","scaled","otherSizedKey","abs","otherValue","t","roundMethod","rounding","roundWithMethod","func","Round","withMethod","pixelRgbaAtIndex","pixels","pixelSafe","pixel","offsetPoint","pt","pixelToPoint","pixelFromPoint","pixelNeighboringRgbas","halfSize","depth","pixelNeighboringPixels","p","pixelToIndex","pixelRgba","pixelColor","pixelPerFrame","zoom","widthFrames","pixelFromFrame","perFrame","pixelToFrame","fromFrame","neighboringRgbas","rgbaAtIndex","toFrame","timeEqualizeRates","time1","time2","gcf","fps1","fps2","greatestCommonDenominator","Time","description","scaleToTime","subtracted","rounded","fromArgs","TimeRange","end","endTime","range1","range2","startTime","scaledTime","scaledRange","range","times","from","_","urlRemoteServer","URL","baseURI","protocol","host","pathname","port","urlAbsolute","href","urlForRemoteServer","remoteServer","suffix","bits","Url","absolute","forRemoteServer","Actions","canRedo","instances","canSave","canUndo","currentAction","currentActionLast","remove","undo","Cache","audible","cachedByKey","urlsByKey","getObject","retainUrls","retainKeys","Loader","fetch","then","response","arrayBuffer","blob","reader","FileReader","onload","onerror","readAsArrayBuffer","decode","cached","promiseOrCached","promise","requestUrl","add","processed","_url","AudioLoader","arrayBufferPromiseFromUrl","audioBufferPromiseFromArrayBuffer","catch","FontLoader","FontFace","load","face","fonts","reason","ImageLoader","image","crossOrigin","src","VideoLoader","videoPromiseFromUrl","video","audioBuffer","sequence","videoFromUrl","ondurationchange","videoWidth","videoHeight","LoaderFactory","loader","Default","masher","precision","autoplay","backcolor","gain","output","videoBitrate","audioBitrate","audioCodec","videoCodec","audioChannels","audioFrequency","trim","speed","theme","transition","videosequence","pattern","increment","begin","padding","videostream","AudibleMixin","Base","z","gainPairs","loadedAudible","muted","ClipMixin","dimensions","clipState","inputCommandAtTimeToSize","mashTime","sources","inputSource","filters","clipObject","definitionTime","withFrame","loadDefinition","definitionUrls","_trim","AudibleFileMixin","trimTime","space","AudioWithAudibleFile","AudioClass","ClipPropertyObjects","ClipDefinitionMixin","_duration","fromSeconds","AudibleDefinitionMixin","stream","waveform","urlAudible","absoluteUrl","caching","loadUrl","unload","some","maybePair","AudibleFileDefinitionMixin","AudioDefinitionWithAudibleFile","AudioDefinitionClass","audioObject","audioDefinition","audioDefinitionFromId","audioInstance","audioFromId","audioInitialize","audioDefine","audioInstall","retain","AudioFactoryImplementation","define","definitionFromId","initialize","Parameter","FilterClass","parameters","parameter","evaluator","scopeSet","evaluated","evaluatedValue","evaluate","input","FilterDefinitionClass","_evaluator","_evaluated","BlendFilter","modes","all_mode","drawWithComposite","ChromaKeyFilter","accurate","similarity","colors","f","pixelsRgb","pixelsYuv","yuvsFromPixelsAccurate","yuvsFromPixels","reverse","matrix","drawImageData","ColorFilter","drawFill","options","ColorChannelMixerFilter","rgbas","first","second","rr","rg","rb","ra","gr","gg","gb","ga","br","bg","bb","ba","ar","ag","ab","aa","RBGA","ConvolutionFilter","bias","rdiv","channel","parseInt","parse","inputData","outputData","area","sum","CropFilter","out_w","out_h","drawing","toSize","drawInRectFromSize","DrawBoxFilter","FontClass","FontDefinitionClass","fontDefaultId","fontDefinition","idString","fontDefinitionFromId","fontInstance","fontFromId","fontInitialize","fontDefaultJson","fontDefine","FontFactoryImplementation","mmFontFile","mmTextFile","mmFontFamily","DrawTextFilter","fontface","fontsize","fontcolor","textfile","shadowcolor","shadowx","shadowy","textStyle","outWidth","outHeight","FadeFilter","typedAlpha","drawWithAlpha","OverlayFilter","ScaleFilter","drawInSizeFromSize","SetSarFilter","sar","filterDefinition","filterDefinitionFromId","filterInstance","filterFromId","filterInitialize","filterDefine","FilterFactoryImplementation","ModularDefinitionMixin","propertyInstances","propertyObject","assign","filterInstances","outContext","contextFiltered","drawFilter","mergerContext","propertiesCustom","inputFilter","ModularMixin","constructProperties","modularDefinitions","promises","all","flatMap","EffectWithModular","EffectClass","EffectDefinitionWithModular","EffectDefinitionClass","effectDefinition","effectDefinitionFromId","effectInstance","effectFromId","effectInitialize","effectBlurJson","effectChromaKeyJson","effectEmbossJson","effectGrayscaleJson","effectSepiaJson","effectSharpenJson","effectTextJson","effectDefine","EffectFactoryImplementation","MergerWithModular","MergerClass","MergerDefinitionWithModular","MergerDefinitionClass","mergerDefaultId","mergerDefinition","mergerDefinitionFromId","mergerInstance","mergerFromId","mergerInitialize","mergerBlendJson","mergerCenterJson","mergerConstrainedJson","mergerDefaultJson","mergerOverlayJson","mergerDefine","MergerFactoryImplementation","ScalerWithModular","ScalerClass","ScalerDefinitionWithModular","ScalerDefinitionClass","scalerDefaultId","scalerDefinition","scalerDefinitionFromId","scalerInstance","scalerFromId","scalerInitialize","scalerDefaultJson","scalerPanJson","scalerScaleJson","scalerDefine","ScalerFactoryImplementation","TransformableMixin","effectInstances","scaledCommand","scaledCommandAtTimeToSize","clipTimeRange","timeRangeRelative","every","inputFilters","scaledContext","scaledContextAtTimeToSize","drawFilters","effected","effectedCommandAtTimeToSize","loadClip","loadTransformable","loadModular","effectedContextAtTimeToSize","command","commandAtTimeToSize","contextAtTimeToSize","VisibleMixin","_dimensions","loadedVisible","_time","ImageWithTransformable","ImageClass","VisibleDefinitionMixin","ImageDefinitionWithVisible","ImageDefinitionWithTransformable","ImageDefinitionClass","urlVisible","definitionPromise","imageDefinition","imageDefinitionFromId","imageInstance","imageFromId","imageInitialize","imageDefine","imageInstall","ImageFactoryImplementation","Composition","emitter","_gain","timing","startOptions","cancelScheduledValues","pair","linearRampToValueAtTime","createSources","destroySources","drawBackground","clipsByTrack","transitionsByTrack","transitioningTracks","visibleTracks","fromTrack","toTrack","transitioned","fromClip","toClip","mergeClipsIntoContextAtTime","visibleContext","mergeContextAtTime","emit","Draw","requestAnimationFrame","compositeVisible","hasSource","debug","playing","startSeconds","startAt","playingClips","adjustSourceGain","clipsToKeep","deleteSource","Volume","contextSecondsWhenStarted","startedMashAt","bufferSource","stopPlaying","MashClass","createdAt","tracks","rest","_backcolor","trackCount","assureClipsHaveFrames","assureTrackOfType","setDrawInterval","newTrack","clipTrackAtIndex","oldTrack","clipTrack","log","emitIfFramesChange","removeClip","Track","_composition","_buffer","bufferFrames","_bufferTimer","setInterval","loadPromise","clearInterval","bufferTime","limitedValue","maxFrames","newFrames","drawInterval","intersects","clipsInTracks","objects","clipsVisible","clipsAudible","fromTimes","clipsAudibleInTracks","clipRange","intersectsTime","flat","clipIntersects","filterIntersecting","clipsVideo","clipsVisibleInTimeRange","fromTime","_paused","audibleClips","compositeAudible","clipsVisibleAtTime","compositeVisibleRequest","paused","clearDrawInterval","timeChange","drawnTime","Loaded","performance","drawnSeconds","streamable","clipUrls","nextFrameTime","seekToTime","Ended","compositionTime","drawTime","origFrames","Duration","_emitter","changeAction","stopLoadAndDraw","_playing","drawWhilePlaying","drawWhileNotPlaying","fullRangeClips","clipsAtTimes","fullRange","timeRangeClips","identifiers","ids","addFrames","seqmentsAtTimes","inputCommand","job","outputs","startAndEnd","compositeAudibleClips","loadUrls","loadedDefinitions","definitionTimes","state","loadPromiseAtTimes","mashState","forcedValue","bufferStop","Pause","startContext","bufferStart","Play","clipsAudibleInTimeRange","timeRangeToBuffer","startPlaying","Playing","seeking","seekTime","Seeked","Seeking","handleDrawInterval","stalled","restartAfterStop","tracksOfType","MashFactory","definitionType","ThemeWithTransformable","ThemeClass","urls","modularUrls","transformablePromise","modularPromise","TransformableDefinitionMixin","WithTransformable","ThemeDefinitionClass","themeDefinition","themeDefinitionFromId","themeInstance","themeFromId","themeInitialize","themeColorJson","themeTextJson","themeDefine","ThemeFactoryImplementation","TransitionWithVisible","TransitionClass","drawVisibleFilters","TransitionDefinitionWithVisible","TransitionDefinitionClass","to","toFilters","toMerger","toScaler","fromFilters","fromMerger","fromScaler","sorted","fromDrawing","toDrawing","transitionDefinition","transitionDefinitionFromId","transitionInstance","transitionFromId","transitionInitialize","transitionCrossfadeJson","transitionDefine","TransitionFactoryImplementation","VideoClassImplementation","divide","WithVisible","VideoDefinitionClassImplementation","cachedOrThrow","sourceOrPromise","seekPromise","timesNeeded","needTimes","timesPromise","shift","framePromise","rate","framesPromise","equalsTime","seekNeeded","onseeked","seek","videoDefinition","videoDefinitionFromId","videoInstance","videoFromId","videoInitialize","videoDefine","videoInstall","VideoFactoryImplementation","StreamableMixin","something","VideoStreamClass","StreamableDefinitionMixin","format","WithStreamable","VideoStreamDefinitionClass","videoStreamDefinition","videoStreamDefinitionFromId","videoStreamInstance","videoStreamFromId","videoStreamInitialize","videoStreamDefine","videoStreamInstall","VideoStreamFactoryImplementation","VideoSequenceClassImplementation","VideoSequenceDefinitionClassImplementation","framesMax","framesArray","urlForFrame","clipDefinitionPromise","zeroTime","allUrls","deleting","s","padStart","videoSequenceDefinition","videoSequenceDefinitionFromId","videoSequenceInstance","videoSequenceFromId","videoSequenceInitialize","videoSequenceDefine","videoSequenceInstall","VideoSequenceFactoryImplementation","MasherClass","_loop","_fps","_volume","clone","createFromObject","handleAction","_actions","frameOrIndex","addEffect","clipType","frameForClipNearFrame","actionCreate","loadMashAndDraw","Save","Undo","Redo","Remove","clipCanBeSplit","changeEffect","changeClip","changeTrack","transform","transformProperty","changeTransformer","currentActionReusable","updateAction","transformType","transformable","transformTarget","_pristine","eventTarget","Fps","goToTime","imageSize","_mash","destroy","_selectedEffects","selectedClips","Mash","moveClip","moveEffect","redoTrack","undoTrack","currentIndex","_muted","per","toFixed","positionStep","repeat","removeEffect","save","_selection","Selection","MasherFactory","mashers","masherStart","masherStop","flush","addMasher","interval","handleInterval","pad","do_rest"],"mappings":"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"}